// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tags Create Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <TagForm
    data={
      Object {
        "background_colour": null,
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "text": "Description",
              },
              "type": "paragraph",
            },
          ],
          "time": 1613561493761,
          "version": "2.19.0",
        },
        "is_featured": true,
        "medium_id": 1,
        "name": "name",
        "slug": "slug",
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-tag",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "background_colour": null,
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "text": "Description",
                },
                "type": "paragraph",
              },
            ],
            "time": 1613561493761,
            "version": "2.19.0",
          },
          "is_featured": true,
          "medium_id": 1,
          "name": "name",
          "slug": "slug",
        }
      }
      layout="vertical"
      name="create-tag"
      onFinish={[Function]}
      onValuesChange={[Function]}
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-tag",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-tag"
          initialValues={
            Object {
              "background_colour": null,
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "text": "Description",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1613561493761,
                "version": "2.19.0",
              },
              "is_featured": true,
              "medium_id": 1,
              "name": "name",
              "slug": "slug",
            }
          }
          name="create-tag"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-tag"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row
              justify="center"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": "1200px",
                  "width": "100%",
                }
              }
            >
              <div
                className="ant-row ant-row-center"
                role="row"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="end"
                    >
                      <div
                        className="ant-row ant-row-end"
                        role="row"
                        style={
                          Object {
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Space>
                                          <div
                                            className="ant-space ant-space-horizontal ant-space-align-center"
                                            style={Object {}}
                                          >
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={0}
                                              key="ant-space-item-0"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={
                                                  Object {
                                                    "marginRight": 8,
                                                  }
                                                }
                                              >
                                                <Button
                                                  htmlType="button"
                                                  onClick={[Function]}
                                                >
                                                  <Wave
                                                    disabled={false}
                                                  >
                                                    <button
                                                      className="ant-btn ant-btn-default"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Reset
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={1}
                                              key="ant-space-item-1"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={Object {}}
                                              >
                                                <Button
                                                  disabled={true}
                                                  htmlType="submit"
                                                  type="primary"
                                                >
                                                  <Wave
                                                    disabled={false}
                                                  >
                                                    <button
                                                      className="ant-btn ant-btn-primary"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Submit
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                          </div>
                                        </Space>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="space-around"
                      style={
                        Object {
                          "background": "#f0f2f5",
                          "marginBottom": "1rem",
                          "padding": "1.25rem",
                        }
                      }
                    >
                      <div
                        className="ant-row ant-row-space-around"
                        role="row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "marginLeft": -20,
                            "marginRight": -20,
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <Col
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12"
                            role="cell"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <TitleInput
                              label="Tag Name"
                              name="name"
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Tag Name"
                                name="name"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter name!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Tag Name"
                                  messageVariables={
                                    Object {
                                      "label": "Tag Name",
                                    }
                                  }
                                  name="name"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_name"
                                    label="Tag Name"
                                    messageVariables={
                                      Object {
                                        "label": "Tag Name",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_name"
                                          label="Tag Name"
                                          name="name"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-tag_name"
                                                title="Tag Name"
                                              >
                                                Tag Name
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Tag Name"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <ForwardRef
                                                        onChange={[Function]}
                                                      />
                                                    }
                                                    value="name"
                                                  >
                                                    <ForwardRef
                                                      id="create-tag_name"
                                                      onChange={[Function]}
                                                      value="name"
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        id="create-tag_name"
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        value="name"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          id="create-tag_name"
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              id="create-tag_name"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                              value="name"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value="name"
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="create-tag_name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value="name"
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </TitleInput>
                            <SlugInput>
                              <FormItem
                                label="Slug"
                                name="slug"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Slug"
                                  messageVariables={
                                    Object {
                                      "label": "Slug",
                                    }
                                  }
                                  name="slug"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_slug"
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name={
                                      Array [
                                        "slug",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_slug"
                                          label="Slug"
                                          name="slug"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-tag_slug"
                                                title="Slug"
                                              >
                                                Slug
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Slug"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={<ForwardRef />}
                                                    value="slug"
                                                  >
                                                    <ForwardRef
                                                      id="create-tag_slug"
                                                      onChange={[Function]}
                                                      value="slug"
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        id="create-tag_slug"
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        value="slug"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          id="create-tag_slug"
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              id="create-tag_slug"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                              value="slug"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value="slug"
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="create-tag_slug"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value="slug"
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </SlugInput>
                            <FormItem
                              label="Featured"
                              name="is_featured"
                              valuePropName="checked"
                            >
                              <WrapperField
                                label="Featured"
                                messageVariables={
                                  Object {
                                    "label": "Featured",
                                  }
                                }
                                name="is_featured"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="checked"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_is_featured"
                                  label="Featured"
                                  messageVariables={
                                    Object {
                                      "label": "Featured",
                                    }
                                  }
                                  name={
                                    Array [
                                      "is_featured",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="checked"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_is_featured"
                                        label="Featured"
                                        name="is_featured"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                        valuePropName="checked"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_is_featured"
                                              title="Featured"
                                            >
                                              Featured
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        valuePropName="checked"
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={<ForwardRef />}
                                                  value={true}
                                                >
                                                  <Switch
                                                    checked={true}
                                                    id="create-tag_is_featured"
                                                    onChange={[Function]}
                                                  >
                                                    <Wave
                                                      insertExtraNode={true}
                                                    >
                                                      <Switch
                                                        checked={true}
                                                        className=""
                                                        id="create-tag_is_featured"
                                                        loadingIcon={
                                                          <div
                                                            className="ant-switch-handle"
                                                          />
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-switch"
                                                      >
                                                        <button
                                                          aria-checked={true}
                                                          className="ant-switch ant-switch-checked"
                                                          id="create-tag_is_featured"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="switch"
                                                          type="button"
                                                        >
                                                          <div
                                                            className="ant-switch-handle"
                                                          />
                                                          <span
                                                            className="ant-switch-inner"
                                                          />
                                                        </button>
                                                      </Switch>
                                                    </Wave>
                                                  </Switch>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              label="Colour"
                              name="background_colour"
                            >
                              <WrapperField
                                label="Colour"
                                messageVariables={
                                  Object {
                                    "label": "Colour",
                                  }
                                }
                                name="background_colour"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_background_colour"
                                  label="Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Colour",
                                    }
                                  }
                                  name={
                                    Array [
                                      "background_colour",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_background_colour"
                                        label="Colour"
                                        name="background_colour"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_background_colour"
                                              title="Colour"
                                            >
                                              Colour
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Colour"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={
                                                    <div
                                                      style={
                                                        Object {
                                                          "position": "relative",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "borderRadius": "1px",
                                                            "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                            "cursor": "pointer",
                                                            "display": "inline-block",
                                                            "padding": "5px",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          style={
                                                            Object {
                                                              "background": "null",
                                                              "borderRadius": "2px",
                                                              "height": "24px",
                                                              "width": "100px",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </div>
                                                  }
                                                  value={null}
                                                >
                                                  <div
                                                    id="create-tag_background_colour"
                                                    onChange={[Function]}
                                                    style={
                                                      Object {
                                                        "position": "relative",
                                                      }
                                                    }
                                                    value={null}
                                                  >
                                                    <div
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "borderRadius": "1px",
                                                          "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                          "cursor": "pointer",
                                                          "display": "inline-block",
                                                          "padding": "5px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "null",
                                                            "borderRadius": "2px",
                                                            "height": "24px",
                                                            "width": "100px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10"
                            role="cell"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <FormItem
                              label="Featured Image"
                              name="medium_id"
                            >
                              <WrapperField
                                label="Featured Image"
                                messageVariables={
                                  Object {
                                    "label": "Featured Image",
                                  }
                                }
                                name="medium_id"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_medium_id"
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name={
                                    Array [
                                      "medium_id",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_medium_id"
                                        label="Featured Image"
                                        name="medium_id"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_medium_id"
                                              title="Featured Image"
                                            >
                                              Featured Image
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured Image"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={
                                                    <MediaSelector
                                                      containerStyles={
                                                        Object {
                                                          "justifyContent": "start",
                                                        }
                                                      }
                                                      maxWidth="350px"
                                                    />
                                                  }
                                                  value={1}
                                                >
                                                  <MediaSelector
                                                    containerStyles={
                                                      Object {
                                                        "justifyContent": "start",
                                                      }
                                                    }
                                                    id="create-tag_medium_id"
                                                    maxWidth="350px"
                                                    onChange={[Function]}
                                                    value={1}
                                                  >
                                                    <Modal
                                                      closable={false}
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                          >
                                                            Cancel
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                            Ok
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      visible={false}
                                                      width="800px"
                                                    >
                                                      <Dialog
                                                        closable={false}
                                                        closeIcon={
                                                          <span
                                                            className="ant-modal-close-x"
                                                          >
                                                            <ForwardRef(CloseOutlined)
                                                              className="ant-modal-close-icon"
                                                            />
                                                          </span>
                                                        }
                                                        confirmLoading={false}
                                                        focusTriggerAfterClose={true}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        maskTransitionName="ant-fade"
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        onClose={[Function]}
                                                        prefixCls="ant-modal"
                                                        transitionName="ant-zoom"
                                                        visible={false}
                                                        width="800px"
                                                        wrapClassName=""
                                                      >
                                                        <PortalWrapper
                                                          visible={false}
                                                        />
                                                      </Dialog>
                                                    </Modal>
                                                    <Space
                                                      direction="vertical"
                                                    >
                                                      <div
                                                        className="ant-space ant-space-vertical"
                                                        style={Object {}}
                                                      >
                                                        <Item
                                                          className="ant-space-item"
                                                          direction="vertical"
                                                          index={0}
                                                          key="ant-space-item-0"
                                                          marginDirection="marginRight"
                                                          wrap={false}
                                                        >
                                                          <div
                                                            className="ant-space-item"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "justifyContent": "start",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "position": "relative",
                                                                  }
                                                                }
                                                              >
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "background": "transparent",
                                                                      "borderStyle": "dashed",
                                                                      "display": "block",
                                                                      "height": "auto",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave
                                                                    disabled={false}
                                                                  >
                                                                    <button
                                                                      className="ant-btn ant-btn-default"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "background": "transparent",
                                                                          "borderStyle": "dashed",
                                                                          "display": "block",
                                                                          "height": "auto",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <PlaceholderImage
                                                                        height="auto"
                                                                        key=".0"
                                                                        maxWidth="350px"
                                                                        width="100%"
                                                                      >
                                                                        <img
                                                                          alt=""
                                                                          height="auto"
                                                                          src="placeholderImage.svg"
                                                                          style={
                                                                            Object {
                                                                              "maxWidth": "350px",
                                                                              "objectFit": "contain",
                                                                              "padding": "1rem",
                                                                            }
                                                                          }
                                                                          width="100%"
                                                                        />
                                                                      </PlaceholderImage>
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Item>
                                                      </div>
                                                    </Space>
                                                  </MediaSelector>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={12}
                          style={
                            Object {
                              "marginLeft": "20px",
                              "marginRight": "auto",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-12"
                            role="cell"
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <DescriptionInput
                              inputProps={
                                Object {
                                  "basic": true,
                                  "placeholder": "Enter Description...",
                                  "style": Object {
                                    "background": "#fff",
                                    "padding": "0.5rem 0.75rem",
                                    "width": "600px",
                                  },
                                }
                              }
                              type="editor"
                            >
                              <FormItem
                                label="Description"
                                name="description"
                              >
                                <WrapperField
                                  label="Description"
                                  messageVariables={
                                    Object {
                                      "label": "Description",
                                    }
                                  }
                                  name="description"
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_description"
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name={
                                      Array [
                                        "description",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_description"
                                          label="Description"
                                          name="description"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="create-tag_description"
                                                title="Description"
                                              >
                                                Description
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Description"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <Editor
                                                        basic={true}
                                                        onChange={[Function]}
                                                        placeholder="Enter Description..."
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                    value={
                                                      Object {
                                                        "blocks": Array [
                                                          Object {
                                                            "data": Object {
                                                              "text": "Description",
                                                            },
                                                            "type": "paragraph",
                                                          },
                                                        ],
                                                        "time": 1613561493761,
                                                        "version": "2.19.0",
                                                      }
                                                    }
                                                  >
                                                    <Editor
                                                      basic={true}
                                                      id="create-tag_description"
                                                      onChange={[Function]}
                                                      placeholder="Enter Description..."
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "padding": "0.5rem 0.75rem",
                                                          "width": "600px",
                                                        }
                                                      }
                                                      value={
                                                        Object {
                                                          "blocks": Array [
                                                            Object {
                                                              "data": Object {
                                                                "text": "Description",
                                                              },
                                                              "type": "paragraph",
                                                            },
                                                          ],
                                                          "time": 1613561493761,
                                                          "version": "2.19.0",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    </Editor>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </DescriptionInput>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      style={
                        Object {
                          "background": "#f0f2f5",
                        }
                      }
                    >
                      <div
                        className="ant-row"
                        role="row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <MetaForm>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Data"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Data"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Meta Data
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Code Injection"
                                  isActive={false}
                                  key="1"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="1"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Code Injection"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Code Injection
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Fields"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Fields"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Meta Fields
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                        </MetaForm>
                      </div>
                    </Row>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </TagForm>
</Provider>
`;

exports[`Tags Create Form component snapshot testing should match component with empty data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <TagForm
    data={Array []}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-tag",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      layout="vertical"
      name="create-tag"
      onFinish={[Function]}
      onValuesChange={[Function]}
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-tag",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-tag"
          initialValues={Object {}}
          name="create-tag"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-tag"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row
              justify="center"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": "1200px",
                  "width": "100%",
                }
              }
            >
              <div
                className="ant-row ant-row-center"
                role="row"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="end"
                    >
                      <div
                        className="ant-row ant-row-end"
                        role="row"
                        style={
                          Object {
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Space>
                                          <div
                                            className="ant-space ant-space-horizontal ant-space-align-center"
                                            style={Object {}}
                                          >
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={0}
                                              key="ant-space-item-0"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={
                                                  Object {
                                                    "marginRight": 8,
                                                  }
                                                }
                                              >
                                                <Button
                                                  htmlType="button"
                                                  onClick={[Function]}
                                                >
                                                  <Wave
                                                    disabled={false}
                                                  >
                                                    <button
                                                      className="ant-btn ant-btn-default"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Reset
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={1}
                                              key="ant-space-item-1"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={Object {}}
                                              >
                                                <Button
                                                  disabled={true}
                                                  htmlType="submit"
                                                  type="primary"
                                                >
                                                  <Wave
                                                    disabled={false}
                                                  >
                                                    <button
                                                      className="ant-btn ant-btn-primary"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Submit
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                          </div>
                                        </Space>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="space-around"
                      style={
                        Object {
                          "background": "#f0f2f5",
                          "marginBottom": "1rem",
                          "padding": "1.25rem",
                        }
                      }
                    >
                      <div
                        className="ant-row ant-row-space-around"
                        role="row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "marginLeft": -20,
                            "marginRight": -20,
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <Col
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12"
                            role="cell"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <TitleInput
                              label="Tag Name"
                              name="name"
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Tag Name"
                                name="name"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter name!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Tag Name"
                                  messageVariables={
                                    Object {
                                      "label": "Tag Name",
                                    }
                                  }
                                  name="name"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_name"
                                    label="Tag Name"
                                    messageVariables={
                                      Object {
                                        "label": "Tag Name",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_name"
                                          label="Tag Name"
                                          name="name"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-tag_name"
                                                title="Tag Name"
                                              >
                                                Tag Name
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Tag Name"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <ForwardRef
                                                        onChange={[Function]}
                                                      />
                                                    }
                                                  >
                                                    <ForwardRef
                                                      id="create-tag_name"
                                                      onChange={[Function]}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        id="create-tag_name"
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          id="create-tag_name"
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              id="create-tag_name"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="create-tag_name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </TitleInput>
                            <SlugInput>
                              <FormItem
                                label="Slug"
                                name="slug"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Slug"
                                  messageVariables={
                                    Object {
                                      "label": "Slug",
                                    }
                                  }
                                  name="slug"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_slug"
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name={
                                      Array [
                                        "slug",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_slug"
                                          label="Slug"
                                          name="slug"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-tag_slug"
                                                title="Slug"
                                              >
                                                Slug
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Slug"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={<ForwardRef />}
                                                  >
                                                    <ForwardRef
                                                      id="create-tag_slug"
                                                      onChange={[Function]}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        id="create-tag_slug"
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          id="create-tag_slug"
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              id="create-tag_slug"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="create-tag_slug"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </SlugInput>
                            <FormItem
                              label="Featured"
                              name="is_featured"
                              valuePropName="checked"
                            >
                              <WrapperField
                                label="Featured"
                                messageVariables={
                                  Object {
                                    "label": "Featured",
                                  }
                                }
                                name="is_featured"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="checked"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_is_featured"
                                  label="Featured"
                                  messageVariables={
                                    Object {
                                      "label": "Featured",
                                    }
                                  }
                                  name={
                                    Array [
                                      "is_featured",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="checked"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_is_featured"
                                        label="Featured"
                                        name="is_featured"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                        valuePropName="checked"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_is_featured"
                                              title="Featured"
                                            >
                                              Featured
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        valuePropName="checked"
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={<ForwardRef />}
                                                >
                                                  <Switch
                                                    id="create-tag_is_featured"
                                                    onChange={[Function]}
                                                  >
                                                    <Wave
                                                      insertExtraNode={true}
                                                    >
                                                      <Switch
                                                        className=""
                                                        id="create-tag_is_featured"
                                                        loadingIcon={
                                                          <div
                                                            className="ant-switch-handle"
                                                          />
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-switch"
                                                      >
                                                        <button
                                                          aria-checked={false}
                                                          className="ant-switch"
                                                          id="create-tag_is_featured"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="switch"
                                                          type="button"
                                                        >
                                                          <div
                                                            className="ant-switch-handle"
                                                          />
                                                          <span
                                                            className="ant-switch-inner"
                                                          />
                                                        </button>
                                                      </Switch>
                                                    </Wave>
                                                  </Switch>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              label="Colour"
                              name="background_colour"
                            >
                              <WrapperField
                                label="Colour"
                                messageVariables={
                                  Object {
                                    "label": "Colour",
                                  }
                                }
                                name="background_colour"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_background_colour"
                                  label="Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Colour",
                                    }
                                  }
                                  name={
                                    Array [
                                      "background_colour",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_background_colour"
                                        label="Colour"
                                        name="background_colour"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_background_colour"
                                              title="Colour"
                                            >
                                              Colour
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Colour"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={
                                                    <div
                                                      style={
                                                        Object {
                                                          "position": "relative",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "borderRadius": "1px",
                                                            "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                            "cursor": "pointer",
                                                            "display": "inline-block",
                                                            "padding": "5px",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          style={
                                                            Object {
                                                              "background": "null",
                                                              "borderRadius": "2px",
                                                              "height": "24px",
                                                              "width": "100px",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </div>
                                                  }
                                                >
                                                  <div
                                                    id="create-tag_background_colour"
                                                    onChange={[Function]}
                                                    style={
                                                      Object {
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "borderRadius": "1px",
                                                          "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                          "cursor": "pointer",
                                                          "display": "inline-block",
                                                          "padding": "5px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "null",
                                                            "borderRadius": "2px",
                                                            "height": "24px",
                                                            "width": "100px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10"
                            role="cell"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <FormItem
                              label="Featured Image"
                              name="medium_id"
                            >
                              <WrapperField
                                label="Featured Image"
                                messageVariables={
                                  Object {
                                    "label": "Featured Image",
                                  }
                                }
                                name="medium_id"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_medium_id"
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name={
                                    Array [
                                      "medium_id",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_medium_id"
                                        label="Featured Image"
                                        name="medium_id"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_medium_id"
                                              title="Featured Image"
                                            >
                                              Featured Image
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured Image"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={
                                                    <MediaSelector
                                                      containerStyles={
                                                        Object {
                                                          "justifyContent": "start",
                                                        }
                                                      }
                                                      maxWidth="350px"
                                                    />
                                                  }
                                                >
                                                  <MediaSelector
                                                    containerStyles={
                                                      Object {
                                                        "justifyContent": "start",
                                                      }
                                                    }
                                                    id="create-tag_medium_id"
                                                    maxWidth="350px"
                                                    onChange={[Function]}
                                                  >
                                                    <Modal
                                                      closable={false}
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                          >
                                                            Cancel
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                            Ok
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      visible={false}
                                                      width="800px"
                                                    >
                                                      <Dialog
                                                        closable={false}
                                                        closeIcon={
                                                          <span
                                                            className="ant-modal-close-x"
                                                          >
                                                            <ForwardRef(CloseOutlined)
                                                              className="ant-modal-close-icon"
                                                            />
                                                          </span>
                                                        }
                                                        confirmLoading={false}
                                                        focusTriggerAfterClose={true}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        maskTransitionName="ant-fade"
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        onClose={[Function]}
                                                        prefixCls="ant-modal"
                                                        transitionName="ant-zoom"
                                                        visible={false}
                                                        width="800px"
                                                        wrapClassName=""
                                                      >
                                                        <PortalWrapper
                                                          visible={false}
                                                        />
                                                      </Dialog>
                                                    </Modal>
                                                    <Space
                                                      direction="vertical"
                                                    >
                                                      <div
                                                        className="ant-space ant-space-vertical"
                                                        style={Object {}}
                                                      >
                                                        <Item
                                                          className="ant-space-item"
                                                          direction="vertical"
                                                          index={0}
                                                          key="ant-space-item-0"
                                                          marginDirection="marginRight"
                                                          wrap={false}
                                                        >
                                                          <div
                                                            className="ant-space-item"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "justifyContent": "start",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "position": "relative",
                                                                  }
                                                                }
                                                              >
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "background": "transparent",
                                                                      "borderStyle": "dashed",
                                                                      "display": "block",
                                                                      "height": "auto",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave
                                                                    disabled={false}
                                                                  >
                                                                    <button
                                                                      className="ant-btn ant-btn-default"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "background": "transparent",
                                                                          "borderStyle": "dashed",
                                                                          "display": "block",
                                                                          "height": "auto",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <PlaceholderImage
                                                                        height="auto"
                                                                        key=".0"
                                                                        maxWidth="350px"
                                                                        width="100%"
                                                                      >
                                                                        <img
                                                                          alt=""
                                                                          height="auto"
                                                                          src="placeholderImage.svg"
                                                                          style={
                                                                            Object {
                                                                              "maxWidth": "350px",
                                                                              "objectFit": "contain",
                                                                              "padding": "1rem",
                                                                            }
                                                                          }
                                                                          width="100%"
                                                                        />
                                                                      </PlaceholderImage>
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Item>
                                                      </div>
                                                    </Space>
                                                  </MediaSelector>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={12}
                          style={
                            Object {
                              "marginLeft": "20px",
                              "marginRight": "auto",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-12"
                            role="cell"
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <DescriptionInput
                              inputProps={
                                Object {
                                  "basic": true,
                                  "placeholder": "Enter Description...",
                                  "style": Object {
                                    "background": "#fff",
                                    "padding": "0.5rem 0.75rem",
                                    "width": "600px",
                                  },
                                }
                              }
                              type="editor"
                            >
                              <FormItem
                                label="Description"
                                name="description"
                              >
                                <WrapperField
                                  label="Description"
                                  messageVariables={
                                    Object {
                                      "label": "Description",
                                    }
                                  }
                                  name="description"
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_description"
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name={
                                      Array [
                                        "description",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_description"
                                          label="Description"
                                          name="description"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="create-tag_description"
                                                title="Description"
                                              >
                                                Description
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Description"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <Editor
                                                        basic={true}
                                                        onChange={[Function]}
                                                        placeholder="Enter Description..."
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                  >
                                                    <Editor
                                                      basic={true}
                                                      id="create-tag_description"
                                                      onChange={[Function]}
                                                      placeholder="Enter Description..."
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "padding": "0.5rem 0.75rem",
                                                          "width": "600px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    </Editor>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </DescriptionInput>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      style={
                        Object {
                          "background": "#f0f2f5",
                        }
                      }
                    >
                      <div
                        className="ant-row"
                        role="row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <MetaForm>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Data"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Data"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Meta Data
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Code Injection"
                                  isActive={false}
                                  key="1"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="1"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Code Injection"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Code Injection
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Fields"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Fields"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Meta Fields
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                        </MetaForm>
                      </div>
                    </Row>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </TagForm>
</Provider>
`;

exports[`Tags Create Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <TagForm>
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-tag",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      layout="vertical"
      name="create-tag"
      onFinish={[Function]}
      onValuesChange={[Function]}
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-tag",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-tag"
          initialValues={Object {}}
          name="create-tag"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-tag"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row
              justify="center"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": "1200px",
                  "width": "100%",
                }
              }
            >
              <div
                className="ant-row ant-row-center"
                role="row"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="end"
                    >
                      <div
                        className="ant-row ant-row-end"
                        role="row"
                        style={
                          Object {
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Space>
                                          <div
                                            className="ant-space ant-space-horizontal ant-space-align-center"
                                            style={Object {}}
                                          >
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={0}
                                              key="ant-space-item-0"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={
                                                  Object {
                                                    "marginRight": 8,
                                                  }
                                                }
                                              >
                                                <Button
                                                  htmlType="button"
                                                  onClick={[Function]}
                                                >
                                                  <Wave
                                                    disabled={false}
                                                  >
                                                    <button
                                                      className="ant-btn ant-btn-default"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Reset
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={1}
                                              key="ant-space-item-1"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={Object {}}
                                              >
                                                <Button
                                                  disabled={true}
                                                  htmlType="submit"
                                                  type="primary"
                                                >
                                                  <Wave
                                                    disabled={false}
                                                  >
                                                    <button
                                                      className="ant-btn ant-btn-primary"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Submit
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                          </div>
                                        </Space>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="space-around"
                      style={
                        Object {
                          "background": "#f0f2f5",
                          "marginBottom": "1rem",
                          "padding": "1.25rem",
                        }
                      }
                    >
                      <div
                        className="ant-row ant-row-space-around"
                        role="row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "marginLeft": -20,
                            "marginRight": -20,
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <Col
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12"
                            role="cell"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <TitleInput
                              label="Tag Name"
                              name="name"
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Tag Name"
                                name="name"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter name!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Tag Name"
                                  messageVariables={
                                    Object {
                                      "label": "Tag Name",
                                    }
                                  }
                                  name="name"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_name"
                                    label="Tag Name"
                                    messageVariables={
                                      Object {
                                        "label": "Tag Name",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_name"
                                          label="Tag Name"
                                          name="name"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-tag_name"
                                                title="Tag Name"
                                              >
                                                Tag Name
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Tag Name"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <ForwardRef
                                                        onChange={[Function]}
                                                      />
                                                    }
                                                  >
                                                    <ForwardRef
                                                      id="create-tag_name"
                                                      onChange={[Function]}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        id="create-tag_name"
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          id="create-tag_name"
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              id="create-tag_name"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="create-tag_name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </TitleInput>
                            <SlugInput>
                              <FormItem
                                label="Slug"
                                name="slug"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Slug"
                                  messageVariables={
                                    Object {
                                      "label": "Slug",
                                    }
                                  }
                                  name="slug"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_slug"
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name={
                                      Array [
                                        "slug",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_slug"
                                          label="Slug"
                                          name="slug"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-tag_slug"
                                                title="Slug"
                                              >
                                                Slug
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Slug"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={<ForwardRef />}
                                                  >
                                                    <ForwardRef
                                                      id="create-tag_slug"
                                                      onChange={[Function]}
                                                    >
                                                      <ForwardRef
                                                        affixWrapperClassName=""
                                                        groupClassName=""
                                                        id="create-tag_slug"
                                                        inputClassName=""
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-input"
                                                        wrapperClassName=""
                                                      >
                                                        <BaseInput
                                                          affixWrapperClassName=""
                                                          focused={false}
                                                          groupClassName=""
                                                          handleReset={[Function]}
                                                          id="create-tag_slug"
                                                          inputElement={
                                                            <input
                                                              className="ant-input"
                                                              id="create-tag_slug"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                            />
                                                          }
                                                          prefixCls="ant-input"
                                                          suffix={null}
                                                          triggerFocus={[Function]}
                                                          value=""
                                                          wrapperClassName=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="create-tag_slug"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </BaseInput>
                                                      </ForwardRef>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </SlugInput>
                            <FormItem
                              label="Featured"
                              name="is_featured"
                              valuePropName="checked"
                            >
                              <WrapperField
                                label="Featured"
                                messageVariables={
                                  Object {
                                    "label": "Featured",
                                  }
                                }
                                name="is_featured"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                                valuePropName="checked"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_is_featured"
                                  label="Featured"
                                  messageVariables={
                                    Object {
                                      "label": "Featured",
                                    }
                                  }
                                  name={
                                    Array [
                                      "is_featured",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="checked"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_is_featured"
                                        label="Featured"
                                        name="is_featured"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                        valuePropName="checked"
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_is_featured"
                                              title="Featured"
                                            >
                                              Featured
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        valuePropName="checked"
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={<ForwardRef />}
                                                >
                                                  <Switch
                                                    id="create-tag_is_featured"
                                                    onChange={[Function]}
                                                  >
                                                    <Wave
                                                      insertExtraNode={true}
                                                    >
                                                      <Switch
                                                        className=""
                                                        id="create-tag_is_featured"
                                                        loadingIcon={
                                                          <div
                                                            className="ant-switch-handle"
                                                          />
                                                        }
                                                        onChange={[Function]}
                                                        prefixCls="ant-switch"
                                                      >
                                                        <button
                                                          aria-checked={false}
                                                          className="ant-switch"
                                                          id="create-tag_is_featured"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="switch"
                                                          type="button"
                                                        >
                                                          <div
                                                            className="ant-switch-handle"
                                                          />
                                                          <span
                                                            className="ant-switch-inner"
                                                          />
                                                        </button>
                                                      </Switch>
                                                    </Wave>
                                                  </Switch>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <FormItem
                              label="Colour"
                              name="background_colour"
                            >
                              <WrapperField
                                label="Colour"
                                messageVariables={
                                  Object {
                                    "label": "Colour",
                                  }
                                }
                                name="background_colour"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_background_colour"
                                  label="Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Colour",
                                    }
                                  }
                                  name={
                                    Array [
                                      "background_colour",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_background_colour"
                                        label="Colour"
                                        name="background_colour"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_background_colour"
                                              title="Colour"
                                            >
                                              Colour
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Colour"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={
                                                    <div
                                                      style={
                                                        Object {
                                                          "position": "relative",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "borderRadius": "1px",
                                                            "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                            "cursor": "pointer",
                                                            "display": "inline-block",
                                                            "padding": "5px",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          style={
                                                            Object {
                                                              "background": "null",
                                                              "borderRadius": "2px",
                                                              "height": "24px",
                                                              "width": "100px",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </div>
                                                  }
                                                >
                                                  <div
                                                    id="create-tag_background_colour"
                                                    onChange={[Function]}
                                                    style={
                                                      Object {
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "borderRadius": "1px",
                                                          "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                          "cursor": "pointer",
                                                          "display": "inline-block",
                                                          "padding": "5px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "null",
                                                            "borderRadius": "2px",
                                                            "height": "24px",
                                                            "width": "100px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10"
                            role="cell"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <FormItem
                              label="Featured Image"
                              name="medium_id"
                            >
                              <WrapperField
                                label="Featured Image"
                                messageVariables={
                                  Object {
                                    "label": "Featured Image",
                                  }
                                }
                                name="medium_id"
                                onMetaChange={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-tag",
                                      },
                                      "_init": true,
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_medium_id"
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name={
                                    Array [
                                      "medium_id",
                                    ]
                                  }
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      role="row"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-tag_medium_id"
                                        label="Featured Image"
                                        name="medium_id"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-tag_medium_id"
                                              title="Featured Image"
                                            >
                                              Featured Image
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured Image"
                                        name={Array []}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validating={false}
                                        warnings={Array []}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            role="cell"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={
                                                    <MediaSelector
                                                      containerStyles={
                                                        Object {
                                                          "justifyContent": "start",
                                                        }
                                                      }
                                                      maxWidth="350px"
                                                    />
                                                  }
                                                >
                                                  <MediaSelector
                                                    containerStyles={
                                                      Object {
                                                        "justifyContent": "start",
                                                      }
                                                    }
                                                    id="create-tag_medium_id"
                                                    maxWidth="350px"
                                                    onChange={[Function]}
                                                  >
                                                    <Modal
                                                      closable={false}
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                          >
                                                            Cancel
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                            Ok
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      visible={false}
                                                      width="800px"
                                                    >
                                                      <Dialog
                                                        closable={false}
                                                        closeIcon={
                                                          <span
                                                            className="ant-modal-close-x"
                                                          >
                                                            <ForwardRef(CloseOutlined)
                                                              className="ant-modal-close-icon"
                                                            />
                                                          </span>
                                                        }
                                                        confirmLoading={false}
                                                        focusTriggerAfterClose={true}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        maskTransitionName="ant-fade"
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        onClose={[Function]}
                                                        prefixCls="ant-modal"
                                                        transitionName="ant-zoom"
                                                        visible={false}
                                                        width="800px"
                                                        wrapClassName=""
                                                      >
                                                        <PortalWrapper
                                                          visible={false}
                                                        />
                                                      </Dialog>
                                                    </Modal>
                                                    <Space
                                                      direction="vertical"
                                                    >
                                                      <div
                                                        className="ant-space ant-space-vertical"
                                                        style={Object {}}
                                                      >
                                                        <Item
                                                          className="ant-space-item"
                                                          direction="vertical"
                                                          index={0}
                                                          key="ant-space-item-0"
                                                          marginDirection="marginRight"
                                                          wrap={false}
                                                        >
                                                          <div
                                                            className="ant-space-item"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "justifyContent": "start",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "position": "relative",
                                                                  }
                                                                }
                                                              >
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "background": "transparent",
                                                                      "borderStyle": "dashed",
                                                                      "display": "block",
                                                                      "height": "auto",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave
                                                                    disabled={false}
                                                                  >
                                                                    <button
                                                                      className="ant-btn ant-btn-default"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "background": "transparent",
                                                                          "borderStyle": "dashed",
                                                                          "display": "block",
                                                                          "height": "auto",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <PlaceholderImage
                                                                        height="auto"
                                                                        key=".0"
                                                                        maxWidth="350px"
                                                                        width="100%"
                                                                      >
                                                                        <img
                                                                          alt=""
                                                                          height="auto"
                                                                          src="placeholderImage.svg"
                                                                          style={
                                                                            Object {
                                                                              "maxWidth": "350px",
                                                                              "objectFit": "contain",
                                                                              "padding": "1rem",
                                                                            }
                                                                          }
                                                                          width="100%"
                                                                        />
                                                                      </PlaceholderImage>
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Item>
                                                      </div>
                                                    </Space>
                                                  </MediaSelector>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              className="ant-form-item-explain-connected"
                                              errors={Array []}
                                              helpStatus=""
                                              warnings={Array []}
                                            >
                                              <CSSMotion
                                                motionAppear={false}
                                                motionDeadline={500}
                                                motionEnter={false}
                                                motionName="ant-show-help"
                                                onAppearActive={[Function]}
                                                onAppearEnd={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterEnd={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveEnd={[Function]}
                                                onLeaveStart={[Function]}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={12}
                          style={
                            Object {
                              "marginLeft": "20px",
                              "marginRight": "auto",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-12"
                            role="cell"
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <DescriptionInput
                              inputProps={
                                Object {
                                  "basic": true,
                                  "placeholder": "Enter Description...",
                                  "style": Object {
                                    "background": "#fff",
                                    "padding": "0.5rem 0.75rem",
                                    "width": "600px",
                                  },
                                }
                              }
                              type="editor"
                            >
                              <FormItem
                                label="Description"
                                name="description"
                              >
                                <WrapperField
                                  label="Description"
                                  messageVariables={
                                    Object {
                                      "label": "Description",
                                    }
                                  }
                                  name="description"
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-tag",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_description"
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name={
                                      Array [
                                        "description",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-tag_description"
                                          label="Description"
                                          name="description"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="create-tag_description"
                                                title="Description"
                                              >
                                                Description
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Description"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <Editor
                                                        basic={true}
                                                        onChange={[Function]}
                                                        placeholder="Enter Description..."
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                  >
                                                    <Editor
                                                      basic={true}
                                                      id="create-tag_description"
                                                      onChange={[Function]}
                                                      placeholder="Enter Description..."
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "padding": "0.5rem 0.75rem",
                                                          "width": "600px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    </Editor>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </DescriptionInput>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    role="cell"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      style={
                        Object {
                          "background": "#f0f2f5",
                        }
                      }
                    >
                      <div
                        className="ant-row"
                        role="row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <MetaForm>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Data"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Data"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Meta Data
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Code Injection"
                                  isActive={false}
                                  key="1"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="1"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Code Injection"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Code Injection
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Fields"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Fields"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <div>
                                          <Button
                                            className="ant-collapse-arrow"
                                          >
                                            <Wave
                                              disabled={false}
                                            >
                                              <button
                                                className="ant-btn ant-btn-default ant-collapse-arrow"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Expand
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                        Meta Fields
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                        </MetaForm>
                      </div>
                    </Row>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </TagForm>
</Provider>
`;
