// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Organisation Permission Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PermissionForm
    data={
      Object {
        "created_at": "2021-01-18T13:01:49.765216Z",
        "created_by_id": 0,
        "deleted_at": null,
        "id": 2,
        "organisation_id": 9,
        "spaces": 4,
        "updated_at": "2021-06-02T08:10:13.149499Z",
        "updated_by_id": 1,
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "created_at": "2021-01-18T13:01:49.765216Z",
          "created_by_id": 0,
          "deleted_at": null,
          "id": 2,
          "organisation_id": 9,
          "spaces": 4,
          "updated_at": "2021-06-02T08:10:13.149499Z",
          "updated_by_id": 1,
        }
      }
      labelCol={
        Object {
          "span": 10,
        }
      }
      name="create-category"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 8,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={
            Object {
              "created_at": "2021-01-18T13:01:49.765216Z",
              "created_by_id": 0,
              "deleted_at": null,
              "id": 2,
              "organisation_id": 9,
              "spaces": 4,
              "updated_at": "2021-06-02T08:10:13.149499Z",
              "updated_by_id": 1,
            }
          }
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <FormItem
              label="Organisation"
              name="organisation_id"
            >
              <WrapperField
                label="Organisation"
                messageVariables={
                  Object {
                    "label": "Organisation",
                  }
                }
                name="organisation_id"
                onReset={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_organisation_id"
                  label="Organisation"
                  messageVariables={
                    Object {
                      "label": "Organisation",
                    }
                  }
                  name={
                    Array [
                      "organisation_id",
                    ]
                  }
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_organisation_id"
                        label="Organisation"
                        name="organisation_id"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_organisation_id"
                              title="Organisation"
                            >
                              Organisation
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Organisation"
                        name={
                          Array [
                            "organisation_id",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value={9}
                                >
                                  <Selector
                                    action="Organisations"
                                    display="title"
                                    id="create-category_organisation_id"
                                    onChange={[Function]}
                                    placeholder="Select organisation"
                                    value={9}
                                  >
                                    <ForwardRef(InternalSelect)
                                      allowClear={true}
                                      autoClearSearchValue={true}
                                      bordered={true}
                                      defaultValue={
                                        Array [
                                          9,
                                        ]
                                      }
                                      filterOption={[Function]}
                                      getPopupContainer={[Function]}
                                      listHeight={128}
                                      loading={false}
                                      notFoundContent={null}
                                      onChange={[Function]}
                                      onPopupScroll={[Function]}
                                      onSearch={[Function]}
                                      placeholder="Select organisation"
                                      searchValue=""
                                      value={
                                        Array [
                                          9,
                                        ]
                                      }
                                    >
                                      <Select
                                        allowClear={true}
                                        autoClearSearchValue={true}
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={
                                          Array [
                                            9,
                                          ]
                                        }
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        getPopupContainer={[Function]}
                                        inputIcon={[Function]}
                                        listHeight={128}
                                        listItemHeight={24}
                                        loading={false}
                                        menuItemSelectedIcon={null}
                                        notFoundContent={null}
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        onSearch={[Function]}
                                        placeholder="Select organisation"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        searchValue=""
                                        transitionName="ant-slide-up"
                                        value={
                                          Array [
                                            9,
                                          ]
                                        }
                                      >
                                        <ForwardRef(Select)
                                          allowClear={true}
                                          autoClearSearchValue={true}
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              9,
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          getPopupContainer={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={null}
                                          notFoundContent={null}
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          onSearch={[Function]}
                                          placeholder="Select organisation"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          searchValue=""
                                          transitionName="ant-slide-up"
                                          value={
                                            Array [
                                              9,
                                            ]
                                          }
                                        >
                                          <div
                                            className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={true}
                                              getPopupContainer={[Function]}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={128}
                                                  id="rc_select_TEST_OR_SSR"
                                                  itemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={null}
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onScroll={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={
                                                    Set {
                                                      9,
                                                    }
                                                  }
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="ant-slide-up"
                                              visible={false}
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                autoDestroy={false}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getPopupContainer={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={Array []}
                                                      height={128}
                                                      id="rc_select_TEST_OR_SSR"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={null}
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={Array []}
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          9,
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="ant-slide-up"
                                                popupVisible={false}
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  allowClear={true}
                                                  autoClearSearchValue={true}
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue={
                                                    Array [
                                                      9,
                                                    ]
                                                  }
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-item"
                                                          title="9"
                                                        >
                                                          9
                                                        </span>
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  getPopupContainer={[Function]}
                                                  id="rc_select_TEST_OR_SSR"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  loading={false}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Select organisation"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={false}
                                                  tokenWithEnter={false}
                                                  transitionName="ant-slide-up"
                                                  value={
                                                    Array [
                                                      9,
                                                    ]
                                                  }
                                                  values={
                                                    Array [
                                                      Object {
                                                        "disabled": undefined,
                                                        "isCacheable": true,
                                                        "key": 9,
                                                        "label": 9,
                                                        "value": 9,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SingleSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      autoClearSearchValue={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          9,
                                                        ]
                                                      }
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-item"
                                                              title="9"
                                                            >
                                                              9
                                                            </span>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      getPopupContainer={[Function]}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputCompositionEnd={[Function]}
                                                      onInputCompositionStart={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onInputPaste={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select organisation"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={false}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      value={
                                                        Array [
                                                          9,
                                                        ]
                                                      }
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "isCacheable": true,
                                                            "key": 9,
                                                            "label": 9,
                                                            "value": 9,
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <span
                                                        className="ant-select-selection-search"
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          attrs={Object {}}
                                                          editable={false}
                                                          id="rc_select_TEST_OR_SSR"
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onPaste={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </Input>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-item"
                                                        title="9"
                                                      >
                                                        9
                                                      </span>
                                                    </SingleSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                            <TransBtn
                                              className="ant-select-arrow"
                                              customizeIcon={[Function]}
                                              customizeIconProps={
                                                Object {
                                                  "focused": false,
                                                  "loading": false,
                                                  "open": undefined,
                                                  "searchValue": "",
                                                  "showSearch": false,
                                                }
                                              }
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-arrow"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-select-suffix"
                                                >
                                                  <AntdIcon
                                                    className="ant-select-suffix"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-select-suffix"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TransBtn>
                                            <TransBtn
                                              className="ant-select-clear"
                                              customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                              onMouseDown={[Function]}
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-clear"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(CloseCircleFilled)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "close-circle",
                                                        "theme": "filled",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="close-circle"
                                                      className="anticon anticon-close-circle"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="close-circle"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-close-circle"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                            key="svg-close-circle-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(CloseCircleFilled)>
                                              </span>
                                            </TransBtn>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </ForwardRef(InternalSelect)>
                                  </Selector>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Spaces"
              name="spaces"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Spaces"
                messageVariables={
                  Object {
                    "label": "Spaces",
                  }
                }
                name="spaces"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_spaces"
                  label="Spaces"
                  messageVariables={
                    Object {
                      "label": "Spaces",
                    }
                  }
                  name={
                    Array [
                      "spaces",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_spaces"
                        label="Spaces"
                        name="spaces"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_spaces"
                              title="Spaces"
                            >
                              Spaces
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Spaces"
                        name={
                          Array [
                            "spaces",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                  value={4}
                                >
                                  <ForwardRef
                                    id="create-category_spaces"
                                    min={-1}
                                    onChange={[Function]}
                                    value={4}
                                  >
                                    <InputNumber
                                      className=""
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_spaces"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      value={4}
                                    >
                                      <div
                                        className="ant-input-number"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow="4"
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_spaces"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value="4"
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 10,
                  "span": 14,
                }
              }
            >
              <Row
                className="ant-form-item"
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    requiredMark={true}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    onDomErrorVisibleChange={[Function]}
                    prefixCls="ant-form"
                    status=""
                    validateStatus=""
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={10}
                      span={14}
                    >
                      <div
                        className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Space>
                              <div
                                className="ant-space ant-space-horizontal ant-space-align-center"
                                style={Object {}}
                              >
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={0}
                                  key="ant-space-item-0"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={1}
                                  key="ant-space-item-1"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={Object {}}
                                  >
                                    <Button
                                      htmlType="button"
                                      onClick={[Function]}
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Reset
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                              </div>
                            </Space>
                          </div>
                        </div>
                        <ErrorList
                          errors={Array []}
                          onDomErrorVisibleChange={[Function]}
                        >
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="ant-show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </ErrorList>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PermissionForm>
</Provider>
`;

exports[`Organisation Permission Form component snapshot testing should match component with empty data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PermissionForm
    data={Array []}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      labelCol={
        Object {
          "span": 10,
        }
      }
      name="create-category"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 8,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={Object {}}
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <FormItem
              label="Organisation"
              name="organisation_id"
            >
              <WrapperField
                label="Organisation"
                messageVariables={
                  Object {
                    "label": "Organisation",
                  }
                }
                name="organisation_id"
                onReset={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_organisation_id"
                  label="Organisation"
                  messageVariables={
                    Object {
                      "label": "Organisation",
                    }
                  }
                  name={
                    Array [
                      "organisation_id",
                    ]
                  }
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_organisation_id"
                        label="Organisation"
                        name="organisation_id"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_organisation_id"
                              title="Organisation"
                            >
                              Organisation
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Organisation"
                        name={
                          Array [
                            "organisation_id",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Selector
                                    action="Organisations"
                                    display="title"
                                    id="create-category_organisation_id"
                                    onChange={[Function]}
                                    placeholder="Select organisation"
                                  >
                                    <ForwardRef(InternalSelect)
                                      allowClear={true}
                                      autoClearSearchValue={true}
                                      bordered={true}
                                      defaultValue={
                                        Array [
                                          Array [],
                                        ]
                                      }
                                      filterOption={[Function]}
                                      getPopupContainer={[Function]}
                                      listHeight={128}
                                      loading={false}
                                      notFoundContent={null}
                                      onChange={[Function]}
                                      onPopupScroll={[Function]}
                                      onSearch={[Function]}
                                      placeholder="Select organisation"
                                      searchValue=""
                                      value={
                                        Array [
                                          Array [],
                                        ]
                                      }
                                    >
                                      <Select
                                        allowClear={true}
                                        autoClearSearchValue={true}
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={
                                          Array [
                                            Array [],
                                          ]
                                        }
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        getPopupContainer={[Function]}
                                        inputIcon={[Function]}
                                        listHeight={128}
                                        listItemHeight={24}
                                        loading={false}
                                        menuItemSelectedIcon={null}
                                        notFoundContent={null}
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        onSearch={[Function]}
                                        placeholder="Select organisation"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        searchValue=""
                                        transitionName="ant-slide-up"
                                        value={
                                          Array [
                                            Array [],
                                          ]
                                        }
                                      >
                                        <ForwardRef(Select)
                                          allowClear={true}
                                          autoClearSearchValue={true}
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              Array [],
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          getPopupContainer={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={null}
                                          notFoundContent={null}
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          onSearch={[Function]}
                                          placeholder="Select organisation"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          searchValue=""
                                          transitionName="ant-slide-up"
                                          value={
                                            Array [
                                              Array [],
                                            ]
                                          }
                                        >
                                          <div
                                            className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={true}
                                              getPopupContainer={[Function]}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={128}
                                                  id="rc_select_TEST_OR_SSR"
                                                  itemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={null}
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onScroll={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={
                                                    Set {
                                                      Array [],
                                                    }
                                                  }
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="ant-slide-up"
                                              visible={false}
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                autoDestroy={false}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getPopupContainer={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={Array []}
                                                      height={128}
                                                      id="rc_select_TEST_OR_SSR"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={null}
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={Array []}
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          Array [],
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="ant-slide-up"
                                                popupVisible={false}
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  allowClear={true}
                                                  autoClearSearchValue={true}
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue={
                                                    Array [
                                                      Array [],
                                                    ]
                                                  }
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-item"
                                                        />
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  getPopupContainer={[Function]}
                                                  id="rc_select_TEST_OR_SSR"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  loading={false}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Select organisation"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={false}
                                                  tokenWithEnter={false}
                                                  transitionName="ant-slide-up"
                                                  value={
                                                    Array [
                                                      Array [],
                                                    ]
                                                  }
                                                  values={
                                                    Array [
                                                      Object {
                                                        "disabled": undefined,
                                                        "isCacheable": true,
                                                        "key": Array [],
                                                        "label": Array [],
                                                        "value": Array [],
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SingleSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      autoClearSearchValue={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          Array [],
                                                        ]
                                                      }
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-item"
                                                            />
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      getPopupContainer={[Function]}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputCompositionEnd={[Function]}
                                                      onInputCompositionStart={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onInputPaste={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select organisation"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={false}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      value={
                                                        Array [
                                                          Array [],
                                                        ]
                                                      }
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "isCacheable": true,
                                                            "key": Array [],
                                                            "label": Array [],
                                                            "value": Array [],
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <span
                                                        className="ant-select-selection-search"
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          attrs={Object {}}
                                                          editable={false}
                                                          id="rc_select_TEST_OR_SSR"
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onPaste={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </Input>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-item"
                                                      />
                                                    </SingleSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                            <TransBtn
                                              className="ant-select-arrow"
                                              customizeIcon={[Function]}
                                              customizeIconProps={
                                                Object {
                                                  "focused": false,
                                                  "loading": false,
                                                  "open": undefined,
                                                  "searchValue": "",
                                                  "showSearch": false,
                                                }
                                              }
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-arrow"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-select-suffix"
                                                >
                                                  <AntdIcon
                                                    className="ant-select-suffix"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-select-suffix"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TransBtn>
                                            <TransBtn
                                              className="ant-select-clear"
                                              customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                              onMouseDown={[Function]}
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-clear"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(CloseCircleFilled)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "close-circle",
                                                        "theme": "filled",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="close-circle"
                                                      className="anticon anticon-close-circle"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="close-circle"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-close-circle"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                            key="svg-close-circle-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(CloseCircleFilled)>
                                              </span>
                                            </TransBtn>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </ForwardRef(InternalSelect)>
                                  </Selector>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Spaces"
              name="spaces"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Spaces"
                messageVariables={
                  Object {
                    "label": "Spaces",
                  }
                }
                name="spaces"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_spaces"
                  label="Spaces"
                  messageVariables={
                    Object {
                      "label": "Spaces",
                    }
                  }
                  name={
                    Array [
                      "spaces",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_spaces"
                        label="Spaces"
                        name="spaces"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_spaces"
                              title="Spaces"
                            >
                              Spaces
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Spaces"
                        name={
                          Array [
                            "spaces",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <ForwardRef
                                    id="create-category_spaces"
                                    min={-1}
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className=""
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_spaces"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_spaces"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 10,
                  "span": 14,
                }
              }
            >
              <Row
                className="ant-form-item"
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    requiredMark={true}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    onDomErrorVisibleChange={[Function]}
                    prefixCls="ant-form"
                    status=""
                    validateStatus=""
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={10}
                      span={14}
                    >
                      <div
                        className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Space>
                              <div
                                className="ant-space ant-space-horizontal ant-space-align-center"
                                style={Object {}}
                              >
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={0}
                                  key="ant-space-item-0"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={1}
                                  key="ant-space-item-1"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={Object {}}
                                  >
                                    <Button
                                      htmlType="button"
                                      onClick={[Function]}
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Reset
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                              </div>
                            </Space>
                          </div>
                        </div>
                        <ErrorList
                          errors={Array []}
                          onDomErrorVisibleChange={[Function]}
                        >
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="ant-show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </ErrorList>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PermissionForm>
</Provider>
`;

exports[`Organisation Permission Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PermissionForm
    data={Array []}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      labelCol={
        Object {
          "span": 10,
        }
      }
      name="create-category"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 8,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={Object {}}
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <FormItem
              label="Organisation"
              name="organisation_id"
            >
              <WrapperField
                label="Organisation"
                messageVariables={
                  Object {
                    "label": "Organisation",
                  }
                }
                name="organisation_id"
                onReset={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_organisation_id"
                  label="Organisation"
                  messageVariables={
                    Object {
                      "label": "Organisation",
                    }
                  }
                  name={
                    Array [
                      "organisation_id",
                    ]
                  }
                  onReset={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_organisation_id"
                        label="Organisation"
                        name="organisation_id"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_organisation_id"
                              title="Organisation"
                            >
                              Organisation
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Organisation"
                        name={
                          Array [
                            "organisation_id",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <Selector
                                    action="Organisations"
                                    display="title"
                                    id="create-category_organisation_id"
                                    onChange={[Function]}
                                    placeholder="Select organisation"
                                  >
                                    <ForwardRef(InternalSelect)
                                      allowClear={true}
                                      autoClearSearchValue={true}
                                      bordered={true}
                                      defaultValue={
                                        Array [
                                          Array [],
                                        ]
                                      }
                                      filterOption={[Function]}
                                      getPopupContainer={[Function]}
                                      listHeight={128}
                                      loading={false}
                                      notFoundContent={null}
                                      onChange={[Function]}
                                      onPopupScroll={[Function]}
                                      onSearch={[Function]}
                                      placeholder="Select organisation"
                                      searchValue=""
                                      value={
                                        Array [
                                          Array [],
                                        ]
                                      }
                                    >
                                      <Select
                                        allowClear={true}
                                        autoClearSearchValue={true}
                                        className=""
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={
                                          Array [
                                            Array [],
                                          ]
                                        }
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        getPopupContainer={[Function]}
                                        inputIcon={[Function]}
                                        listHeight={128}
                                        listItemHeight={24}
                                        loading={false}
                                        menuItemSelectedIcon={null}
                                        notFoundContent={null}
                                        onChange={[Function]}
                                        onPopupScroll={[Function]}
                                        onSearch={[Function]}
                                        placeholder="Select organisation"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        searchValue=""
                                        transitionName="ant-slide-up"
                                        value={
                                          Array [
                                            Array [],
                                          ]
                                        }
                                      >
                                        <ForwardRef(Select)
                                          allowClear={true}
                                          autoClearSearchValue={true}
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          defaultValue={
                                            Array [
                                              Array [],
                                            ]
                                          }
                                          dropdownClassName=""
                                          filterOption={[Function]}
                                          getPopupContainer={[Function]}
                                          inputIcon={[Function]}
                                          listHeight={128}
                                          listItemHeight={24}
                                          loading={false}
                                          menuItemSelectedIcon={null}
                                          notFoundContent={null}
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          onSearch={[Function]}
                                          placeholder="Select organisation"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          searchValue=""
                                          transitionName="ant-slide-up"
                                          value={
                                            Array [
                                              Array [],
                                            ]
                                          }
                                        >
                                          <div
                                            className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              empty={true}
                                              getPopupContainer={[Function]}
                                              getTriggerDOMNode={[Function]}
                                              popupElement={
                                                <ForwardRef(OptionList)
                                                  childrenAsData={true}
                                                  defaultActiveFirstOption={true}
                                                  flattenOptions={Array []}
                                                  height={128}
                                                  id="rc_select_TEST_OR_SSR"
                                                  itemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={null}
                                                  onActiveValue={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onScroll={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  options={Array []}
                                                  prefixCls="ant-select"
                                                  searchValue=""
                                                  values={
                                                    Set {
                                                      Array [],
                                                    }
                                                  }
                                                  virtual={true}
                                                />
                                              }
                                              prefixCls="ant-select"
                                              transitionName="ant-slide-up"
                                              visible={false}
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                autoDestroy={false}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getPopupContainer={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div>
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={Array []}
                                                      height={128}
                                                      id="rc_select_TEST_OR_SSR"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={null}
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={Array []}
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          Array [],
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="ant-slide-up"
                                                popupVisible={false}
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  accessibilityIndex={0}
                                                  activeValue={null}
                                                  allowClear={true}
                                                  autoClearSearchValue={true}
                                                  className=""
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  defaultValue={
                                                    Array [
                                                      Array [],
                                                    ]
                                                  }
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-item"
                                                        />
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  filterOption={[Function]}
                                                  getPopupContainer={[Function]}
                                                  id="rc_select_TEST_OR_SSR"
                                                  inputElement={null}
                                                  inputIcon={[Function]}
                                                  key="trigger"
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  loading={false}
                                                  menuItemSelectedIcon={null}
                                                  multiple={false}
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onSelect={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placeholder="Select organisation"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={false}
                                                  tokenWithEnter={false}
                                                  transitionName="ant-slide-up"
                                                  value={
                                                    Array [
                                                      Array [],
                                                    ]
                                                  }
                                                  values={
                                                    Array [
                                                      Object {
                                                        "disabled": undefined,
                                                        "isCacheable": true,
                                                        "key": Array [],
                                                        "label": Array [],
                                                        "value": Array [],
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SingleSelector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      autoClearSearchValue={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          Array [],
                                                        ]
                                                      }
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-item"
                                                            />
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      getPopupContainer={[Function]}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={null}
                                                      multiple={false}
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputCompositionEnd={[Function]}
                                                      onInputCompositionStart={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onInputPaste={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select organisation"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={false}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      value={
                                                        Array [
                                                          Array [],
                                                        ]
                                                      }
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "isCacheable": true,
                                                            "key": Array [],
                                                            "label": Array [],
                                                            "value": Array [],
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <span
                                                        className="ant-select-selection-search"
                                                      >
                                                        <Input
                                                          accessibilityIndex={0}
                                                          attrs={Object {}}
                                                          editable={false}
                                                          id="rc_select_TEST_OR_SSR"
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onPaste={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            id="rc_select_TEST_OR_SSR"
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </Input>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-item"
                                                      />
                                                    </SingleSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                            <TransBtn
                                              className="ant-select-arrow"
                                              customizeIcon={[Function]}
                                              customizeIconProps={
                                                Object {
                                                  "focused": false,
                                                  "loading": false,
                                                  "open": undefined,
                                                  "searchValue": "",
                                                  "showSearch": false,
                                                }
                                              }
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-arrow"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-select-suffix"
                                                >
                                                  <AntdIcon
                                                    className="ant-select-suffix"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-select-suffix"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </TransBtn>
                                            <TransBtn
                                              className="ant-select-clear"
                                              customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                              onMouseDown={[Function]}
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-clear"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(CloseCircleFilled)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "close-circle",
                                                        "theme": "filled",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="close-circle"
                                                      className="anticon anticon-close-circle"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="close-circle"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-close-circle"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                            key="svg-close-circle-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(CloseCircleFilled)>
                                              </span>
                                            </TransBtn>
                                          </div>
                                        </ForwardRef(Select)>
                                      </Select>
                                    </ForwardRef(InternalSelect)>
                                  </Selector>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Spaces"
              name="spaces"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Spaces"
                messageVariables={
                  Object {
                    "label": "Spaces",
                  }
                }
                name="spaces"
                onReset={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_spaces"
                  label="Spaces"
                  messageVariables={
                    Object {
                      "label": "Spaces",
                    }
                  }
                  name={
                    Array [
                      "spaces",
                    ]
                  }
                  onReset={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_spaces"
                        label="Spaces"
                        name="spaces"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_spaces"
                              title="Spaces"
                            >
                              Spaces
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Spaces"
                        name={
                          Array [
                            "spaces",
                          ]
                        }
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validateStatus=""
                        validating={false}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={1}
                                >
                                  <ForwardRef
                                    id="create-category_spaces"
                                    min={-1}
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className=""
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_spaces"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_spaces"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 10,
                  "span": 14,
                }
              }
            >
              <Row
                className="ant-form-item"
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    requiredMark={true}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    onDomErrorVisibleChange={[Function]}
                    prefixCls="ant-form"
                    status=""
                    validateStatus=""
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={10}
                      span={14}
                    >
                      <div
                        className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Space>
                              <div
                                className="ant-space ant-space-horizontal ant-space-align-center"
                                style={Object {}}
                              >
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={0}
                                  key="ant-space-item-0"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={1}
                                  key="ant-space-item-1"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={Object {}}
                                  >
                                    <Button
                                      htmlType="button"
                                      onClick={[Function]}
                                    >
                                      <Wave>
                                        <button
                                          className="ant-btn"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Reset
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                              </div>
                            </Space>
                          </div>
                        </div>
                        <ErrorList
                          errors={Array []}
                          onDomErrorVisibleChange={[Function]}
                        >
                          <CSSMotion
                            motionAppear={true}
                            motionDeadline={500}
                            motionName="ant-show-help"
                            onLeaveEnd={[Function]}
                            removeOnLeave={true}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </ErrorList>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PermissionForm>
</Provider>
`;
