// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Space Permission Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PermissionForm
    data={
      Object {
        "episodes": 0,
        "fact_check": true,
        "id": 8,
        "media": 10,
        "podcast": false,
        "posts": 10,
        "space_id": 8,
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "episodes": 0,
          "fact_check": true,
          "id": 8,
          "media": 10,
          "podcast": false,
          "posts": 10,
          "space_id": 8,
        }
      }
      labelCol={
        Object {
          "span": 10,
        }
      }
      name="create-category"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 8,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={
            Object {
              "episodes": 0,
              "fact_check": true,
              "id": 8,
              "media": 10,
              "podcast": false,
              "posts": 10,
              "space_id": 8,
            }
          }
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <FormItem
              label="Space"
              name="space_id"
            >
              <WrapperField
                label="Space"
                messageVariables={
                  Object {
                    "label": "Space",
                  }
                }
                name="space_id"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_space_id"
                  label="Space"
                  messageVariables={
                    Object {
                      "label": "Space",
                    }
                  }
                  name={
                    Array [
                      "space_id",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_space_id"
                        label="Space"
                        name="space_id"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_space_id"
                              title="Space"
                            >
                              Space
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Space"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                  value={8}
                                >
                                  <ForwardRef
                                    id="create-category_space_id"
                                    onChange={[Function]}
                                    value={8}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_space_id"
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      value={8}
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuenow="8"
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_space_id"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value="8"
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Posts"
              name="posts"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Posts"
                messageVariables={
                  Object {
                    "label": "Posts",
                  }
                }
                name="posts"
                onMetaChange={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_posts"
                  label="Posts"
                  messageVariables={
                    Object {
                      "label": "Posts",
                    }
                  }
                  name={
                    Array [
                      "posts",
                    ]
                  }
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_posts"
                        label="Posts"
                        name="posts"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_posts"
                              title="Posts"
                            >
                              Posts
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Posts"
                        name={Array []}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={
                                    <ForwardRef
                                      min={-1}
                                    />
                                  }
                                  value={10}
                                >
                                  <ForwardRef
                                    id="create-category_posts"
                                    min={-1}
                                    onChange={[Function]}
                                    value={10}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_posts"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      value={10}
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow="10"
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_posts"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value="10"
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Media"
              name="media"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Media"
                messageVariables={
                  Object {
                    "label": "Media",
                  }
                }
                name="media"
                onMetaChange={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_media"
                  label="Media"
                  messageVariables={
                    Object {
                      "label": "Media",
                    }
                  }
                  name={
                    Array [
                      "media",
                    ]
                  }
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_media"
                        label="Media"
                        name="media"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_media"
                              title="Media"
                            >
                              Media
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Media"
                        name={Array []}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={
                                    <ForwardRef
                                      min={-1}
                                    />
                                  }
                                  value={10}
                                >
                                  <ForwardRef
                                    id="create-category_media"
                                    min={-1}
                                    onChange={[Function]}
                                    value={10}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_media"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                      value={10}
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow="10"
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_media"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value="10"
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Fact Check"
              name="fact_check"
              valuePropName="checked"
            >
              <WrapperField
                label="Fact Check"
                messageVariables={
                  Object {
                    "label": "Fact Check",
                  }
                }
                name="fact_check"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
                valuePropName="checked"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_fact_check"
                  label="Fact Check"
                  messageVariables={
                    Object {
                      "label": "Fact Check",
                    }
                  }
                  name={
                    Array [
                      "fact_check",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_fact_check"
                        label="Fact Check"
                        name="fact_check"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                        valuePropName="checked"
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_fact_check"
                              title="Fact Check"
                            >
                              Fact Check
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Fact Check"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        valuePropName="checked"
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                  value={true}
                                >
                                  <Switch
                                    checked={true}
                                    id="create-category_fact_check"
                                    onChange={[Function]}
                                  >
                                    <Wave
                                      insertExtraNode={true}
                                    >
                                      <Switch
                                        checked={true}
                                        className=""
                                        id="create-category_fact_check"
                                        loadingIcon={
                                          <div
                                            className="ant-switch-handle"
                                          />
                                        }
                                        onChange={[Function]}
                                        prefixCls="ant-switch"
                                      >
                                        <button
                                          aria-checked={true}
                                          className="ant-switch ant-switch-checked"
                                          id="create-category_fact_check"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="switch"
                                          type="button"
                                        >
                                          <div
                                            className="ant-switch-handle"
                                          />
                                          <span
                                            className="ant-switch-inner"
                                          />
                                        </button>
                                      </Switch>
                                    </Wave>
                                  </Switch>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Podcast"
              name="podcast"
              valuePropName="checked"
            >
              <WrapperField
                label="Podcast"
                messageVariables={
                  Object {
                    "label": "Podcast",
                  }
                }
                name="podcast"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
                valuePropName="checked"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_podcast"
                  label="Podcast"
                  messageVariables={
                    Object {
                      "label": "Podcast",
                    }
                  }
                  name={
                    Array [
                      "podcast",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_podcast"
                        label="Podcast"
                        name="podcast"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                        valuePropName="checked"
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_podcast"
                              title="Podcast"
                            >
                              Podcast
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Podcast"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        valuePropName="checked"
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                  value={false}
                                >
                                  <Switch
                                    checked={false}
                                    id="create-category_podcast"
                                    onChange={[Function]}
                                  >
                                    <Wave
                                      insertExtraNode={true}
                                    >
                                      <Switch
                                        checked={false}
                                        className=""
                                        id="create-category_podcast"
                                        loadingIcon={
                                          <div
                                            className="ant-switch-handle"
                                          />
                                        }
                                        onChange={[Function]}
                                        prefixCls="ant-switch"
                                      >
                                        <button
                                          aria-checked={false}
                                          className="ant-switch"
                                          id="create-category_podcast"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="switch"
                                          type="button"
                                        >
                                          <div
                                            className="ant-switch-handle"
                                          />
                                          <span
                                            className="ant-switch-inner"
                                          />
                                        </button>
                                      </Switch>
                                    </Wave>
                                  </Switch>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 10,
                  "span": 14,
                }
              }
            >
              <Row
                className="ant-form-item"
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  role="row"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    requiredMark={true}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    name={Array []}
                    prefixCls="ant-form"
                    status=""
                    touched={false}
                    validating={false}
                    warnings={Array []}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={10}
                      span={14}
                    >
                      <div
                        className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                        role="cell"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Space>
                              <div
                                className="ant-space ant-space-horizontal ant-space-align-center"
                                style={Object {}}
                              >
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={0}
                                  key="ant-space-item-0"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={1}
                                  key="ant-space-item-1"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={Object {}}
                                  >
                                    <Button
                                      htmlType="button"
                                      onClick={[Function]}
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-default"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Reset
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                              </div>
                            </Space>
                          </div>
                        </div>
                        <ErrorList
                          className="ant-form-item-explain-connected"
                          errors={Array []}
                          helpStatus=""
                          warnings={Array []}
                        >
                          <CSSMotion
                            motionAppear={false}
                            motionDeadline={500}
                            motionEnter={false}
                            motionName="ant-show-help"
                            onAppearActive={[Function]}
                            onAppearEnd={[Function]}
                            onAppearStart={[Function]}
                            onEnterActive={[Function]}
                            onEnterEnd={[Function]}
                            onEnterStart={[Function]}
                            onLeaveActive={[Function]}
                            onLeaveEnd={[Function]}
                            onLeaveStart={[Function]}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </ErrorList>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PermissionForm>
</Provider>
`;

exports[`Space Permission Form component snapshot testing should match component with empty data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PermissionForm
    data={Array []}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      labelCol={
        Object {
          "span": 10,
        }
      }
      name="create-category"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 8,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={Object {}}
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <FormItem
              label="Space"
              name="space_id"
            >
              <WrapperField
                label="Space"
                messageVariables={
                  Object {
                    "label": "Space",
                  }
                }
                name="space_id"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_space_id"
                  label="Space"
                  messageVariables={
                    Object {
                      "label": "Space",
                    }
                  }
                  name={
                    Array [
                      "space_id",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_space_id"
                        label="Space"
                        name="space_id"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_space_id"
                              title="Space"
                            >
                              Space
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Space"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                >
                                  <ForwardRef
                                    id="create-category_space_id"
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_space_id"
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_space_id"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Posts"
              name="posts"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Posts"
                messageVariables={
                  Object {
                    "label": "Posts",
                  }
                }
                name="posts"
                onMetaChange={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_posts"
                  label="Posts"
                  messageVariables={
                    Object {
                      "label": "Posts",
                    }
                  }
                  name={
                    Array [
                      "posts",
                    ]
                  }
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_posts"
                        label="Posts"
                        name="posts"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_posts"
                              title="Posts"
                            >
                              Posts
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Posts"
                        name={Array []}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={
                                    <ForwardRef
                                      min={-1}
                                    />
                                  }
                                >
                                  <ForwardRef
                                    id="create-category_posts"
                                    min={-1}
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_posts"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_posts"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Media"
              name="media"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Media"
                messageVariables={
                  Object {
                    "label": "Media",
                  }
                }
                name="media"
                onMetaChange={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_media"
                  label="Media"
                  messageVariables={
                    Object {
                      "label": "Media",
                    }
                  }
                  name={
                    Array [
                      "media",
                    ]
                  }
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_media"
                        label="Media"
                        name="media"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_media"
                              title="Media"
                            >
                              Media
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Media"
                        name={Array []}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={
                                    <ForwardRef
                                      min={-1}
                                    />
                                  }
                                >
                                  <ForwardRef
                                    id="create-category_media"
                                    min={-1}
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_media"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_media"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Fact Check"
              name="fact_check"
              valuePropName="checked"
            >
              <WrapperField
                label="Fact Check"
                messageVariables={
                  Object {
                    "label": "Fact Check",
                  }
                }
                name="fact_check"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
                valuePropName="checked"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_fact_check"
                  label="Fact Check"
                  messageVariables={
                    Object {
                      "label": "Fact Check",
                    }
                  }
                  name={
                    Array [
                      "fact_check",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_fact_check"
                        label="Fact Check"
                        name="fact_check"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                        valuePropName="checked"
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_fact_check"
                              title="Fact Check"
                            >
                              Fact Check
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Fact Check"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        valuePropName="checked"
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                >
                                  <Switch
                                    id="create-category_fact_check"
                                    onChange={[Function]}
                                  >
                                    <Wave
                                      insertExtraNode={true}
                                    >
                                      <Switch
                                        className=""
                                        id="create-category_fact_check"
                                        loadingIcon={
                                          <div
                                            className="ant-switch-handle"
                                          />
                                        }
                                        onChange={[Function]}
                                        prefixCls="ant-switch"
                                      >
                                        <button
                                          aria-checked={false}
                                          className="ant-switch"
                                          id="create-category_fact_check"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="switch"
                                          type="button"
                                        >
                                          <div
                                            className="ant-switch-handle"
                                          />
                                          <span
                                            className="ant-switch-inner"
                                          />
                                        </button>
                                      </Switch>
                                    </Wave>
                                  </Switch>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Podcast"
              name="podcast"
              valuePropName="checked"
            >
              <WrapperField
                label="Podcast"
                messageVariables={
                  Object {
                    "label": "Podcast",
                  }
                }
                name="podcast"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
                valuePropName="checked"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_podcast"
                  label="Podcast"
                  messageVariables={
                    Object {
                      "label": "Podcast",
                    }
                  }
                  name={
                    Array [
                      "podcast",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_podcast"
                        label="Podcast"
                        name="podcast"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                        valuePropName="checked"
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_podcast"
                              title="Podcast"
                            >
                              Podcast
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Podcast"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        valuePropName="checked"
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                >
                                  <Switch
                                    id="create-category_podcast"
                                    onChange={[Function]}
                                  >
                                    <Wave
                                      insertExtraNode={true}
                                    >
                                      <Switch
                                        className=""
                                        id="create-category_podcast"
                                        loadingIcon={
                                          <div
                                            className="ant-switch-handle"
                                          />
                                        }
                                        onChange={[Function]}
                                        prefixCls="ant-switch"
                                      >
                                        <button
                                          aria-checked={false}
                                          className="ant-switch"
                                          id="create-category_podcast"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="switch"
                                          type="button"
                                        >
                                          <div
                                            className="ant-switch-handle"
                                          />
                                          <span
                                            className="ant-switch-inner"
                                          />
                                        </button>
                                      </Switch>
                                    </Wave>
                                  </Switch>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 10,
                  "span": 14,
                }
              }
            >
              <Row
                className="ant-form-item"
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  role="row"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    requiredMark={true}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    name={Array []}
                    prefixCls="ant-form"
                    status=""
                    touched={false}
                    validating={false}
                    warnings={Array []}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={10}
                      span={14}
                    >
                      <div
                        className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                        role="cell"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Space>
                              <div
                                className="ant-space ant-space-horizontal ant-space-align-center"
                                style={Object {}}
                              >
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={0}
                                  key="ant-space-item-0"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={1}
                                  key="ant-space-item-1"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={Object {}}
                                  >
                                    <Button
                                      htmlType="button"
                                      onClick={[Function]}
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-default"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Reset
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                              </div>
                            </Space>
                          </div>
                        </div>
                        <ErrorList
                          className="ant-form-item-explain-connected"
                          errors={Array []}
                          helpStatus=""
                          warnings={Array []}
                        >
                          <CSSMotion
                            motionAppear={false}
                            motionDeadline={500}
                            motionEnter={false}
                            motionName="ant-show-help"
                            onAppearActive={[Function]}
                            onAppearEnd={[Function]}
                            onAppearStart={[Function]}
                            onEnterActive={[Function]}
                            onEnterEnd={[Function]}
                            onEnterStart={[Function]}
                            onLeaveActive={[Function]}
                            onLeaveEnd={[Function]}
                            onLeaveStart={[Function]}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </ErrorList>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PermissionForm>
</Provider>
`;

exports[`Space Permission Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PermissionForm
    data={Array []}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      labelCol={
        Object {
          "span": 10,
        }
      }
      name="create-category"
      onFinish={[Function]}
      wrapperCol={
        Object {
          "span": 8,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-horizontal"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={Object {}}
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
        >
          <form
            className="ant-form ant-form-horizontal"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <FormItem
              label="Space"
              name="space_id"
            >
              <WrapperField
                label="Space"
                messageVariables={
                  Object {
                    "label": "Space",
                  }
                }
                name="space_id"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_space_id"
                  label="Space"
                  messageVariables={
                    Object {
                      "label": "Space",
                    }
                  }
                  name={
                    Array [
                      "space_id",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_space_id"
                        label="Space"
                        name="space_id"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_space_id"
                              title="Space"
                            >
                              Space
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Space"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                >
                                  <ForwardRef
                                    id="create-category_space_id"
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_space_id"
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_space_id"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Posts"
              name="posts"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Posts"
                messageVariables={
                  Object {
                    "label": "Posts",
                  }
                }
                name="posts"
                onMetaChange={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_posts"
                  label="Posts"
                  messageVariables={
                    Object {
                      "label": "Posts",
                    }
                  }
                  name={
                    Array [
                      "posts",
                    ]
                  }
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_posts"
                        label="Posts"
                        name="posts"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_posts"
                              title="Posts"
                            >
                              Posts
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Posts"
                        name={Array []}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={
                                    <ForwardRef
                                      min={-1}
                                    />
                                  }
                                >
                                  <ForwardRef
                                    id="create-category_posts"
                                    min={-1}
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_posts"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_posts"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Media"
              name="media"
              rules={
                Array [
                  Object {
                    "message": "Please enter the numeric value!",
                    "required": true,
                  },
                ]
              }
            >
              <WrapperField
                label="Media"
                messageVariables={
                  Object {
                    "label": "Media",
                  }
                }
                name="media"
                onMetaChange={[Function]}
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
                trigger="onChange"
                validateTrigger="onChange"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_media"
                  label="Media"
                  messageVariables={
                    Object {
                      "label": "Media",
                    }
                  }
                  name={
                    Array [
                      "media",
                    ]
                  }
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="value"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_media"
                        label="Media"
                        name="media"
                        prefixCls="ant-form"
                        required={true}
                        requiredMark={true}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className="ant-form-item-required"
                              htmlFor="create-category_media"
                              title="Media"
                            >
                              Media
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Media"
                        name={Array []}
                        prefixCls="ant-form"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter the numeric value!",
                              "required": true,
                            },
                          ]
                        }
                        status=""
                        touched={false}
                        validating={false}
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={
                                    <ForwardRef
                                      min={-1}
                                    />
                                  }
                                >
                                  <ForwardRef
                                    id="create-category_media"
                                    min={-1}
                                    onChange={[Function]}
                                  >
                                    <InputNumber
                                      className="ant-input-number-in-form-item"
                                      downHandler={
                                        <ForwardRef(DownOutlined)
                                          className="ant-input-number-handler-down-inner"
                                        />
                                      }
                                      id="create-category_media"
                                      min={-1}
                                      onChange={[Function]}
                                      prefixCls="ant-input-number"
                                      upHandler={
                                        <ForwardRef(UpOutlined)
                                          className="ant-input-number-handler-up-inner"
                                        />
                                      }
                                    >
                                      <div
                                        className="ant-input-number ant-input-number-in-form-item"
                                        onBlur={[Function]}
                                        onCompositionEnd={[Function]}
                                        onCompositionStart={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                      >
                                        <StepHandler
                                          downDisabled={false}
                                          downNode={
                                            <ForwardRef(DownOutlined)
                                              className="ant-input-number-handler-down-inner"
                                            />
                                          }
                                          onStep={[Function]}
                                          prefixCls="ant-input-number"
                                          upDisabled={false}
                                          upNode={
                                            <ForwardRef(UpOutlined)
                                              className="ant-input-number-handler-up-inner"
                                            />
                                          }
                                        >
                                          <div
                                            className="ant-input-number-handler-wrap"
                                          >
                                            <span
                                              aria-disabled={false}
                                              aria-label="Increase Value"
                                              className="ant-input-number-handler ant-input-number-handler-up"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-up-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "up",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="up"
                                                    className="anticon anticon-up ant-input-number-handler-up-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "up",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="up"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-up"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                          key="svg-up-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(UpOutlined)>
                                            </span>
                                            <span
                                              aria-disabled={false}
                                              aria-label="Decrease Value"
                                              className="ant-input-number-handler ant-input-number-handler-down"
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              role="button"
                                              unselectable="on"
                                            >
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              >
                                                <AntdIcon
                                                  className="ant-input-number-handler-down-inner"
                                                  icon={
                                                    Object {
                                                      "icon": Object {
                                                        "attrs": Object {
                                                          "focusable": "false",
                                                          "viewBox": "64 64 896 896",
                                                        },
                                                        "children": Array [
                                                          Object {
                                                            "attrs": Object {
                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                            },
                                                            "tag": "path",
                                                          },
                                                        ],
                                                        "tag": "svg",
                                                      },
                                                      "name": "down",
                                                      "theme": "outlined",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    aria-label="down"
                                                    className="anticon anticon-down ant-input-number-handler-down-inner"
                                                    role="img"
                                                  >
                                                    <IconReact
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        data-icon="down"
                                                        fill="currentColor"
                                                        focusable="false"
                                                        height="1em"
                                                        key="svg-down"
                                                        viewBox="64 64 896 896"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                          key="svg-down-svg-0"
                                                        />
                                                      </svg>
                                                    </IconReact>
                                                  </span>
                                                </AntdIcon>
                                              </ForwardRef(DownOutlined)>
                                            </span>
                                          </div>
                                        </StepHandler>
                                        <div
                                          className="ant-input-number-input-wrap"
                                        >
                                          <input
                                            aria-valuemin={-1}
                                            aria-valuenow={null}
                                            autoComplete="off"
                                            className="ant-input-number-input"
                                            id="create-category_media"
                                            onChange={[Function]}
                                            role="spinbutton"
                                            step={1}
                                            value=""
                                          />
                                        </div>
                                      </div>
                                    </InputNumber>
                                  </ForwardRef>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Fact Check"
              name="fact_check"
              valuePropName="checked"
            >
              <WrapperField
                label="Fact Check"
                messageVariables={
                  Object {
                    "label": "Fact Check",
                  }
                }
                name="fact_check"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
                valuePropName="checked"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_fact_check"
                  label="Fact Check"
                  messageVariables={
                    Object {
                      "label": "Fact Check",
                    }
                  }
                  name={
                    Array [
                      "fact_check",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_fact_check"
                        label="Fact Check"
                        name="fact_check"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                        valuePropName="checked"
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_fact_check"
                              title="Fact Check"
                            >
                              Fact Check
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Fact Check"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        valuePropName="checked"
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                >
                                  <Switch
                                    id="create-category_fact_check"
                                    onChange={[Function]}
                                  >
                                    <Wave
                                      insertExtraNode={true}
                                    >
                                      <Switch
                                        className=""
                                        id="create-category_fact_check"
                                        loadingIcon={
                                          <div
                                            className="ant-switch-handle"
                                          />
                                        }
                                        onChange={[Function]}
                                        prefixCls="ant-switch"
                                      >
                                        <button
                                          aria-checked={false}
                                          className="ant-switch"
                                          id="create-category_fact_check"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="switch"
                                          type="button"
                                        >
                                          <div
                                            className="ant-switch-handle"
                                          />
                                          <span
                                            className="ant-switch-inner"
                                          />
                                        </button>
                                      </Switch>
                                    </Wave>
                                  </Switch>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              label="Podcast"
              name="podcast"
              valuePropName="checked"
            >
              <WrapperField
                label="Podcast"
                messageVariables={
                  Object {
                    "label": "Podcast",
                  }
                }
                name="podcast"
                onMetaChange={[Function]}
                trigger="onChange"
                validateTrigger="onChange"
                valuePropName="checked"
              >
                <Field
                  fieldContext={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "create-category",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                      "validateTrigger": "onChange",
                    }
                  }
                  key="_podcast"
                  label="Podcast"
                  messageVariables={
                    Object {
                      "label": "Podcast",
                    }
                  }
                  name={
                    Array [
                      "podcast",
                    ]
                  }
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      role="row"
                      style={Object {}}
                    >
                      <FormItemLabel
                        htmlFor="create-category_podcast"
                        label="Podcast"
                        name="podcast"
                        prefixCls="ant-form"
                        required={false}
                        requiredMark={true}
                        valuePropName="checked"
                      >
                        <Col
                          className="ant-form-item-label"
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10 ant-form-item-label"
                            role="cell"
                            style={Object {}}
                          >
                            <label
                              className=""
                              htmlFor="create-category_podcast"
                              title="Podcast"
                            >
                              Podcast
                            </label>
                          </div>
                        </Col>
                      </FormItemLabel>
                      <FormItemInput
                        errors={Array []}
                        label="Podcast"
                        name={Array []}
                        prefixCls="ant-form"
                        status=""
                        touched={false}
                        validating={false}
                        valuePropName="checked"
                        warnings={Array []}
                      >
                        <Col
                          className="ant-form-item-control"
                          span={8}
                        >
                          <div
                            className="ant-col ant-col-8 ant-form-item-control"
                            role="cell"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Component
                                  update={<ForwardRef />}
                                >
                                  <Switch
                                    id="create-category_podcast"
                                    onChange={[Function]}
                                  >
                                    <Wave
                                      insertExtraNode={true}
                                    >
                                      <Switch
                                        className=""
                                        id="create-category_podcast"
                                        loadingIcon={
                                          <div
                                            className="ant-switch-handle"
                                          />
                                        }
                                        onChange={[Function]}
                                        prefixCls="ant-switch"
                                      >
                                        <button
                                          aria-checked={false}
                                          className="ant-switch"
                                          id="create-category_podcast"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          role="switch"
                                          type="button"
                                        >
                                          <div
                                            className="ant-switch-handle"
                                          />
                                          <span
                                            className="ant-switch-inner"
                                          />
                                        </button>
                                      </Switch>
                                    </Wave>
                                  </Switch>
                                </Component>
                              </div>
                            </div>
                            <ErrorList
                              className="ant-form-item-explain-connected"
                              errors={Array []}
                              helpStatus=""
                              warnings={Array []}
                            >
                              <CSSMotion
                                motionAppear={false}
                                motionDeadline={500}
                                motionEnter={false}
                                motionName="ant-show-help"
                                onAppearActive={[Function]}
                                onAppearEnd={[Function]}
                                onAppearStart={[Function]}
                                onEnterActive={[Function]}
                                onEnterEnd={[Function]}
                                onEnterStart={[Function]}
                                onLeaveActive={[Function]}
                                onLeaveEnd={[Function]}
                                onLeaveStart={[Function]}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </Field>
              </WrapperField>
            </FormItem>
            <FormItem
              wrapperCol={
                Object {
                  "offset": 10,
                  "span": 14,
                }
              }
            >
              <Row
                className="ant-form-item"
                key="row"
              >
                <div
                  className="ant-row ant-form-item"
                  role="row"
                  style={Object {}}
                >
                  <FormItemLabel
                    prefixCls="ant-form"
                    requiredMark={true}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  />
                  <FormItemInput
                    errors={Array []}
                    name={Array []}
                    prefixCls="ant-form"
                    status=""
                    touched={false}
                    validating={false}
                    warnings={Array []}
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Col
                      className="ant-form-item-control"
                      offset={10}
                      span={14}
                    >
                      <div
                        className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                        role="cell"
                        style={Object {}}
                      >
                        <div
                          className="ant-form-item-control-input"
                        >
                          <div
                            className="ant-form-item-control-input-content"
                          >
                            <Space>
                              <div
                                className="ant-space ant-space-horizontal ant-space-align-center"
                                style={Object {}}
                              >
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={0}
                                  key="ant-space-item-0"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={
                                      Object {
                                        "marginRight": 8,
                                      }
                                    }
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                                <Item
                                  className="ant-space-item"
                                  direction="horizontal"
                                  index={1}
                                  key="ant-space-item-1"
                                  marginDirection="marginRight"
                                  wrap={false}
                                >
                                  <div
                                    className="ant-space-item"
                                    style={Object {}}
                                  >
                                    <Button
                                      htmlType="button"
                                      onClick={[Function]}
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-default"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Reset
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </Item>
                              </div>
                            </Space>
                          </div>
                        </div>
                        <ErrorList
                          className="ant-form-item-explain-connected"
                          errors={Array []}
                          helpStatus=""
                          warnings={Array []}
                        >
                          <CSSMotion
                            motionAppear={false}
                            motionDeadline={500}
                            motionEnter={false}
                            motionName="ant-show-help"
                            onAppearActive={[Function]}
                            onAppearEnd={[Function]}
                            onAppearStart={[Function]}
                            onEnterActive={[Function]}
                            onEnterEnd={[Function]}
                            onEnterStart={[Function]}
                            onLeaveActive={[Function]}
                            onLeaveEnd={[Function]}
                            onLeaveStart={[Function]}
                            visible={false}
                          >
                            <DomWrapper />
                          </CSSMotion>
                        </ErrorList>
                      </div>
                    </Col>
                  </FormItemInput>
                </div>
              </Row>
            </FormItem>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PermissionForm>
</Provider>
`;
