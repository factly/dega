// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Podcast form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PodcastForm
    data={
      Object {
        "categories": Array [
          1,
        ],
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "level": 2,
                "text": "Editor.js",
              },
              "type": "header",
            },
            Object {
              "data": Object {
                "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
              },
              "type": "paragraph",
            },
          ],
          "time": 1595747741807,
          "version": "2.18.0",
        },
        "id": 1,
        "language": "english",
        "medium_id": 1,
        "slug": "podcast-1",
        "title": "Podcast-1",
      }
    }
    onCreate={[MockFunction]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "categories": Array [
            1,
          ],
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "level": 2,
                  "text": "Editor.js",
                },
                "type": "header",
              },
              Object {
                "data": Object {
                  "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                },
                "type": "paragraph",
              },
            ],
            "time": 1595747741807,
            "version": "2.18.0",
          },
          "id": 1,
          "language": "english",
          "medium_id": 1,
          "slug": "podcast-1",
          "title": "Podcast-1",
        }
      }
      labelCol={
        Object {
          "span": 24,
        }
      }
      layout="vertical"
      name="create-category"
      onFinish={[Function]}
      onValuesChange={[Function]}
      wrapperCol={
        Object {
          "span": 24,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={
            Object {
              "categories": Array [
                1,
              ],
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "level": 2,
                      "text": "Editor.js",
                    },
                    "type": "header",
                  },
                  Object {
                    "data": Object {
                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1595747741807,
                "version": "2.18.0",
              },
              "id": 1,
              "language": "english",
              "medium_id": 1,
              "slug": "podcast-1",
              "title": "Podcast-1",
            }
          }
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row>
              <div
                className="ant-row"
                role="row"
                style={Object {}}
              >
                <Col
                  span={12}
                >
                  <div
                    className="ant-col ant-col-12"
                    role="cell"
                    style={Object {}}
                  >
                    <TitleInput
                      onChange={[Function]}
                    >
                      <FormItem
                        label="Title"
                        name="title"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter title!",
                              "required": true,
                            },
                            Object {
                              "max": 500,
                              "message": "Name must be maximum 500 characters.",
                            },
                          ]
                        }
                      >
                        <WrapperField
                          label="Title"
                          messageVariables={
                            Object {
                              "label": "Title",
                            }
                          }
                          name="title"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter title!",
                                "required": true,
                              },
                              Object {
                                "max": 500,
                                "message": "Name must be maximum 500 characters.",
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "create-category",
                                },
                                "_init": true,
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_title"
                            label="Title"
                            messageVariables={
                              Object {
                                "label": "Title",
                              }
                            }
                            name={
                              Array [
                                "title",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "message": "Please enter title!",
                                  "required": true,
                                },
                                Object {
                                  "max": 500,
                                  "message": "Name must be maximum 500 characters.",
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  htmlFor="create-category_title"
                                  label="Title"
                                  name="title"
                                  prefixCls="ant-form"
                                  required={true}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter title!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-label"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <label
                                        className="ant-form-item-required"
                                        htmlFor="create-category_title"
                                        title="Title"
                                      >
                                        Title
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  errors={Array []}
                                  label="Title"
                                  name={Array []}
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter title!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <ForwardRef
                                                onChange={[Function]}
                                              />
                                            }
                                            value="Podcast-1"
                                          >
                                            <ForwardRef
                                              id="create-category_title"
                                              onChange={[Function]}
                                              value="Podcast-1"
                                            >
                                              <ForwardRef
                                                affixWrapperClassName=""
                                                groupClassName=""
                                                id="create-category_title"
                                                inputClassName=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                prefixCls="ant-input"
                                                value="Podcast-1"
                                                wrapperClassName=""
                                              >
                                                <BaseInput
                                                  affixWrapperClassName=""
                                                  focused={false}
                                                  groupClassName=""
                                                  handleReset={[Function]}
                                                  id="create-category_title"
                                                  inputElement={
                                                    <input
                                                      className="ant-input"
                                                      id="create-category_title"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value="Podcast-1"
                                                    />
                                                  }
                                                  prefixCls="ant-input"
                                                  suffix={null}
                                                  triggerFocus={[Function]}
                                                  value="Podcast-1"
                                                  wrapperClassName=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="create-category_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="text"
                                                    value="Podcast-1"
                                                  />
                                                </BaseInput>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                    </TitleInput>
                    <SlugInput>
                      <FormItem
                        label="Slug"
                        name="slug"
                        rules={
                          Array [
                            Object {
                              "message": "Please input the slug!",
                              "required": true,
                            },
                            Object {
                              "message": "Please enter valid slug!",
                              "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                            },
                          ]
                        }
                      >
                        <WrapperField
                          label="Slug"
                          messageVariables={
                            Object {
                              "label": "Slug",
                            }
                          }
                          name="slug"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please input the slug!",
                                "required": true,
                              },
                              Object {
                                "message": "Please enter valid slug!",
                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "create-category",
                                },
                                "_init": true,
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_slug"
                            label="Slug"
                            messageVariables={
                              Object {
                                "label": "Slug",
                              }
                            }
                            name={
                              Array [
                                "slug",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "message": "Please input the slug!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Please enter valid slug!",
                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  htmlFor="create-category_slug"
                                  label="Slug"
                                  name="slug"
                                  prefixCls="ant-form"
                                  required={true}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-label"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <label
                                        className="ant-form-item-required"
                                        htmlFor="create-category_slug"
                                        title="Slug"
                                      >
                                        Slug
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  errors={Array []}
                                  label="Slug"
                                  name={Array []}
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={<ForwardRef />}
                                            value="podcast-1"
                                          >
                                            <ForwardRef
                                              id="create-category_slug"
                                              onChange={[Function]}
                                              value="podcast-1"
                                            >
                                              <ForwardRef
                                                affixWrapperClassName=""
                                                groupClassName=""
                                                id="create-category_slug"
                                                inputClassName=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                prefixCls="ant-input"
                                                value="podcast-1"
                                                wrapperClassName=""
                                              >
                                                <BaseInput
                                                  affixWrapperClassName=""
                                                  focused={false}
                                                  groupClassName=""
                                                  handleReset={[Function]}
                                                  id="create-category_slug"
                                                  inputElement={
                                                    <input
                                                      className="ant-input"
                                                      id="create-category_slug"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                      value="podcast-1"
                                                    />
                                                  }
                                                  prefixCls="ant-input"
                                                  suffix={null}
                                                  triggerFocus={[Function]}
                                                  value="podcast-1"
                                                  wrapperClassName=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="create-category_slug"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="text"
                                                    value="podcast-1"
                                                  />
                                                </BaseInput>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                    </SlugInput>
                    <FormItem
                      label="Language"
                      name="language"
                    >
                      <WrapperField
                        label="Language"
                        messageVariables={
                          Object {
                            "label": "Language",
                          }
                        }
                        name="language"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_language"
                          label="Language"
                          messageVariables={
                            Object {
                              "label": "Language",
                            }
                          }
                          name={
                            Array [
                              "language",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_language"
                                label="Language"
                                name="language"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_language"
                                      title="Language"
                                    >
                                      Language
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Language"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef(InternalSelect)
                                              defaultValue="english"
                                              style={
                                                Object {
                                                  "width": 120,
                                                }
                                              }
                                            >
                                              <Option
                                                value="english"
                                              >
                                                English
                                              </Option>
                                              <Option
                                                value="telugu"
                                              >
                                                Telugu
                                              </Option>
                                            </ForwardRef(InternalSelect)>
                                          }
                                          value="english"
                                        >
                                          <ForwardRef(InternalSelect)
                                            defaultValue="english"
                                            id="create-category_language"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "width": 120,
                                              }
                                            }
                                            value="english"
                                          >
                                            <Select
                                              className="ant-select-in-form-item"
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue="english"
                                              dropdownClassName=""
                                              id="create-category_language"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={24}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              placement="bottomLeft"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              style={
                                                Object {
                                                  "width": 120,
                                                }
                                              }
                                              transitionName="ant-slide-up"
                                              value="english"
                                            >
                                              <BaseSelect
                                                OptionList={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "OptionList",
                                                    "render": [Function],
                                                  }
                                                }
                                                activeDescendantId="create-category_language_list_0"
                                                activeValue={null}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                displayValues={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": "english",
                                                      "label": "English",
                                                      "value": "english",
                                                    },
                                                  ]
                                                }
                                                dropdownClassName=""
                                                dropdownMatchSelectWidth={true}
                                                emptyOptions={false}
                                                id="create-category_language"
                                                inputIcon={[Function]}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                omitDomProps={
                                                  Array [
                                                    "inputValue",
                                                  ]
                                                }
                                                onDisplayValuesChange={[Function]}
                                                onSearch={[Function]}
                                                onSearchSplit={[Function]}
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                style={
                                                  Object {
                                                    "width": 120,
                                                  }
                                                }
                                                transitionName="ant-slide-up"
                                              >
                                                <div
                                                  className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "width": 120,
                                                    }
                                                  }
                                                >
                                                  <SelectTrigger
                                                    containerWidth={null}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    empty={false}
                                                    getTriggerDOMNode={[Function]}
                                                    onPopupMouseEnter={[Function]}
                                                    placement="bottomLeft"
                                                    popupElement={<ForwardRef(OptionList) />}
                                                    prefixCls="ant-select"
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <Trigger
                                                      action={Array []}
                                                      afterPopupVisibleChange={[Function]}
                                                      autoDestroy={false}
                                                      blurDelay={0.15}
                                                      builtinPlacements={
                                                        Object {
                                                          "bottomLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tl",
                                                              "bl",
                                                            ],
                                                          },
                                                          "bottomRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tr",
                                                              "br",
                                                            ],
                                                          },
                                                          "topLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "bl",
                                                              "tl",
                                                            ],
                                                          },
                                                          "topRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "br",
                                                              "tr",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      defaultPopupVisible={false}
                                                      destroyPopupOnHide={false}
                                                      focusDelay={0}
                                                      getDocument={[Function]}
                                                      getPopupClassNameFromAlign={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      hideAction={Array []}
                                                      mask={false}
                                                      maskClosable={true}
                                                      mouseEnterDelay={0}
                                                      mouseLeaveDelay={0.1}
                                                      onPopupAlign={[Function]}
                                                      onPopupVisibleChange={[Function]}
                                                      popup={
                                                        <div
                                                          onMouseEnter={[Function]}
                                                        >
                                                          <ForwardRef(OptionList) />
                                                        </div>
                                                      }
                                                      popupAlign={Object {}}
                                                      popupClassName=""
                                                      popupPlacement="bottomLeft"
                                                      popupStyle={
                                                        Object {
                                                          "minWidth": null,
                                                          "width": null,
                                                        }
                                                      }
                                                      popupTransitionName="ant-slide-up"
                                                      prefixCls="ant-select-dropdown"
                                                      showAction={Array []}
                                                    >
                                                      <Selector
                                                        OptionList={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "OptionList",
                                                            "render": [Function],
                                                          }
                                                        }
                                                        activeDescendantId="create-category_language_list_0"
                                                        activeValue={null}
                                                        className="ant-select-in-form-item"
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        displayValues={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "english",
                                                              "label": "English",
                                                              "value": "english",
                                                            },
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="create-category_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="create-category_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="create-category_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="create-category_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="English"
                                                              >
                                                                English
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        emptyOptions={false}
                                                        id="create-category_language"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        key="trigger"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        omitDomProps={
                                                          Array [
                                                            "inputValue",
                                                          ]
                                                        }
                                                        onDisplayValuesChange={[Function]}
                                                        onRemove={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSplit={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placement="bottomLeft"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        style={
                                                          Object {
                                                            "width": 120,
                                                          }
                                                        }
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "english",
                                                              "label": "English",
                                                              "value": "english",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <div
                                                          className="ant-select-selector"
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SingleSelector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="create-category_language_list_0"
                                                            activeValue={null}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            displayValues={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "english",
                                                                  "label": "English",
                                                                  "value": "english",
                                                                },
                                                              ]
                                                            }
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="create-category_language_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="create-category_language_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="create-category_language_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="create-category_language"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="English"
                                                                  >
                                                                    English
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={false}
                                                            id="create-category_language"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-activedescendant="create-category_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="create-category_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="create-category_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="create-category_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />,
                                                              }
                                                            }
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onInputChange={[Function]}
                                                            onInputCompositionEnd={[Function]}
                                                            onInputCompositionStart={[Function]}
                                                            onInputKeyDown={[Function]}
                                                            onInputMouseDown={[Function]}
                                                            onInputPaste={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "width": 120,
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "english",
                                                                  "label": "English",
                                                                  "value": "english",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <span
                                                              className="ant-select-selection-search"
                                                            >
                                                              <Input
                                                                activeDescendantId="create-category_language_list_0"
                                                                attrs={Object {}}
                                                                editable={false}
                                                                id="create-category_language"
                                                                inputElement={null}
                                                                onChange={[Function]}
                                                                onCompositionEnd={[Function]}
                                                                onCompositionStart={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                prefixCls="ant-select"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-activedescendant="create-category_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="create-category_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="create-category_language_list"
                                                                  autoComplete="off"
                                                                  className="ant-select-selection-search-input"
                                                                  id="create-category_language"
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  readOnly={true}
                                                                  role="combobox"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </Input>
                                                            </span>
                                                            <span
                                                              className="ant-select-selection-item"
                                                              title="English"
                                                            >
                                                              English
                                                            </span>
                                                          </SingleSelector>
                                                        </div>
                                                      </Selector>
                                                    </Trigger>
                                                  </SelectTrigger>
                                                  <TransBtn
                                                    className="ant-select-arrow"
                                                    customizeIcon={[Function]}
                                                    customizeIconProps={
                                                      Object {
                                                        "focused": false,
                                                        "loading": undefined,
                                                        "open": undefined,
                                                        "searchValue": "",
                                                        "showSearch": false,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-arrow"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(DownOutlined)
                                                        className="ant-select-suffix"
                                                      >
                                                        <AntdIcon
                                                          className="ant-select-suffix"
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="down"
                                                            className="anticon anticon-down ant-select-suffix"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="down"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-down"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                  key="svg-down-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DownOutlined)>
                                                    </span>
                                                  </TransBtn>
                                                </div>
                                              </BaseSelect>
                                            </Select>
                                          </ForwardRef(InternalSelect)>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem
                      label="Categories"
                      name="categories"
                    >
                      <WrapperField
                        label="Categories"
                        messageVariables={
                          Object {
                            "label": "Categories",
                          }
                        }
                        name="categories"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_categories"
                          label="Categories"
                          messageVariables={
                            Object {
                              "label": "Categories",
                            }
                          }
                          name={
                            Array [
                              "categories",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_categories"
                                label="Categories"
                                name="categories"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_categories"
                                      title="Categories"
                                    >
                                      Categories
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Categories"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <Selector
                                              action="Categories"
                                              createEntity="Category"
                                              mode="multiple"
                                            />
                                          }
                                          value={
                                            Array [
                                              1,
                                            ]
                                          }
                                        >
                                          <Selector
                                            action="Categories"
                                            createEntity="Category"
                                            id="create-category_categories"
                                            mode="multiple"
                                            onChange={[Function]}
                                            value={
                                              Array [
                                                1,
                                              ]
                                            }
                                          >
                                            <ForwardRef(InternalSelect)
                                              allowClear={true}
                                              autoClearSearchValue={true}
                                              bordered={true}
                                              defaultValue={
                                                Array [
                                                  1,
                                                ]
                                              }
                                              filterOption={[Function]}
                                              getPopupContainer={[Function]}
                                              listHeight={128}
                                              loading={false}
                                              mode="multiple"
                                              notFoundContent={
                                                <Empty
                                                  description="No categories available. Type something to create new Category"
                                                  image={<Simple />}
                                                />
                                              }
                                              onChange={[Function]}
                                              onPopupScroll={[Function]}
                                              onSearch={[Function]}
                                              placeholder="Select categories"
                                              searchValue=""
                                              value={
                                                Array [
                                                  1,
                                                ]
                                              }
                                            >
                                              <Select
                                                allowClear={true}
                                                autoClearSearchValue={true}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                defaultValue={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                                dropdownClassName=""
                                                filterOption={[Function]}
                                                getPopupContainer={[Function]}
                                                inputIcon={[Function]}
                                                listHeight={128}
                                                listItemHeight={24}
                                                loading={false}
                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                mode="multiple"
                                                notFoundContent={
                                                  <Empty
                                                    description="No categories available. Type something to create new Category"
                                                    image={<Simple />}
                                                  />
                                                }
                                                onChange={[Function]}
                                                onPopupScroll={[Function]}
                                                onSearch={[Function]}
                                                placeholder="Select categories"
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                transitionName="ant-slide-up"
                                                value={
                                                  Array [
                                                    1,
                                                  ]
                                                }
                                              >
                                                <BaseSelect
                                                  OptionList={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "OptionList",
                                                      "render": [Function],
                                                    }
                                                  }
                                                  activeDescendantId="undefined_list_0"
                                                  activeValue={null}
                                                  allowClear={true}
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  displayValues={
                                                    Array [
                                                      Object {
                                                        "disabled": undefined,
                                                        "key": undefined,
                                                        "label": 1,
                                                        "value": 1,
                                                      },
                                                    ]
                                                  }
                                                  dropdownClassName=""
                                                  dropdownMatchSelectWidth={true}
                                                  emptyOptions={true}
                                                  getPopupContainer={[Function]}
                                                  inputIcon={[Function]}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={
                                                    <Empty
                                                      description="No categories available. Type something to create new Category"
                                                      image={<Simple />}
                                                    />
                                                  }
                                                  omitDomProps={
                                                    Array [
                                                      "inputValue",
                                                    ]
                                                  }
                                                  onDisplayValuesChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSplit={[Function]}
                                                  placeholder="Select categories"
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  transitionName="ant-slide-up"
                                                >
                                                  <div
                                                    className="ant-select ant-select-in-form-item ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SelectTrigger
                                                      containerWidth={null}
                                                      dropdownClassName=""
                                                      dropdownMatchSelectWidth={true}
                                                      empty={true}
                                                      getPopupContainer={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      onPopupMouseEnter={[Function]}
                                                      placement="bottomLeft"
                                                      popupElement={<ForwardRef(OptionList) />}
                                                      prefixCls="ant-select"
                                                      transitionName="ant-slide-up"
                                                    >
                                                      <Trigger
                                                        action={Array []}
                                                        afterPopupVisibleChange={[Function]}
                                                        autoDestroy={false}
                                                        blurDelay={0.15}
                                                        builtinPlacements={
                                                          Object {
                                                            "bottomLeft": Object {
                                                              "offset": Array [
                                                                0,
                                                                4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "tl",
                                                                "bl",
                                                              ],
                                                            },
                                                            "bottomRight": Object {
                                                              "offset": Array [
                                                                0,
                                                                4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "tr",
                                                                "br",
                                                              ],
                                                            },
                                                            "topLeft": Object {
                                                              "offset": Array [
                                                                0,
                                                                -4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "bl",
                                                                "tl",
                                                              ],
                                                            },
                                                            "topRight": Object {
                                                              "offset": Array [
                                                                0,
                                                                -4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "br",
                                                                "tr",
                                                              ],
                                                            },
                                                          }
                                                        }
                                                        defaultPopupVisible={false}
                                                        destroyPopupOnHide={false}
                                                        focusDelay={0}
                                                        getDocument={[Function]}
                                                        getPopupClassNameFromAlign={[Function]}
                                                        getPopupContainer={[Function]}
                                                        getTriggerDOMNode={[Function]}
                                                        hideAction={Array []}
                                                        mask={false}
                                                        maskClosable={true}
                                                        mouseEnterDelay={0}
                                                        mouseLeaveDelay={0.1}
                                                        onPopupAlign={[Function]}
                                                        onPopupVisibleChange={[Function]}
                                                        popup={
                                                          <div
                                                            onMouseEnter={[Function]}
                                                          >
                                                            <ForwardRef(OptionList) />
                                                          </div>
                                                        }
                                                        popupAlign={Object {}}
                                                        popupClassName="ant-select-dropdown-empty"
                                                        popupPlacement="bottomLeft"
                                                        popupStyle={
                                                          Object {
                                                            "minWidth": null,
                                                            "width": null,
                                                          }
                                                        }
                                                        popupTransitionName="ant-slide-up"
                                                        prefixCls="ant-select-dropdown"
                                                        showAction={Array []}
                                                      >
                                                        <Selector
                                                          OptionList={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "OptionList",
                                                              "render": [Function],
                                                            }
                                                          }
                                                          activeDescendantId="undefined_list_0"
                                                          activeValue={null}
                                                          allowClear={true}
                                                          className="ant-select-in-form-item"
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          displayValues={
                                                            Array [
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": undefined,
                                                                "label": 1,
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-overflow"
                                                                >
                                                                  <div
                                                                    class="ant-select-selection-overflow-item"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-item"
                                                                      title="1"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item-content"
                                                                      >
                                                                        1
                                                                      </span>
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-item-remove"
                                                                        style="user-select: none;"
                                                                        unselectable="on"
                                                                      >
                                                                        <span
                                                                          aria-label="close"
                                                                          class="anticon anticon-close"
                                                                          role="img"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="close"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                            />
                                                                          </svg>
                                                                        </span>
                                                                      </span>
                                                                    </span>
                                                                  </div>
                                                                  <div
                                                                    class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          dropdownMatchSelectWidth={true}
                                                          emptyOptions={true}
                                                          getPopupContainer={[Function]}
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          key="trigger"
                                                          loading={false}
                                                          mode="multiple"
                                                          notFoundContent={
                                                            <Empty
                                                              description="No categories available. Type something to create new Category"
                                                              image={<Simple />}
                                                            />
                                                          }
                                                          omitDomProps={
                                                            Array [
                                                              "inputValue",
                                                            ]
                                                          }
                                                          onDisplayValuesChange={[Function]}
                                                          onPopupScroll={[Function]}
                                                          onRemove={[Function]}
                                                          onSearch={[Function]}
                                                          onSearchSplit={[Function]}
                                                          onSearchSubmit={[Function]}
                                                          onToggleOpen={[Function]}
                                                          placeholder="Select categories"
                                                          placement="bottomLeft"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          tokenWithEnter={false}
                                                          transitionName="ant-slide-up"
                                                          values={
                                                            Array [
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": undefined,
                                                                "label": 1,
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <div
                                                            className="ant-select-selector"
                                                            onClick={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectSelector
                                                              OptionList={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "displayName": "OptionList",
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              activeDescendantId="undefined_list_0"
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className="ant-select-in-form-item"
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              displayValues={
                                                                Array [
                                                                  Object {
                                                                    "disabled": undefined,
                                                                    "key": undefined,
                                                                    "label": 1,
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-overflow"
                                                                    >
                                                                      <div
                                                                        class="ant-select-selection-overflow-item"
                                                                        style="opacity: 1;"
                                                                      >
                                                                        <span
                                                                          class="ant-select-selection-item"
                                                                          title="1"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-item-content"
                                                                          >
                                                                            1
                                                                          </span>
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-item-remove"
                                                                            style="user-select: none;"
                                                                            unselectable="on"
                                                                          >
                                                                            <span
                                                                              aria-label="close"
                                                                              class="anticon anticon-close"
                                                                              role="img"
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                data-icon="close"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="1em"
                                                                                viewBox="64 64 896 896"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                />
                                                                              </svg>
                                                                            </span>
                                                                          </span>
                                                                        </span>
                                                                      </div>
                                                                      <div
                                                                        class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                        style="opacity: 1;"
                                                                      >
                                                                        <div
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              dropdownMatchSelectWidth={true}
                                                              emptyOptions={true}
                                                              getPopupContainer={[Function]}
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              inputRef={
                                                                Object {
                                                                  "current": <input
                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="rc_select_TEST_OR_SSR"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    type="search"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />,
                                                                }
                                                              }
                                                              loading={false}
                                                              mode="multiple"
                                                              notFoundContent={
                                                                <Empty
                                                                  description="No categories available. Type something to create new Category"
                                                                  image={<Simple />}
                                                                />
                                                              }
                                                              omitDomProps={
                                                                Array [
                                                                  "inputValue",
                                                                ]
                                                              }
                                                              onDisplayValuesChange={[Function]}
                                                              onInputChange={[Function]}
                                                              onInputCompositionEnd={[Function]}
                                                              onInputCompositionStart={[Function]}
                                                              onInputKeyDown={[Function]}
                                                              onInputMouseDown={[Function]}
                                                              onInputPaste={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onRemove={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSplit={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Select categories"
                                                              placement="bottomLeft"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              tokenWithEnter={false}
                                                              transitionName="ant-slide-up"
                                                              values={
                                                                Array [
                                                                  Object {
                                                                    "disabled": undefined,
                                                                    "key": undefined,
                                                                    "label": 1,
                                                                    "value": 1,
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Overflow
                                                                data={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": undefined,
                                                                      "key": undefined,
                                                                      "label": 1,
                                                                      "value": 1,
                                                                    },
                                                                  ]
                                                                }
                                                                itemKey="key"
                                                                prefixCls="ant-select-selection-overflow"
                                                                renderItem={[Function]}
                                                                renderRest={[Function]}
                                                                suffix={
                                                                  <div
                                                                    className="ant-select-selection-search"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <ForwardRef(Input)
                                                                      activeDescendantId="undefined_list_0"
                                                                      attrs={Object {}}
                                                                      editable={false}
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    />
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                      
                                                                       
                                                                    </span>
                                                                  </div>
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow"
                                                                >
                                                                  <Item
                                                                    display={true}
                                                                    invalidate={false}
                                                                    item={
                                                                      Object {
                                                                        "disabled": undefined,
                                                                        "key": undefined,
                                                                        "label": 1,
                                                                        "value": 1,
                                                                      }
                                                                    }
                                                                    itemKey={0}
                                                                    key="0"
                                                                    order={0}
                                                                    prefixCls="ant-select-selection-overflow-item"
                                                                    registerSize={[Function]}
                                                                    renderItem={[Function]}
                                                                    responsive={false}
                                                                  >
                                                                    <div
                                                                      className="ant-select-selection-overflow-item"
                                                                      style={
                                                                        Object {
                                                                          "height": undefined,
                                                                          "opacity": 1,
                                                                          "order": undefined,
                                                                          "overflowY": undefined,
                                                                          "pointerEvents": undefined,
                                                                          "position": undefined,
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="ant-select-selection-item"
                                                                        title="1"
                                                                      >
                                                                        <span
                                                                          className="ant-select-selection-item-content"
                                                                        >
                                                                          1
                                                                        </span>
                                                                        <TransBtn
                                                                          className="ant-select-selection-item-remove"
                                                                          customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                          onClick={[Function]}
                                                                          onMouseDown={[Function]}
                                                                        >
                                                                          <span
                                                                            aria-hidden={true}
                                                                            className="ant-select-selection-item-remove"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            style={
                                                                              Object {
                                                                                "WebkitUserSelect": "none",
                                                                                "userSelect": "none",
                                                                              }
                                                                            }
                                                                            unselectable="on"
                                                                          >
                                                                            <ForwardRef(CloseOutlined)>
                                                                              <AntdIcon
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <span
                                                                                  aria-label="close"
                                                                                  className="anticon anticon-close"
                                                                                  role="img"
                                                                                >
                                                                                  <IconReact
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "close",
                                                                                        "theme": "outlined",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      data-icon="close"
                                                                                      fill="currentColor"
                                                                                      focusable="false"
                                                                                      height="1em"
                                                                                      key="svg-close"
                                                                                      viewBox="64 64 896 896"
                                                                                      width="1em"
                                                                                    >
                                                                                      <path
                                                                                        d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                        key="svg-close-svg-0"
                                                                                      />
                                                                                    </svg>
                                                                                  </IconReact>
                                                                                </span>
                                                                              </AntdIcon>
                                                                            </ForwardRef(CloseOutlined)>
                                                                          </span>
                                                                        </TransBtn>
                                                                      </span>
                                                                    </div>
                                                                  </Item>
                                                                  <Item
                                                                    className="ant-select-selection-overflow-item-suffix"
                                                                    display={true}
                                                                    invalidate={false}
                                                                    order={0}
                                                                    prefixCls="ant-select-selection-overflow-item"
                                                                    registerSize={[Function]}
                                                                    responsive={false}
                                                                    responsiveDisabled={true}
                                                                    style={Object {}}
                                                                  >
                                                                    <div
                                                                      className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                      style={
                                                                        Object {
                                                                          "height": undefined,
                                                                          "opacity": 1,
                                                                          "order": undefined,
                                                                          "overflowY": undefined,
                                                                          "pointerEvents": undefined,
                                                                          "position": undefined,
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="ant-select-selection-search"
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "width": 0,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Input
                                                                          activeDescendantId="undefined_list_0"
                                                                          attrs={Object {}}
                                                                          editable={false}
                                                                          inputElement={null}
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          prefixCls="ant-select"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="undefined_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="undefined_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="undefined_list"
                                                                            autoComplete="off"
                                                                            className="ant-select-selection-search-input"
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            readOnly={true}
                                                                            role="combobox"
                                                                            style={
                                                                              Object {
                                                                                "opacity": 0,
                                                                              }
                                                                            }
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </Input>
                                                                        <span
                                                                          aria-hidden={true}
                                                                          className="ant-select-selection-search-mirror"
                                                                        >
                                                                           
                                                                        </span>
                                                                      </div>
                                                                    </div>
                                                                  </Item>
                                                                </div>
                                                              </Overflow>
                                                            </SelectSelector>
                                                          </div>
                                                        </Selector>
                                                      </Trigger>
                                                    </SelectTrigger>
                                                    <TransBtn
                                                      className="ant-select-clear"
                                                      customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <span
                                                        aria-hidden={true}
                                                        className="ant-select-clear"
                                                        onMouseDown={[Function]}
                                                        style={
                                                          Object {
                                                            "WebkitUserSelect": "none",
                                                            "userSelect": "none",
                                                          }
                                                        }
                                                        unselectable="on"
                                                      >
                                                        <ForwardRef(CloseCircleFilled)>
                                                          <AntdIcon
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "close-circle",
                                                                "theme": "filled",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              aria-label="close-circle"
                                                              className="anticon anticon-close-circle"
                                                              role="img"
                                                            >
                                                              <IconReact
                                                                icon={
                                                                  Object {
                                                                    "icon": Object {
                                                                      "attrs": Object {
                                                                        "focusable": "false",
                                                                        "viewBox": "64 64 896 896",
                                                                      },
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                      ],
                                                                      "tag": "svg",
                                                                    },
                                                                    "name": "close-circle",
                                                                    "theme": "filled",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  data-icon="close-circle"
                                                                  fill="currentColor"
                                                                  focusable="false"
                                                                  height="1em"
                                                                  key="svg-close-circle"
                                                                  viewBox="64 64 896 896"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                    key="svg-close-circle-svg-0"
                                                                  />
                                                                </svg>
                                                              </IconReact>
                                                            </span>
                                                          </AntdIcon>
                                                        </ForwardRef(CloseCircleFilled)>
                                                      </span>
                                                    </TransBtn>
                                                  </div>
                                                </BaseSelect>
                                              </Select>
                                            </ForwardRef(InternalSelect)>
                                          </Selector>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <DescriptionInput
                      inputProps={
                        Object {
                          "placeholder": "Enter Description...",
                          "style": Object {
                            "width": "600px",
                          },
                        }
                      }
                      type="editor"
                    >
                      <FormItem
                        label="Description"
                        name="description"
                      >
                        <WrapperField
                          label="Description"
                          messageVariables={
                            Object {
                              "label": "Description",
                            }
                          }
                          name="description"
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "create-category",
                                },
                                "_init": true,
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_description"
                            label="Description"
                            messageVariables={
                              Object {
                                "label": "Description",
                              }
                            }
                            name={
                              Array [
                                "description",
                              ]
                            }
                            onMetaChange={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  htmlFor="create-category_description"
                                  label="Description"
                                  name="description"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                >
                                  <Col
                                    className="ant-form-item-label"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-label"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="create-category_description"
                                        title="Description"
                                      >
                                        Description
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  errors={Array []}
                                  label="Description"
                                  name={Array []}
                                  prefixCls="ant-form"
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Editor
                                                onChange={[Function]}
                                                placeholder="Enter Description..."
                                                style={
                                                  Object {
                                                    "width": "600px",
                                                  }
                                                }
                                              />
                                            }
                                            value={
                                              Object {
                                                "blocks": Array [
                                                  Object {
                                                    "data": Object {
                                                      "level": 2,
                                                      "text": "Editor.js",
                                                    },
                                                    "type": "header",
                                                  },
                                                  Object {
                                                    "data": Object {
                                                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                    },
                                                    "type": "paragraph",
                                                  },
                                                ],
                                                "time": 1595747741807,
                                                "version": "2.18.0",
                                              }
                                            }
                                          >
                                            <Editor
                                              id="create-category_description"
                                              onChange={[Function]}
                                              placeholder="Enter Description..."
                                              style={
                                                Object {
                                                  "width": "600px",
                                                }
                                              }
                                              value={
                                                Object {
                                                  "blocks": Array [
                                                    Object {
                                                      "data": Object {
                                                        "level": 2,
                                                        "text": "Editor.js",
                                                      },
                                                      "type": "header",
                                                    },
                                                    Object {
                                                      "data": Object {
                                                        "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                                                      },
                                                      "type": "paragraph",
                                                    },
                                                  ],
                                                  "time": 1595747741807,
                                                  "version": "2.18.0",
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "width": "600px",
                                                  }
                                                }
                                              />
                                            </Editor>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                    </DescriptionInput>
                    <MetaForm>
                      <Collapse
                        expandIcon={[Function]}
                        expandIconPosition="right"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <Collapse
                          accordion={false}
                          className="ant-collapse-icon-position-right"
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          expandIconPosition="right"
                          onChange={[Function]}
                          openMotion={
                            Object {
                              "leavedClassName": "ant-collapse-content-hidden",
                              "motionAppear": false,
                              "motionDeadline": 500,
                              "motionName": "ant-motion-collapse",
                              "onAppearActive": [Function],
                              "onAppearEnd": [Function],
                              "onAppearStart": [Function],
                              "onEnterActive": [Function],
                              "onEnterEnd": [Function],
                              "onEnterStart": [Function],
                              "onLeaveActive": [Function],
                              "onLeaveEnd": [Function],
                              "onLeaveStart": [Function],
                            }
                          }
                          prefixCls="ant-collapse"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="ant-collapse ant-collapse-icon-position-right"
                            role={null}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <CollapsePanel
                              accordion={false}
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              header="Meta Data"
                              isActive={false}
                              key="0"
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="0"
                              prefixCls="ant-collapse"
                            >
                              <CollapsePanel
                                accordion={false}
                                className=""
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                forceRender={false}
                                header="Meta Data"
                                headerClass=""
                                isActive={false}
                                onItemClick={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                panelKey="0"
                                prefixCls="ant-collapse"
                                showArrow={true}
                              >
                                <div
                                  className="ant-collapse-item"
                                >
                                  <div
                                    aria-expanded={false}
                                    className="ant-collapse-header"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <div>
                                      <Button
                                        className="ant-collapse-arrow"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default ant-collapse-arrow"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Expand
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                    Meta Data
                                  </div>
                                  <CSSMotion
                                    forceRender={false}
                                    leavedClassName="ant-collapse-content-hidden"
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionName="ant-motion-collapse"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={false}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </div>
                              </CollapsePanel>
                            </CollapsePanel>
                            <CollapsePanel
                              accordion={false}
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              header="Code Injection"
                              isActive={false}
                              key="1"
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="1"
                              prefixCls="ant-collapse"
                            >
                              <CollapsePanel
                                accordion={false}
                                className=""
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                forceRender={false}
                                header="Code Injection"
                                headerClass=""
                                isActive={false}
                                onItemClick={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                panelKey="1"
                                prefixCls="ant-collapse"
                                showArrow={true}
                              >
                                <div
                                  className="ant-collapse-item"
                                >
                                  <div
                                    aria-expanded={false}
                                    className="ant-collapse-header"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <div>
                                      <Button
                                        className="ant-collapse-arrow"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default ant-collapse-arrow"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Expand
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                    Code Injection
                                  </div>
                                  <CSSMotion
                                    forceRender={false}
                                    leavedClassName="ant-collapse-content-hidden"
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionName="ant-motion-collapse"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={false}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </div>
                              </CollapsePanel>
                            </CollapsePanel>
                          </div>
                        </Collapse>
                      </Collapse>
                      <Collapse
                        expandIcon={[Function]}
                        expandIconPosition="right"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <Collapse
                          accordion={false}
                          className="ant-collapse-icon-position-right"
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          expandIconPosition="right"
                          onChange={[Function]}
                          openMotion={
                            Object {
                              "leavedClassName": "ant-collapse-content-hidden",
                              "motionAppear": false,
                              "motionDeadline": 500,
                              "motionName": "ant-motion-collapse",
                              "onAppearActive": [Function],
                              "onAppearEnd": [Function],
                              "onAppearStart": [Function],
                              "onEnterActive": [Function],
                              "onEnterEnd": [Function],
                              "onEnterStart": [Function],
                              "onLeaveActive": [Function],
                              "onLeaveEnd": [Function],
                              "onLeaveStart": [Function],
                            }
                          }
                          prefixCls="ant-collapse"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="ant-collapse ant-collapse-icon-position-right"
                            role={null}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <CollapsePanel
                              accordion={false}
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              header="Meta Fields"
                              isActive={false}
                              key="0"
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="0"
                              prefixCls="ant-collapse"
                            >
                              <CollapsePanel
                                accordion={false}
                                className=""
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                forceRender={false}
                                header="Meta Fields"
                                headerClass=""
                                isActive={false}
                                onItemClick={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                panelKey="0"
                                prefixCls="ant-collapse"
                                showArrow={true}
                              >
                                <div
                                  className="ant-collapse-item"
                                >
                                  <div
                                    aria-expanded={false}
                                    className="ant-collapse-header"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <div>
                                      <Button
                                        className="ant-collapse-arrow"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default ant-collapse-arrow"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Expand
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                    Meta Fields
                                  </div>
                                  <CSSMotion
                                    forceRender={false}
                                    leavedClassName="ant-collapse-content-hidden"
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionName="ant-motion-collapse"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={false}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </div>
                              </CollapsePanel>
                            </CollapsePanel>
                          </div>
                        </Collapse>
                      </Collapse>
                    </MetaForm>
                    <FormItem
                      wrapperCol={
                        Object {
                          "offset": 10,
                          "span": 14,
                        }
                      }
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          role="row"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                            requiredMark={true}
                            wrapperCol={
                              Object {
                                "offset": 10,
                                "span": 14,
                              }
                            }
                          />
                          <FormItemInput
                            errors={Array []}
                            name={Array []}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validating={false}
                            warnings={Array []}
                            wrapperCol={
                              Object {
                                "offset": 10,
                                "span": 14,
                              }
                            }
                          >
                            <Col
                              className="ant-form-item-control"
                              offset={10}
                              span={14}
                            >
                              <div
                                className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                                role="cell"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Space>
                                      <div
                                        className="ant-space ant-space-horizontal ant-space-align-center"
                                        style={Object {}}
                                      >
                                        <Item
                                          className="ant-space-item"
                                          direction="horizontal"
                                          index={0}
                                          key="ant-space-item-0"
                                          marginDirection="marginRight"
                                          wrap={false}
                                        >
                                          <div
                                            className="ant-space-item"
                                            style={
                                              Object {
                                                "marginRight": 8,
                                              }
                                            }
                                          >
                                            <Button
                                              disabled={true}
                                              htmlType="submit"
                                              type="primary"
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-primary"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Update
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                        </Item>
                                        <Item
                                          className="ant-space-item"
                                          direction="horizontal"
                                          index={1}
                                          key="ant-space-item-1"
                                          marginDirection="marginRight"
                                          wrap={false}
                                        >
                                          <div
                                            className="ant-space-item"
                                            style={Object {}}
                                          >
                                            <Button
                                              htmlType="button"
                                              onClick={[Function]}
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-default"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Reset
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                        </Item>
                                      </div>
                                    </Space>
                                  </div>
                                </div>
                                <ErrorList
                                  className="ant-form-item-explain-connected"
                                  errors={Array []}
                                  helpStatus=""
                                  warnings={Array []}
                                >
                                  <CSSMotion
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionEnter={false}
                                    motionName="ant-show-help"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </div>
                </Col>
                <Col
                  offset={4}
                  span={6}
                >
                  <div
                    className="ant-col ant-col-6 ant-col-offset-4"
                    role="cell"
                    style={Object {}}
                  >
                    <FormItem
                      label="Featured Image"
                      name="medium_id"
                    >
                      <WrapperField
                        label="Featured Image"
                        messageVariables={
                          Object {
                            "label": "Featured Image",
                          }
                        }
                        name="medium_id"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_medium_id"
                          label="Featured Image"
                          messageVariables={
                            Object {
                              "label": "Featured Image",
                            }
                          }
                          name={
                            Array [
                              "medium_id",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_medium_id"
                                label="Featured Image"
                                name="medium_id"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_medium_id"
                                      title="Featured Image"
                                    >
                                      Featured Image
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Featured Image"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={<MediaSelector />}
                                          value={1}
                                        >
                                          <MediaSelector
                                            id="create-category_medium_id"
                                            onChange={[Function]}
                                            value={1}
                                          >
                                            <Modal
                                              closable={false}
                                              confirmLoading={false}
                                              footer={
                                                Array [
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                  >
                                                    Cancel
                                                  </ForwardRef(InternalButton)>,
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                    type="primary"
                                                  >
                                                    Ok
                                                  </ForwardRef(InternalButton)>,
                                                ]
                                              }
                                              okType="primary"
                                              onCancel={[Function]}
                                              visible={false}
                                              width="800px"
                                            >
                                              <Dialog
                                                closable={false}
                                                closeIcon={
                                                  <span
                                                    className="ant-modal-close-x"
                                                  >
                                                    <ForwardRef(CloseOutlined)
                                                      className="ant-modal-close-icon"
                                                    />
                                                  </span>
                                                }
                                                confirmLoading={false}
                                                focusTriggerAfterClose={true}
                                                footer={
                                                  Array [
                                                    <ForwardRef(InternalButton)
                                                      onClick={[Function]}
                                                    >
                                                      Cancel
                                                    </ForwardRef(InternalButton)>,
                                                    <ForwardRef(InternalButton)
                                                      onClick={[Function]}
                                                      type="primary"
                                                    >
                                                      Ok
                                                    </ForwardRef(InternalButton)>,
                                                  ]
                                                }
                                                maskTransitionName="ant-fade"
                                                okType="primary"
                                                onCancel={[Function]}
                                                onClose={[Function]}
                                                prefixCls="ant-modal"
                                                transitionName="ant-zoom"
                                                visible={false}
                                                width="800px"
                                                wrapClassName=""
                                              >
                                                <PortalWrapper
                                                  visible={false}
                                                />
                                              </Dialog>
                                            </Modal>
                                            <Space
                                              direction="vertical"
                                            >
                                              <div
                                                className="ant-space ant-space-vertical"
                                                style={Object {}}
                                              >
                                                <Item
                                                  className="ant-space-item"
                                                  direction="vertical"
                                                  index={0}
                                                  key="ant-space-item-0"
                                                  marginDirection="marginRight"
                                                  wrap={false}
                                                >
                                                  <div
                                                    className="ant-space-item"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "display": "flex",
                                                          "justifyContent": "center",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "position": "relative",
                                                          }
                                                        }
                                                      >
                                                        <Button
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "background": "transparent",
                                                              "borderStyle": "dashed",
                                                              "display": "block",
                                                              "height": "auto",
                                                            }
                                                          }
                                                        >
                                                          <Wave
                                                            disabled={false}
                                                          >
                                                            <button
                                                              className="ant-btn ant-btn-default"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "background": "transparent",
                                                                  "borderStyle": "dashed",
                                                                  "display": "block",
                                                                  "height": "auto",
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              <LoadingIcon
                                                                existIcon={false}
                                                                loading={false}
                                                                prefixCls="ant-btn"
                                                              >
                                                                <CSSMotion
                                                                  motionName="ant-btn-loading-icon-motion"
                                                                  onAppearActive={[Function]}
                                                                  onAppearStart={[Function]}
                                                                  onEnterActive={[Function]}
                                                                  onEnterStart={[Function]}
                                                                  onLeaveActive={[Function]}
                                                                  onLeaveStart={[Function]}
                                                                  removeOnLeave={true}
                                                                  visible={false}
                                                                >
                                                                  <DomWrapper />
                                                                </CSSMotion>
                                                              </LoadingIcon>
                                                              <img
                                                                key=".0"
                                                                width="100%"
                                                              />
                                                            </button>
                                                          </Wave>
                                                        </Button>
                                                        <Button
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "bottom": 0,
                                                              "left": 0,
                                                              "maxWidth": "52px",
                                                              "position": "absolute",
                                                            }
                                                          }
                                                        >
                                                          <Wave
                                                            disabled={false}
                                                          >
                                                            <button
                                                              className="ant-btn ant-btn-default"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "bottom": 0,
                                                                  "left": 0,
                                                                  "maxWidth": "52px",
                                                                  "position": "absolute",
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              <LoadingIcon
                                                                existIcon={false}
                                                                loading={false}
                                                                prefixCls="ant-btn"
                                                              >
                                                                <CSSMotion
                                                                  motionName="ant-btn-loading-icon-motion"
                                                                  onAppearActive={[Function]}
                                                                  onAppearStart={[Function]}
                                                                  onEnterActive={[Function]}
                                                                  onEnterStart={[Function]}
                                                                  onLeaveActive={[Function]}
                                                                  onLeaveStart={[Function]}
                                                                  removeOnLeave={true}
                                                                  visible={false}
                                                                >
                                                                  <DomWrapper />
                                                                </CSSMotion>
                                                              </LoadingIcon>
                                                              <ForwardRef(DeleteOutlined)
                                                                key=".0"
                                                              >
                                                                <AntdIcon
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "delete",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-label="delete"
                                                                    className="anticon anticon-delete"
                                                                    role="img"
                                                                  >
                                                                    <IconReact
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "delete",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        data-icon="delete"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height="1em"
                                                                        key="svg-delete"
                                                                        viewBox="64 64 896 896"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                          key="svg-delete-svg-0"
                                                                        />
                                                                      </svg>
                                                                    </IconReact>
                                                                  </span>
                                                                </AntdIcon>
                                                              </ForwardRef(DeleteOutlined)>
                                                            </button>
                                                          </Wave>
                                                        </Button>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </Item>
                                              </div>
                                            </Space>
                                          </MediaSelector>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PodcastForm>
</Provider>
`;

exports[`Podcast form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <PodcastForm
    actions={
      Array [
        "publish",
      ]
    }
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "_init": true,
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldWarning": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "language": "english",
        }
      }
      labelCol={
        Object {
          "span": 24,
        }
      }
      layout="vertical"
      name="create-category"
      onFinish={[Function]}
      onValuesChange={[Function]}
      wrapperCol={
        Object {
          "span": 24,
        }
      }
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "_init": true,
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldWarning": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={
            Object {
              "language": "english",
            }
          }
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row>
              <div
                className="ant-row"
                role="row"
                style={Object {}}
              >
                <Col
                  span={12}
                >
                  <div
                    className="ant-col ant-col-12"
                    role="cell"
                    style={Object {}}
                  >
                    <TitleInput
                      onChange={[Function]}
                    >
                      <FormItem
                        label="Title"
                        name="title"
                        rules={
                          Array [
                            Object {
                              "message": "Please enter title!",
                              "required": true,
                            },
                            Object {
                              "max": 500,
                              "message": "Name must be maximum 500 characters.",
                            },
                          ]
                        }
                      >
                        <WrapperField
                          label="Title"
                          messageVariables={
                            Object {
                              "label": "Title",
                            }
                          }
                          name="title"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter title!",
                                "required": true,
                              },
                              Object {
                                "max": 500,
                                "message": "Name must be maximum 500 characters.",
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "create-category",
                                },
                                "_init": true,
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_title"
                            label="Title"
                            messageVariables={
                              Object {
                                "label": "Title",
                              }
                            }
                            name={
                              Array [
                                "title",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "message": "Please enter title!",
                                  "required": true,
                                },
                                Object {
                                  "max": 500,
                                  "message": "Name must be maximum 500 characters.",
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  htmlFor="create-category_title"
                                  label="Title"
                                  name="title"
                                  prefixCls="ant-form"
                                  required={true}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter title!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-label"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <label
                                        className="ant-form-item-required"
                                        htmlFor="create-category_title"
                                        title="Title"
                                      >
                                        Title
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  errors={Array []}
                                  label="Title"
                                  name={Array []}
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter title!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <ForwardRef
                                                onChange={[Function]}
                                              />
                                            }
                                          >
                                            <ForwardRef
                                              id="create-category_title"
                                              onChange={[Function]}
                                            >
                                              <ForwardRef
                                                affixWrapperClassName=""
                                                groupClassName=""
                                                id="create-category_title"
                                                inputClassName=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                prefixCls="ant-input"
                                                wrapperClassName=""
                                              >
                                                <BaseInput
                                                  affixWrapperClassName=""
                                                  focused={false}
                                                  groupClassName=""
                                                  handleReset={[Function]}
                                                  id="create-category_title"
                                                  inputElement={
                                                    <input
                                                      className="ant-input"
                                                      id="create-category_title"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                    />
                                                  }
                                                  prefixCls="ant-input"
                                                  suffix={null}
                                                  triggerFocus={[Function]}
                                                  value=""
                                                  wrapperClassName=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="create-category_title"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </BaseInput>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                    </TitleInput>
                    <SlugInput>
                      <FormItem
                        label="Slug"
                        name="slug"
                        rules={
                          Array [
                            Object {
                              "message": "Please input the slug!",
                              "required": true,
                            },
                            Object {
                              "message": "Please enter valid slug!",
                              "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                            },
                          ]
                        }
                      >
                        <WrapperField
                          label="Slug"
                          messageVariables={
                            Object {
                              "label": "Slug",
                            }
                          }
                          name="slug"
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please input the slug!",
                                "required": true,
                              },
                              Object {
                                "message": "Please enter valid slug!",
                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "create-category",
                                },
                                "_init": true,
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_slug"
                            label="Slug"
                            messageVariables={
                              Object {
                                "label": "Slug",
                              }
                            }
                            name={
                              Array [
                                "slug",
                              ]
                            }
                            onMetaChange={[Function]}
                            rules={
                              Array [
                                Object {
                                  "message": "Please input the slug!",
                                  "required": true,
                                },
                                Object {
                                  "message": "Please enter valid slug!",
                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                },
                              ]
                            }
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  htmlFor="create-category_slug"
                                  label="Slug"
                                  name="slug"
                                  prefixCls="ant-form"
                                  required={true}
                                  requiredMark={true}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                >
                                  <Col
                                    className="ant-form-item-label"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-label"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <label
                                        className="ant-form-item-required"
                                        htmlFor="create-category_slug"
                                        title="Slug"
                                      >
                                        Slug
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  errors={Array []}
                                  label="Slug"
                                  name={Array []}
                                  prefixCls="ant-form"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={<ForwardRef />}
                                          >
                                            <ForwardRef
                                              id="create-category_slug"
                                              onChange={[Function]}
                                            >
                                              <ForwardRef
                                                affixWrapperClassName=""
                                                groupClassName=""
                                                id="create-category_slug"
                                                inputClassName=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                prefixCls="ant-input"
                                                wrapperClassName=""
                                              >
                                                <BaseInput
                                                  affixWrapperClassName=""
                                                  focused={false}
                                                  groupClassName=""
                                                  handleReset={[Function]}
                                                  id="create-category_slug"
                                                  inputElement={
                                                    <input
                                                      className="ant-input"
                                                      id="create-category_slug"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      type="text"
                                                    />
                                                  }
                                                  prefixCls="ant-input"
                                                  suffix={null}
                                                  triggerFocus={[Function]}
                                                  value=""
                                                  wrapperClassName=""
                                                >
                                                  <input
                                                    className="ant-input"
                                                    id="create-category_slug"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </BaseInput>
                                              </ForwardRef>
                                            </ForwardRef>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                    </SlugInput>
                    <FormItem
                      label="Language"
                      name="language"
                    >
                      <WrapperField
                        label="Language"
                        messageVariables={
                          Object {
                            "label": "Language",
                          }
                        }
                        name="language"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_language"
                          label="Language"
                          messageVariables={
                            Object {
                              "label": "Language",
                            }
                          }
                          name={
                            Array [
                              "language",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_language"
                                label="Language"
                                name="language"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_language"
                                      title="Language"
                                    >
                                      Language
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Language"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef(InternalSelect)
                                              defaultValue="english"
                                              style={
                                                Object {
                                                  "width": 120,
                                                }
                                              }
                                            >
                                              <Option
                                                value="english"
                                              >
                                                English
                                              </Option>
                                              <Option
                                                value="telugu"
                                              >
                                                Telugu
                                              </Option>
                                            </ForwardRef(InternalSelect)>
                                          }
                                          value="english"
                                        >
                                          <ForwardRef(InternalSelect)
                                            defaultValue="english"
                                            id="create-category_language"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "width": 120,
                                              }
                                            }
                                            value="english"
                                          >
                                            <Select
                                              className="ant-select-in-form-item"
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue="english"
                                              dropdownClassName=""
                                              id="create-category_language"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={24}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              placement="bottomLeft"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              style={
                                                Object {
                                                  "width": 120,
                                                }
                                              }
                                              transitionName="ant-slide-up"
                                              value="english"
                                            >
                                              <BaseSelect
                                                OptionList={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "OptionList",
                                                    "render": [Function],
                                                  }
                                                }
                                                activeDescendantId="create-category_language_list_0"
                                                activeValue={null}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                displayValues={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": "english",
                                                      "label": "English",
                                                      "value": "english",
                                                    },
                                                  ]
                                                }
                                                dropdownClassName=""
                                                dropdownMatchSelectWidth={true}
                                                emptyOptions={false}
                                                id="create-category_language"
                                                inputIcon={[Function]}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                omitDomProps={
                                                  Array [
                                                    "inputValue",
                                                  ]
                                                }
                                                onDisplayValuesChange={[Function]}
                                                onSearch={[Function]}
                                                onSearchSplit={[Function]}
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                style={
                                                  Object {
                                                    "width": 120,
                                                  }
                                                }
                                                transitionName="ant-slide-up"
                                              >
                                                <div
                                                  className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "width": 120,
                                                    }
                                                  }
                                                >
                                                  <SelectTrigger
                                                    containerWidth={null}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    empty={false}
                                                    getTriggerDOMNode={[Function]}
                                                    onPopupMouseEnter={[Function]}
                                                    placement="bottomLeft"
                                                    popupElement={<ForwardRef(OptionList) />}
                                                    prefixCls="ant-select"
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <Trigger
                                                      action={Array []}
                                                      afterPopupVisibleChange={[Function]}
                                                      autoDestroy={false}
                                                      blurDelay={0.15}
                                                      builtinPlacements={
                                                        Object {
                                                          "bottomLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tl",
                                                              "bl",
                                                            ],
                                                          },
                                                          "bottomRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tr",
                                                              "br",
                                                            ],
                                                          },
                                                          "topLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "bl",
                                                              "tl",
                                                            ],
                                                          },
                                                          "topRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "br",
                                                              "tr",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      defaultPopupVisible={false}
                                                      destroyPopupOnHide={false}
                                                      focusDelay={0}
                                                      getDocument={[Function]}
                                                      getPopupClassNameFromAlign={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      hideAction={Array []}
                                                      mask={false}
                                                      maskClosable={true}
                                                      mouseEnterDelay={0}
                                                      mouseLeaveDelay={0.1}
                                                      onPopupAlign={[Function]}
                                                      onPopupVisibleChange={[Function]}
                                                      popup={
                                                        <div
                                                          onMouseEnter={[Function]}
                                                        >
                                                          <ForwardRef(OptionList) />
                                                        </div>
                                                      }
                                                      popupAlign={Object {}}
                                                      popupClassName=""
                                                      popupPlacement="bottomLeft"
                                                      popupStyle={
                                                        Object {
                                                          "minWidth": null,
                                                          "width": null,
                                                        }
                                                      }
                                                      popupTransitionName="ant-slide-up"
                                                      prefixCls="ant-select-dropdown"
                                                      showAction={Array []}
                                                    >
                                                      <Selector
                                                        OptionList={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "OptionList",
                                                            "render": [Function],
                                                          }
                                                        }
                                                        activeDescendantId="create-category_language_list_0"
                                                        activeValue={null}
                                                        className="ant-select-in-form-item"
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        displayValues={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "english",
                                                              "label": "English",
                                                              "value": "english",
                                                            },
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="create-category_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="create-category_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="create-category_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="create-category_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="English"
                                                              >
                                                                English
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        emptyOptions={false}
                                                        id="create-category_language"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        key="trigger"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        omitDomProps={
                                                          Array [
                                                            "inputValue",
                                                          ]
                                                        }
                                                        onDisplayValuesChange={[Function]}
                                                        onRemove={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSplit={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placement="bottomLeft"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        style={
                                                          Object {
                                                            "width": 120,
                                                          }
                                                        }
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "english",
                                                              "label": "English",
                                                              "value": "english",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <div
                                                          className="ant-select-selector"
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SingleSelector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="create-category_language_list_0"
                                                            activeValue={null}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            displayValues={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "english",
                                                                  "label": "English",
                                                                  "value": "english",
                                                                },
                                                              ]
                                                            }
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="create-category_language_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="create-category_language_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="create-category_language_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="create-category_language"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="English"
                                                                  >
                                                                    English
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={false}
                                                            id="create-category_language"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-activedescendant="create-category_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="create-category_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="create-category_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="create-category_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />,
                                                              }
                                                            }
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onInputChange={[Function]}
                                                            onInputCompositionEnd={[Function]}
                                                            onInputCompositionStart={[Function]}
                                                            onInputKeyDown={[Function]}
                                                            onInputMouseDown={[Function]}
                                                            onInputPaste={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "width": 120,
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "english",
                                                                  "label": "English",
                                                                  "value": "english",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <span
                                                              className="ant-select-selection-search"
                                                            >
                                                              <Input
                                                                activeDescendantId="create-category_language_list_0"
                                                                attrs={Object {}}
                                                                editable={false}
                                                                id="create-category_language"
                                                                inputElement={null}
                                                                onChange={[Function]}
                                                                onCompositionEnd={[Function]}
                                                                onCompositionStart={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                prefixCls="ant-select"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-activedescendant="create-category_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="create-category_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="create-category_language_list"
                                                                  autoComplete="off"
                                                                  className="ant-select-selection-search-input"
                                                                  id="create-category_language"
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  readOnly={true}
                                                                  role="combobox"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </Input>
                                                            </span>
                                                            <span
                                                              className="ant-select-selection-item"
                                                              title="English"
                                                            >
                                                              English
                                                            </span>
                                                          </SingleSelector>
                                                        </div>
                                                      </Selector>
                                                    </Trigger>
                                                  </SelectTrigger>
                                                  <TransBtn
                                                    className="ant-select-arrow"
                                                    customizeIcon={[Function]}
                                                    customizeIconProps={
                                                      Object {
                                                        "focused": false,
                                                        "loading": undefined,
                                                        "open": undefined,
                                                        "searchValue": "",
                                                        "showSearch": false,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-arrow"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(DownOutlined)
                                                        className="ant-select-suffix"
                                                      >
                                                        <AntdIcon
                                                          className="ant-select-suffix"
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="down"
                                                            className="anticon anticon-down ant-select-suffix"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="down"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-down"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                  key="svg-down-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DownOutlined)>
                                                    </span>
                                                  </TransBtn>
                                                </div>
                                              </BaseSelect>
                                            </Select>
                                          </ForwardRef(InternalSelect)>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem
                      label="Categories"
                      name="categories"
                    >
                      <WrapperField
                        label="Categories"
                        messageVariables={
                          Object {
                            "label": "Categories",
                          }
                        }
                        name="categories"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_categories"
                          label="Categories"
                          messageVariables={
                            Object {
                              "label": "Categories",
                            }
                          }
                          name={
                            Array [
                              "categories",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_categories"
                                label="Categories"
                                name="categories"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_categories"
                                      title="Categories"
                                    >
                                      Categories
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Categories"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <Selector
                                              action="Categories"
                                              createEntity="Category"
                                              mode="multiple"
                                            />
                                          }
                                        >
                                          <Selector
                                            action="Categories"
                                            createEntity="Category"
                                            id="create-category_categories"
                                            mode="multiple"
                                            onChange={[Function]}
                                          >
                                            <ForwardRef(InternalSelect)
                                              allowClear={true}
                                              autoClearSearchValue={true}
                                              bordered={true}
                                              defaultValue={Array []}
                                              filterOption={[Function]}
                                              getPopupContainer={[Function]}
                                              listHeight={128}
                                              loading={false}
                                              mode="multiple"
                                              notFoundContent={
                                                <Empty
                                                  description="No categories available. Type something to create new Category"
                                                  image={<Simple />}
                                                />
                                              }
                                              onChange={[Function]}
                                              onPopupScroll={[Function]}
                                              onSearch={[Function]}
                                              placeholder="Select categories"
                                              searchValue=""
                                              value={Array []}
                                            >
                                              <Select
                                                allowClear={true}
                                                autoClearSearchValue={true}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                defaultValue={Array []}
                                                dropdownClassName=""
                                                filterOption={[Function]}
                                                getPopupContainer={[Function]}
                                                inputIcon={[Function]}
                                                listHeight={128}
                                                listItemHeight={24}
                                                loading={false}
                                                menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                mode="multiple"
                                                notFoundContent={
                                                  <Empty
                                                    description="No categories available. Type something to create new Category"
                                                    image={<Simple />}
                                                  />
                                                }
                                                onChange={[Function]}
                                                onPopupScroll={[Function]}
                                                onSearch={[Function]}
                                                placeholder="Select categories"
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                transitionName="ant-slide-up"
                                                value={Array []}
                                              >
                                                <BaseSelect
                                                  OptionList={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "OptionList",
                                                      "render": [Function],
                                                    }
                                                  }
                                                  activeDescendantId="undefined_list_0"
                                                  activeValue={null}
                                                  allowClear={true}
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  displayValues={Array []}
                                                  dropdownClassName=""
                                                  dropdownMatchSelectWidth={true}
                                                  emptyOptions={true}
                                                  getPopupContainer={[Function]}
                                                  inputIcon={[Function]}
                                                  loading={false}
                                                  mode="multiple"
                                                  notFoundContent={
                                                    <Empty
                                                      description="No categories available. Type something to create new Category"
                                                      image={<Simple />}
                                                    />
                                                  }
                                                  omitDomProps={
                                                    Array [
                                                      "inputValue",
                                                    ]
                                                  }
                                                  onDisplayValuesChange={[Function]}
                                                  onPopupScroll={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSplit={[Function]}
                                                  placeholder="Select categories"
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  transitionName="ant-slide-up"
                                                >
                                                  <div
                                                    className="ant-select ant-select-in-form-item ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SelectTrigger
                                                      containerWidth={null}
                                                      dropdownClassName=""
                                                      dropdownMatchSelectWidth={true}
                                                      empty={true}
                                                      getPopupContainer={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      onPopupMouseEnter={[Function]}
                                                      placement="bottomLeft"
                                                      popupElement={<ForwardRef(OptionList) />}
                                                      prefixCls="ant-select"
                                                      transitionName="ant-slide-up"
                                                    >
                                                      <Trigger
                                                        action={Array []}
                                                        afterPopupVisibleChange={[Function]}
                                                        autoDestroy={false}
                                                        blurDelay={0.15}
                                                        builtinPlacements={
                                                          Object {
                                                            "bottomLeft": Object {
                                                              "offset": Array [
                                                                0,
                                                                4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "tl",
                                                                "bl",
                                                              ],
                                                            },
                                                            "bottomRight": Object {
                                                              "offset": Array [
                                                                0,
                                                                4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "tr",
                                                                "br",
                                                              ],
                                                            },
                                                            "topLeft": Object {
                                                              "offset": Array [
                                                                0,
                                                                -4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "bl",
                                                                "tl",
                                                              ],
                                                            },
                                                            "topRight": Object {
                                                              "offset": Array [
                                                                0,
                                                                -4,
                                                              ],
                                                              "overflow": Object {
                                                                "adjustX": 0,
                                                                "adjustY": 1,
                                                              },
                                                              "points": Array [
                                                                "br",
                                                                "tr",
                                                              ],
                                                            },
                                                          }
                                                        }
                                                        defaultPopupVisible={false}
                                                        destroyPopupOnHide={false}
                                                        focusDelay={0}
                                                        getDocument={[Function]}
                                                        getPopupClassNameFromAlign={[Function]}
                                                        getPopupContainer={[Function]}
                                                        getTriggerDOMNode={[Function]}
                                                        hideAction={Array []}
                                                        mask={false}
                                                        maskClosable={true}
                                                        mouseEnterDelay={0}
                                                        mouseLeaveDelay={0.1}
                                                        onPopupAlign={[Function]}
                                                        onPopupVisibleChange={[Function]}
                                                        popup={
                                                          <div
                                                            onMouseEnter={[Function]}
                                                          >
                                                            <ForwardRef(OptionList) />
                                                          </div>
                                                        }
                                                        popupAlign={Object {}}
                                                        popupClassName="ant-select-dropdown-empty"
                                                        popupPlacement="bottomLeft"
                                                        popupStyle={
                                                          Object {
                                                            "minWidth": null,
                                                            "width": null,
                                                          }
                                                        }
                                                        popupTransitionName="ant-slide-up"
                                                        prefixCls="ant-select-dropdown"
                                                        showAction={Array []}
                                                      >
                                                        <Selector
                                                          OptionList={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "displayName": "OptionList",
                                                              "render": [Function],
                                                            }
                                                          }
                                                          activeDescendantId="undefined_list_0"
                                                          activeValue={null}
                                                          allowClear={true}
                                                          className="ant-select-in-form-item"
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          displayValues={Array []}
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-overflow"
                                                                >
                                                                  <div
                                                                    class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                                <span
                                                                  class="ant-select-selection-placeholder"
                                                                >
                                                                  Select categories
                                                                </span>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          dropdownMatchSelectWidth={true}
                                                          emptyOptions={true}
                                                          getPopupContainer={[Function]}
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          key="trigger"
                                                          loading={false}
                                                          mode="multiple"
                                                          notFoundContent={
                                                            <Empty
                                                              description="No categories available. Type something to create new Category"
                                                              image={<Simple />}
                                                            />
                                                          }
                                                          omitDomProps={
                                                            Array [
                                                              "inputValue",
                                                            ]
                                                          }
                                                          onDisplayValuesChange={[Function]}
                                                          onPopupScroll={[Function]}
                                                          onRemove={[Function]}
                                                          onSearch={[Function]}
                                                          onSearchSplit={[Function]}
                                                          onSearchSubmit={[Function]}
                                                          onToggleOpen={[Function]}
                                                          placeholder="Select categories"
                                                          placement="bottomLeft"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          tokenWithEnter={false}
                                                          transitionName="ant-slide-up"
                                                          values={Array []}
                                                        >
                                                          <div
                                                            className="ant-select-selector"
                                                            onClick={[Function]}
                                                            onMouseDown={[Function]}
                                                          >
                                                            <SelectSelector
                                                              OptionList={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "displayName": "OptionList",
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              activeDescendantId="undefined_list_0"
                                                              activeValue={null}
                                                              allowClear={true}
                                                              className="ant-select-in-form-item"
                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                              displayValues={Array []}
                                                              domRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="ant-select-selector"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-overflow"
                                                                    >
                                                                      <div
                                                                        class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                        style="opacity: 1;"
                                                                      >
                                                                        <div
                                                                          class="ant-select-selection-search"
                                                                          style="width: 0px;"
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="rc_select_TEST_OR_SSR_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="rc_select_TEST_OR_SSR_list"
                                                                            autocomplete="off"
                                                                            class="ant-select-selection-search-input"
                                                                            id="rc_select_TEST_OR_SSR"
                                                                            readonly=""
                                                                            role="combobox"
                                                                            style="opacity: 0;"
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                          <span
                                                                            aria-hidden="true"
                                                                            class="ant-select-selection-search-mirror"
                                                                          >
                                                                            
                                                                             
                                                                          </span>
                                                                        </div>
                                                                      </div>
                                                                    </div>
                                                                    <span
                                                                      class="ant-select-selection-placeholder"
                                                                    >
                                                                      Select categories
                                                                    </span>
                                                                  </div>,
                                                                }
                                                              }
                                                              dropdownClassName=""
                                                              dropdownMatchSelectWidth={true}
                                                              emptyOptions={true}
                                                              getPopupContainer={[Function]}
                                                              inputElement={null}
                                                              inputIcon={[Function]}
                                                              inputRef={
                                                                Object {
                                                                  "current": <input
                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="rc_select_TEST_OR_SSR"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    type="search"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />,
                                                                }
                                                              }
                                                              loading={false}
                                                              mode="multiple"
                                                              notFoundContent={
                                                                <Empty
                                                                  description="No categories available. Type something to create new Category"
                                                                  image={<Simple />}
                                                                />
                                                              }
                                                              omitDomProps={
                                                                Array [
                                                                  "inputValue",
                                                                ]
                                                              }
                                                              onDisplayValuesChange={[Function]}
                                                              onInputChange={[Function]}
                                                              onInputCompositionEnd={[Function]}
                                                              onInputCompositionStart={[Function]}
                                                              onInputKeyDown={[Function]}
                                                              onInputMouseDown={[Function]}
                                                              onInputPaste={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onRemove={[Function]}
                                                              onSearch={[Function]}
                                                              onSearchSplit={[Function]}
                                                              onSearchSubmit={[Function]}
                                                              onToggleOpen={[Function]}
                                                              placeholder="Select categories"
                                                              placement="bottomLeft"
                                                              prefixCls="ant-select"
                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                              searchValue=""
                                                              showSearch={true}
                                                              tokenWithEnter={false}
                                                              transitionName="ant-slide-up"
                                                              values={Array []}
                                                            >
                                                              <Overflow
                                                                data={Array []}
                                                                itemKey="key"
                                                                prefixCls="ant-select-selection-overflow"
                                                                renderItem={[Function]}
                                                                renderRest={[Function]}
                                                                suffix={
                                                                  <div
                                                                    className="ant-select-selection-search"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <ForwardRef(Input)
                                                                      activeDescendantId="undefined_list_0"
                                                                      attrs={Object {}}
                                                                      editable={false}
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    />
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                      
                                                                       
                                                                    </span>
                                                                  </div>
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow"
                                                                >
                                                                  <Item
                                                                    className="ant-select-selection-overflow-item-suffix"
                                                                    display={true}
                                                                    invalidate={false}
                                                                    order={0}
                                                                    prefixCls="ant-select-selection-overflow-item"
                                                                    registerSize={[Function]}
                                                                    responsive={false}
                                                                    responsiveDisabled={true}
                                                                    style={Object {}}
                                                                  >
                                                                    <div
                                                                      className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                      style={
                                                                        Object {
                                                                          "height": undefined,
                                                                          "opacity": 1,
                                                                          "order": undefined,
                                                                          "overflowY": undefined,
                                                                          "pointerEvents": undefined,
                                                                          "position": undefined,
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="ant-select-selection-search"
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "width": 0,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Input
                                                                          activeDescendantId="undefined_list_0"
                                                                          attrs={Object {}}
                                                                          editable={false}
                                                                          inputElement={null}
                                                                          onChange={[Function]}
                                                                          onCompositionEnd={[Function]}
                                                                          onCompositionStart={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onPaste={[Function]}
                                                                          prefixCls="ant-select"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-activedescendant="undefined_list_0"
                                                                            aria-autocomplete="list"
                                                                            aria-controls="undefined_list"
                                                                            aria-haspopup="listbox"
                                                                            aria-owns="undefined_list"
                                                                            autoComplete="off"
                                                                            className="ant-select-selection-search-input"
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            readOnly={true}
                                                                            role="combobox"
                                                                            style={
                                                                              Object {
                                                                                "opacity": 0,
                                                                              }
                                                                            }
                                                                            type="search"
                                                                            unselectable="on"
                                                                            value=""
                                                                          />
                                                                        </Input>
                                                                        <span
                                                                          aria-hidden={true}
                                                                          className="ant-select-selection-search-mirror"
                                                                        >
                                                                           
                                                                        </span>
                                                                      </div>
                                                                    </div>
                                                                  </Item>
                                                                </div>
                                                              </Overflow>
                                                              <span
                                                                className="ant-select-selection-placeholder"
                                                              >
                                                                Select categories
                                                              </span>
                                                            </SelectSelector>
                                                          </div>
                                                        </Selector>
                                                      </Trigger>
                                                    </SelectTrigger>
                                                  </div>
                                                </BaseSelect>
                                              </Select>
                                            </ForwardRef(InternalSelect)>
                                          </Selector>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <DescriptionInput
                      inputProps={
                        Object {
                          "placeholder": "Enter Description...",
                          "style": Object {
                            "width": "600px",
                          },
                        }
                      }
                      type="editor"
                    >
                      <FormItem
                        label="Description"
                        name="description"
                      >
                        <WrapperField
                          label="Description"
                          messageVariables={
                            Object {
                              "label": "Description",
                            }
                          }
                          name="description"
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                        >
                          <Field
                            fieldContext={
                              Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": "create-category",
                                },
                                "_init": true,
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldWarning": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                                "validateTrigger": "onChange",
                              }
                            }
                            key="_description"
                            label="Description"
                            messageVariables={
                              Object {
                                "label": "Description",
                              }
                            }
                            name={
                              Array [
                                "description",
                              ]
                            }
                            onMetaChange={[Function]}
                            trigger="onChange"
                            validateTrigger="onChange"
                            valuePropName="value"
                          >
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  htmlFor="create-category_description"
                                  label="Description"
                                  name="description"
                                  prefixCls="ant-form"
                                  required={false}
                                  requiredMark={true}
                                >
                                  <Col
                                    className="ant-form-item-label"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-label"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <label
                                        className=""
                                        htmlFor="create-category_description"
                                        title="Description"
                                      >
                                        Description
                                      </label>
                                    </div>
                                  </Col>
                                </FormItemLabel>
                                <FormItemInput
                                  errors={Array []}
                                  label="Description"
                                  name={Array []}
                                  prefixCls="ant-form"
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                    span={24}
                                  >
                                    <div
                                      className="ant-col ant-col-24 ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Component
                                            update={
                                              <Editor
                                                onChange={[Function]}
                                                placeholder="Enter Description..."
                                                style={
                                                  Object {
                                                    "width": "600px",
                                                  }
                                                }
                                              />
                                            }
                                          >
                                            <Editor
                                              id="create-category_description"
                                              onChange={[Function]}
                                              placeholder="Enter Description..."
                                              style={
                                                Object {
                                                  "width": "600px",
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "width": "600px",
                                                  }
                                                }
                                              />
                                            </Editor>
                                          </Component>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </Field>
                        </WrapperField>
                      </FormItem>
                    </DescriptionInput>
                    <MetaForm>
                      <Collapse
                        expandIcon={[Function]}
                        expandIconPosition="right"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <Collapse
                          accordion={false}
                          className="ant-collapse-icon-position-right"
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          expandIconPosition="right"
                          onChange={[Function]}
                          openMotion={
                            Object {
                              "leavedClassName": "ant-collapse-content-hidden",
                              "motionAppear": false,
                              "motionDeadline": 500,
                              "motionName": "ant-motion-collapse",
                              "onAppearActive": [Function],
                              "onAppearEnd": [Function],
                              "onAppearStart": [Function],
                              "onEnterActive": [Function],
                              "onEnterEnd": [Function],
                              "onEnterStart": [Function],
                              "onLeaveActive": [Function],
                              "onLeaveEnd": [Function],
                              "onLeaveStart": [Function],
                            }
                          }
                          prefixCls="ant-collapse"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="ant-collapse ant-collapse-icon-position-right"
                            role={null}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <CollapsePanel
                              accordion={false}
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              header="Meta Data"
                              isActive={false}
                              key="0"
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="0"
                              prefixCls="ant-collapse"
                            >
                              <CollapsePanel
                                accordion={false}
                                className=""
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                forceRender={false}
                                header="Meta Data"
                                headerClass=""
                                isActive={false}
                                onItemClick={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                panelKey="0"
                                prefixCls="ant-collapse"
                                showArrow={true}
                              >
                                <div
                                  className="ant-collapse-item"
                                >
                                  <div
                                    aria-expanded={false}
                                    className="ant-collapse-header"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <div>
                                      <Button
                                        className="ant-collapse-arrow"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default ant-collapse-arrow"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Expand
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                    Meta Data
                                  </div>
                                  <CSSMotion
                                    forceRender={false}
                                    leavedClassName="ant-collapse-content-hidden"
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionName="ant-motion-collapse"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={false}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </div>
                              </CollapsePanel>
                            </CollapsePanel>
                            <CollapsePanel
                              accordion={false}
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              header="Code Injection"
                              isActive={false}
                              key="1"
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="1"
                              prefixCls="ant-collapse"
                            >
                              <CollapsePanel
                                accordion={false}
                                className=""
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                forceRender={false}
                                header="Code Injection"
                                headerClass=""
                                isActive={false}
                                onItemClick={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                panelKey="1"
                                prefixCls="ant-collapse"
                                showArrow={true}
                              >
                                <div
                                  className="ant-collapse-item"
                                >
                                  <div
                                    aria-expanded={false}
                                    className="ant-collapse-header"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <div>
                                      <Button
                                        className="ant-collapse-arrow"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default ant-collapse-arrow"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Expand
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                    Code Injection
                                  </div>
                                  <CSSMotion
                                    forceRender={false}
                                    leavedClassName="ant-collapse-content-hidden"
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionName="ant-motion-collapse"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={false}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </div>
                              </CollapsePanel>
                            </CollapsePanel>
                          </div>
                        </Collapse>
                      </Collapse>
                      <Collapse
                        expandIcon={[Function]}
                        expandIconPosition="right"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <Collapse
                          accordion={false}
                          className="ant-collapse-icon-position-right"
                          destroyInactivePanel={false}
                          expandIcon={[Function]}
                          expandIconPosition="right"
                          onChange={[Function]}
                          openMotion={
                            Object {
                              "leavedClassName": "ant-collapse-content-hidden",
                              "motionAppear": false,
                              "motionDeadline": 500,
                              "motionName": "ant-motion-collapse",
                              "onAppearActive": [Function],
                              "onAppearEnd": [Function],
                              "onAppearStart": [Function],
                              "onEnterActive": [Function],
                              "onEnterEnd": [Function],
                              "onEnterStart": [Function],
                              "onLeaveActive": [Function],
                              "onLeaveEnd": [Function],
                              "onLeaveStart": [Function],
                            }
                          }
                          prefixCls="ant-collapse"
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="ant-collapse ant-collapse-icon-position-right"
                            role={null}
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <CollapsePanel
                              accordion={false}
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              header="Meta Fields"
                              isActive={false}
                              key="0"
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="0"
                              prefixCls="ant-collapse"
                            >
                              <CollapsePanel
                                accordion={false}
                                className=""
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                forceRender={false}
                                header="Meta Fields"
                                headerClass=""
                                isActive={false}
                                onItemClick={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                panelKey="0"
                                prefixCls="ant-collapse"
                                showArrow={true}
                              >
                                <div
                                  className="ant-collapse-item"
                                >
                                  <div
                                    aria-expanded={false}
                                    className="ant-collapse-header"
                                    onClick={[Function]}
                                    onKeyPress={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <div>
                                      <Button
                                        className="ant-collapse-arrow"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default ant-collapse-arrow"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Expand
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                    Meta Fields
                                  </div>
                                  <CSSMotion
                                    forceRender={false}
                                    leavedClassName="ant-collapse-content-hidden"
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionName="ant-motion-collapse"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={false}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </div>
                              </CollapsePanel>
                            </CollapsePanel>
                          </div>
                        </Collapse>
                      </Collapse>
                    </MetaForm>
                    <FormItem
                      wrapperCol={
                        Object {
                          "offset": 10,
                          "span": 14,
                        }
                      }
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          role="row"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                            requiredMark={true}
                            wrapperCol={
                              Object {
                                "offset": 10,
                                "span": 14,
                              }
                            }
                          />
                          <FormItemInput
                            errors={Array []}
                            name={Array []}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validating={false}
                            warnings={Array []}
                            wrapperCol={
                              Object {
                                "offset": 10,
                                "span": 14,
                              }
                            }
                          >
                            <Col
                              className="ant-form-item-control"
                              offset={10}
                              span={14}
                            >
                              <div
                                className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                                role="cell"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Space>
                                      <div
                                        className="ant-space ant-space-horizontal ant-space-align-center"
                                        style={Object {}}
                                      >
                                        <Item
                                          className="ant-space-item"
                                          direction="horizontal"
                                          index={0}
                                          key="ant-space-item-0"
                                          marginDirection="marginRight"
                                          wrap={false}
                                        >
                                          <div
                                            className="ant-space-item"
                                            style={
                                              Object {
                                                "marginRight": 8,
                                              }
                                            }
                                          >
                                            <Button
                                              disabled={true}
                                              htmlType="submit"
                                              type="primary"
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-primary"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="submit"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Submit
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                        </Item>
                                        <Item
                                          className="ant-space-item"
                                          direction="horizontal"
                                          index={1}
                                          key="ant-space-item-1"
                                          marginDirection="marginRight"
                                          wrap={false}
                                        >
                                          <div
                                            className="ant-space-item"
                                            style={Object {}}
                                          >
                                            <Button
                                              htmlType="button"
                                              onClick={[Function]}
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-default"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Reset
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                        </Item>
                                      </div>
                                    </Space>
                                  </div>
                                </div>
                                <ErrorList
                                  className="ant-form-item-explain-connected"
                                  errors={Array []}
                                  helpStatus=""
                                  warnings={Array []}
                                >
                                  <CSSMotion
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionEnter={false}
                                    motionName="ant-show-help"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </div>
                </Col>
                <Col
                  offset={4}
                  span={6}
                >
                  <div
                    className="ant-col ant-col-6 ant-col-offset-4"
                    role="cell"
                    style={Object {}}
                  >
                    <FormItem
                      label="Featured Image"
                      name="medium_id"
                    >
                      <WrapperField
                        label="Featured Image"
                        messageVariables={
                          Object {
                            "label": "Featured Image",
                          }
                        }
                        name="medium_id"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_medium_id"
                          label="Featured Image"
                          messageVariables={
                            Object {
                              "label": "Featured Image",
                            }
                          }
                          name={
                            Array [
                              "medium_id",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_medium_id"
                                label="Featured Image"
                                name="medium_id"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_medium_id"
                                      title="Featured Image"
                                    >
                                      Featured Image
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Featured Image"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={<MediaSelector />}
                                        >
                                          <MediaSelector
                                            id="create-category_medium_id"
                                            onChange={[Function]}
                                          >
                                            <Modal
                                              closable={false}
                                              confirmLoading={false}
                                              footer={
                                                Array [
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                  >
                                                    Cancel
                                                  </ForwardRef(InternalButton)>,
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                    type="primary"
                                                  >
                                                    Ok
                                                  </ForwardRef(InternalButton)>,
                                                ]
                                              }
                                              okType="primary"
                                              onCancel={[Function]}
                                              visible={false}
                                              width="800px"
                                            >
                                              <Dialog
                                                closable={false}
                                                closeIcon={
                                                  <span
                                                    className="ant-modal-close-x"
                                                  >
                                                    <ForwardRef(CloseOutlined)
                                                      className="ant-modal-close-icon"
                                                    />
                                                  </span>
                                                }
                                                confirmLoading={false}
                                                focusTriggerAfterClose={true}
                                                footer={
                                                  Array [
                                                    <ForwardRef(InternalButton)
                                                      onClick={[Function]}
                                                    >
                                                      Cancel
                                                    </ForwardRef(InternalButton)>,
                                                    <ForwardRef(InternalButton)
                                                      onClick={[Function]}
                                                      type="primary"
                                                    >
                                                      Ok
                                                    </ForwardRef(InternalButton)>,
                                                  ]
                                                }
                                                maskTransitionName="ant-fade"
                                                okType="primary"
                                                onCancel={[Function]}
                                                onClose={[Function]}
                                                prefixCls="ant-modal"
                                                transitionName="ant-zoom"
                                                visible={false}
                                                width="800px"
                                                wrapClassName=""
                                              >
                                                <PortalWrapper
                                                  visible={false}
                                                />
                                              </Dialog>
                                            </Modal>
                                            <Space
                                              direction="vertical"
                                            >
                                              <div
                                                className="ant-space ant-space-vertical"
                                                style={Object {}}
                                              >
                                                <Item
                                                  className="ant-space-item"
                                                  direction="vertical"
                                                  index={0}
                                                  key="ant-space-item-0"
                                                  marginDirection="marginRight"
                                                  wrap={false}
                                                >
                                                  <div
                                                    className="ant-space-item"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "alignItems": "center",
                                                          "display": "flex",
                                                          "justifyContent": "center",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "position": "relative",
                                                          }
                                                        }
                                                      >
                                                        <Button
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "background": "transparent",
                                                              "borderStyle": "dashed",
                                                              "display": "block",
                                                              "height": "auto",
                                                            }
                                                          }
                                                        >
                                                          <Wave
                                                            disabled={false}
                                                          >
                                                            <button
                                                              className="ant-btn ant-btn-default"
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "background": "transparent",
                                                                  "borderStyle": "dashed",
                                                                  "display": "block",
                                                                  "height": "auto",
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              <LoadingIcon
                                                                existIcon={false}
                                                                loading={false}
                                                                prefixCls="ant-btn"
                                                              >
                                                                <CSSMotion
                                                                  motionName="ant-btn-loading-icon-motion"
                                                                  onAppearActive={[Function]}
                                                                  onAppearStart={[Function]}
                                                                  onEnterActive={[Function]}
                                                                  onEnterStart={[Function]}
                                                                  onLeaveActive={[Function]}
                                                                  onLeaveStart={[Function]}
                                                                  removeOnLeave={true}
                                                                  visible={false}
                                                                >
                                                                  <DomWrapper />
                                                                </CSSMotion>
                                                              </LoadingIcon>
                                                              <PlaceholderImage
                                                                height="auto"
                                                                key=".0"
                                                                width="100%"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  height="auto"
                                                                  src="placeholderImage.svg"
                                                                  style={
                                                                    Object {
                                                                      "maxWidth": "240px",
                                                                      "objectFit": "contain",
                                                                      "padding": "1rem",
                                                                    }
                                                                  }
                                                                  width="100%"
                                                                />
                                                              </PlaceholderImage>
                                                            </button>
                                                          </Wave>
                                                        </Button>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </Item>
                                              </div>
                                            </Space>
                                          </MediaSelector>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </PodcastForm>
</Provider>
`;
