// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Categories Create Form component snapshot testing should match component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CategoryForm
    data={
      Object {
        "description": Object {
          "blocks": Array [
            Object {
              "data": Object {
                "text": "Description",
              },
              "type": "paragraph",
            },
          ],
          "time": 1613559903378,
          "version": "2.19.0",
        },
        "medium_id": 2,
        "name": "Name",
      }
    }
    onCreate={[MockFunction onCreate]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={
        Object {
          "description": Object {
            "blocks": Array [
              Object {
                "data": Object {
                  "text": "Description",
                },
                "type": "paragraph",
              },
            ],
            "time": 1613559903378,
            "version": "2.19.0",
          },
          "medium_id": 2,
          "name": "Name",
        }
      }
      layout="vertical"
      name="create-category"
      onFinish={[Function]}
      onValuesChange={[Function]}
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={
            Object {
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "text": "Description",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1613559903378,
                "version": "2.19.0",
              },
              "medium_id": 2,
              "name": "Name",
            }
          }
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row
              justify="center"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": "1200px",
                  "width": "100%",
                }
              }
            >
              <div
                className="ant-row ant-row-center"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="end"
                    >
                      <div
                        className="ant-row ant-row-end"
                        style={
                          Object {
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                validateStatus=""
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Space>
                                          <div
                                            className="ant-space ant-space-horizontal ant-space-align-center"
                                            style={Object {}}
                                          >
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={0}
                                              key="ant-space-item-0"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={
                                                  Object {
                                                    "marginRight": 8,
                                                  }
                                                }
                                              >
                                                <Button
                                                  htmlType="button"
                                                  onClick={[Function]}
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Reset
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={1}
                                              key="ant-space-item-1"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={Object {}}
                                              >
                                                <Button
                                                  disabled={true}
                                                  htmlType="submit"
                                                  type="primary"
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn ant-btn-primary"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Submit
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                          </div>
                                        </Space>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="ant-show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="space-around"
                      style={
                        Object {
                          "background": "#f0f2f5",
                          "marginBottom": "1rem",
                          "padding": "1.25rem",
                        }
                      }
                    >
                      <div
                        className="ant-row ant-row-space-around"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "marginLeft": -20,
                            "marginRight": -20,
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <Col
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <TitleInput
                              label="Category Name"
                              name="name"
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Category Name"
                                name="name"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter name!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Category Name"
                                  messageVariables={
                                    Object {
                                      "label": "Category Name",
                                    }
                                  }
                                  name="name"
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_name"
                                    label="Category Name"
                                    messageVariables={
                                      Object {
                                        "label": "Category Name",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    onReset={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_name"
                                          label="Category Name"
                                          name="name"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-category_name"
                                                title="Category Name"
                                              >
                                                Category Name
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Category Name"
                                          name={
                                            Array [
                                              "name",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                    value="Name"
                                                  >
                                                    <Input
                                                      id="create-category_name"
                                                      onChange={[Function]}
                                                      type="text"
                                                      value="Name"
                                                    >
                                                      <ClearableLabeledInput
                                                        bordered={true}
                                                        element={
                                                          <input
                                                            className="ant-input"
                                                            id="create-category_name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                            value="Name"
                                                          />
                                                        }
                                                        focused={false}
                                                        handleReset={[Function]}
                                                        id="create-category_name"
                                                        inputType="input"
                                                        onChange={[Function]}
                                                        prefixCls="ant-input"
                                                        triggerFocus={[Function]}
                                                        type="text"
                                                        value="Name"
                                                      >
                                                        <input
                                                          className="ant-input"
                                                          id="create-category_name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value="Name"
                                                        />
                                                      </ClearableLabeledInput>
                                                    </Input>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </TitleInput>
                            <Row
                              gutter={40}
                            >
                              <div
                                className="ant-row"
                                style={
                                  Object {
                                    "marginLeft": -20,
                                    "marginRight": -20,
                                  }
                                }
                              >
                                <Col
                                  md={
                                    Object {
                                      "span": 16,
                                    }
                                  }
                                >
                                  <div
                                    className="ant-col ant-col-md-16"
                                    style={
                                      Object {
                                        "paddingLeft": 20,
                                        "paddingRight": 20,
                                      }
                                    }
                                  >
                                    <FormItem
                                      label="Parent Category"
                                      name="parent_id"
                                    >
                                      <WrapperField
                                        label="Parent Category"
                                        messageVariables={
                                          Object {
                                            "label": "Parent Category",
                                          }
                                        }
                                        name="parent_id"
                                        onReset={[Function]}
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                      >
                                        <Field
                                          fieldContext={
                                            Object {
                                              "__INTERNAL__": Object {
                                                "itemRef": [Function],
                                                "name": "create-category",
                                              },
                                              "getFieldError": [Function],
                                              "getFieldInstance": [Function],
                                              "getFieldValue": [Function],
                                              "getFieldsError": [Function],
                                              "getFieldsValue": [Function],
                                              "getInternalHooks": [Function],
                                              "isFieldTouched": [Function],
                                              "isFieldValidating": [Function],
                                              "isFieldsTouched": [Function],
                                              "isFieldsValidating": [Function],
                                              "resetFields": [Function],
                                              "scrollToField": [Function],
                                              "setFields": [Function],
                                              "setFieldsValue": [Function],
                                              "submit": [Function],
                                              "validateFields": [Function],
                                              "validateTrigger": "onChange",
                                            }
                                          }
                                          key="_parent_id"
                                          label="Parent Category"
                                          messageVariables={
                                            Object {
                                              "label": "Parent Category",
                                            }
                                          }
                                          name={
                                            Array [
                                              "parent_id",
                                            ]
                                          }
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                          valuePropName="value"
                                        >
                                          <Row
                                            className="ant-form-item"
                                            key="row"
                                          >
                                            <div
                                              className="ant-row ant-form-item"
                                              style={Object {}}
                                            >
                                              <FormItemLabel
                                                htmlFor="create-category_parent_id"
                                                label="Parent Category"
                                                name="parent_id"
                                                prefixCls="ant-form"
                                                required={false}
                                                requiredMark={true}
                                              >
                                                <Col
                                                  className="ant-form-item-label"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-label"
                                                    style={Object {}}
                                                  >
                                                    <label
                                                      className=""
                                                      htmlFor="create-category_parent_id"
                                                      title="Parent Category"
                                                    >
                                                      Parent Category
                                                    </label>
                                                  </div>
                                                </Col>
                                              </FormItemLabel>
                                              <FormItemInput
                                                errors={Array []}
                                                label="Parent Category"
                                                name={
                                                  Array [
                                                    "parent_id",
                                                  ]
                                                }
                                                onDomErrorVisibleChange={[Function]}
                                                prefixCls="ant-form"
                                                status=""
                                                touched={false}
                                                validateStatus=""
                                                validating={false}
                                              >
                                                <Col
                                                  className="ant-form-item-control"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-control"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input"
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input-content"
                                                      >
                                                        <Component
                                                          update={1}
                                                        >
                                                          <Selector
                                                            action="Categories"
                                                            id="create-category_parent_id"
                                                            invalidOptions={Array []}
                                                            onChange={[Function]}
                                                            setLoading={false}
                                                          >
                                                            <ForwardRef(InternalSelect)
                                                              allowClear={true}
                                                              autoClearSearchValue={true}
                                                              bordered={true}
                                                              defaultValue={
                                                                Array [
                                                                  Array [],
                                                                ]
                                                              }
                                                              filterOption={[Function]}
                                                              getPopupContainer={[Function]}
                                                              listHeight={128}
                                                              loading={false}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              placeholder="Select categories"
                                                              searchValue=""
                                                              value={
                                                                Array [
                                                                  Array [],
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                allowClear={true}
                                                                autoClearSearchValue={true}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                getPopupContainer={[Function]}
                                                                inputIcon={[Function]}
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={null}
                                                                notFoundContent={null}
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                placeholder="Select categories"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                transitionName="ant-slide-up"
                                                                value={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                              >
                                                                <ForwardRef(Select)
                                                                  allowClear={true}
                                                                  autoClearSearchValue={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={
                                                                    Array [
                                                                      Array [],
                                                                    ]
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  getPopupContainer={[Function]}
                                                                  inputIcon={[Function]}
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={null}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  placeholder="Select categories"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  transitionName="ant-slide-up"
                                                                  value={
                                                                    Array [
                                                                      Array [],
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SelectTrigger
                                                                      containerWidth={null}
                                                                      dropdownClassName=""
                                                                      empty={true}
                                                                      getPopupContainer={[Function]}
                                                                      getTriggerDOMNode={[Function]}
                                                                      popupElement={
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={Array []}
                                                                          height={128}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={null}
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onScroll={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={Array []}
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={
                                                                            Set {
                                                                              Array [],
                                                                            }
                                                                          }
                                                                          virtual={true}
                                                                        />
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      transitionName="ant-slide-up"
                                                                      visible={false}
                                                                    >
                                                                      <Trigger
                                                                        action={Array []}
                                                                        afterPopupVisibleChange={[Function]}
                                                                        autoDestroy={false}
                                                                        blurDelay={0.15}
                                                                        builtinPlacements={
                                                                          Object {
                                                                            "bottomLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tl",
                                                                                "bl",
                                                                              ],
                                                                            },
                                                                            "bottomRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tr",
                                                                                "br",
                                                                              ],
                                                                            },
                                                                            "topLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "bl",
                                                                                "tl",
                                                                              ],
                                                                            },
                                                                            "topRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "br",
                                                                                "tr",
                                                                              ],
                                                                            },
                                                                          }
                                                                        }
                                                                        defaultPopupVisible={false}
                                                                        destroyPopupOnHide={false}
                                                                        focusDelay={0}
                                                                        getDocument={[Function]}
                                                                        getPopupClassNameFromAlign={[Function]}
                                                                        getPopupContainer={[Function]}
                                                                        getTriggerDOMNode={[Function]}
                                                                        hideAction={Array []}
                                                                        mask={false}
                                                                        maskClosable={true}
                                                                        mouseEnterDelay={0}
                                                                        mouseLeaveDelay={0.1}
                                                                        onPopupAlign={[Function]}
                                                                        onPopupVisibleChange={[Function]}
                                                                        popup={
                                                                          <div>
                                                                            <ForwardRef(OptionList)
                                                                              childrenAsData={true}
                                                                              defaultActiveFirstOption={true}
                                                                              flattenOptions={Array []}
                                                                              height={128}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              itemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent={null}
                                                                              onActiveValue={[Function]}
                                                                              onMouseEnter={[Function]}
                                                                              onScroll={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              options={Array []}
                                                                              prefixCls="ant-select"
                                                                              searchValue=""
                                                                              values={
                                                                                Set {
                                                                                  Array [],
                                                                                }
                                                                              }
                                                                              virtual={true}
                                                                            />
                                                                          </div>
                                                                        }
                                                                        popupAlign={Object {}}
                                                                        popupClassName="ant-select-dropdown-empty"
                                                                        popupPlacement="bottomLeft"
                                                                        popupStyle={
                                                                          Object {
                                                                            "minWidth": null,
                                                                            "width": null,
                                                                          }
                                                                        }
                                                                        popupTransitionName="ant-slide-up"
                                                                        popupVisible={false}
                                                                        prefixCls="ant-select-dropdown"
                                                                        showAction={Array []}
                                                                      >
                                                                        <Selector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          allowClear={true}
                                                                          autoClearSearchValue={true}
                                                                          className=""
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          defaultValue={
                                                                            Array [
                                                                              Array [],
                                                                            ]
                                                                          }
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-item"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          filterOption={[Function]}
                                                                          getPopupContainer={[Function]}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          key="trigger"
                                                                          listHeight={128}
                                                                          listItemHeight={24}
                                                                          loading={false}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          placeholder="Select categories"
                                                                          prefixCls="ant-select"
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={false}
                                                                          tokenWithEnter={false}
                                                                          transitionName="ant-slide-up"
                                                                          value={
                                                                            Array [
                                                                              Array [],
                                                                            ]
                                                                          }
                                                                          values={
                                                                            Array [
                                                                              Object {
                                                                                "disabled": undefined,
                                                                                "isCacheable": true,
                                                                                "key": Array [],
                                                                                "label": Array [],
                                                                                "value": Array [],
                                                                              },
                                                                            ]
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="ant-select-selector"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                          >
                                                                            <SingleSelector
                                                                              accessibilityIndex={0}
                                                                              activeValue={null}
                                                                              allowClear={true}
                                                                              autoClearSearchValue={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  Array [],
                                                                                ]
                                                                              }
                                                                              domRef={
                                                                                Object {
                                                                                  "current": <div
                                                                                    class="ant-select-selector"
                                                                                  >
                                                                                    <span
                                                                                      class="ant-select-selection-search"
                                                                                    >
                                                                                      <input
                                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                        aria-autocomplete="list"
                                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                        aria-haspopup="listbox"
                                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                        autocomplete="off"
                                                                                        class="ant-select-selection-search-input"
                                                                                        id="rc_select_TEST_OR_SSR"
                                                                                        readonly=""
                                                                                        role="combobox"
                                                                                        style="opacity: 0;"
                                                                                        type="search"
                                                                                        unselectable="on"
                                                                                        value=""
                                                                                      />
                                                                                    </span>
                                                                                    <span
                                                                                      class="ant-select-selection-item"
                                                                                    />
                                                                                  </div>,
                                                                                }
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              getPopupContainer={[Function]}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              inputElement={null}
                                                                              inputIcon={[Function]}
                                                                              inputRef={
                                                                                Object {
                                                                                  "current": <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />,
                                                                                }
                                                                              }
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onInputChange={[Function]}
                                                                              onInputCompositionEnd={[Function]}
                                                                              onInputCompositionStart={[Function]}
                                                                              onInputKeyDown={[Function]}
                                                                              onInputMouseDown={[Function]}
                                                                              onInputPaste={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              onSearchSubmit={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              searchValue=""
                                                                              showSearch={false}
                                                                              tokenWithEnter={false}
                                                                              transitionName="ant-slide-up"
                                                                              value={
                                                                                Array [
                                                                                  Array [],
                                                                                ]
                                                                              }
                                                                              values={
                                                                                Array [
                                                                                  Object {
                                                                                    "disabled": undefined,
                                                                                    "isCacheable": true,
                                                                                    "key": Array [],
                                                                                    "label": Array [],
                                                                                    "value": Array [],
                                                                                  },
                                                                                ]
                                                                              }
                                                                            >
                                                                              <span
                                                                                className="ant-select-selection-search"
                                                                              >
                                                                                <Input
                                                                                  accessibilityIndex={0}
                                                                                  attrs={Object {}}
                                                                                  editable={false}
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  inputElement={null}
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  prefixCls="ant-select"
                                                                                  value=""
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autoComplete="off"
                                                                                    className="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    onChange={[Function]}
                                                                                    onCompositionEnd={[Function]}
                                                                                    onCompositionStart={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onPaste={[Function]}
                                                                                    readOnly={true}
                                                                                    role="combobox"
                                                                                    style={
                                                                                      Object {
                                                                                        "opacity": 0,
                                                                                      }
                                                                                    }
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </Input>
                                                                              </span>
                                                                              <span
                                                                                className="ant-select-selection-item"
                                                                              />
                                                                            </SingleSelector>
                                                                          </div>
                                                                        </Selector>
                                                                      </Trigger>
                                                                    </SelectTrigger>
                                                                    <TransBtn
                                                                      className="ant-select-arrow"
                                                                      customizeIcon={[Function]}
                                                                      customizeIconProps={
                                                                        Object {
                                                                          "focused": false,
                                                                          "loading": false,
                                                                          "open": undefined,
                                                                          "searchValue": "",
                                                                          "showSearch": false,
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-arrow"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-select-suffix"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-select-suffix"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-select-suffix"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                    <TransBtn
                                                                      className="ant-select-clear"
                                                                      customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-clear"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(CloseCircleFilled)>
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close-circle",
                                                                                "theme": "filled",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="close-circle"
                                                                              className="anticon anticon-close-circle"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close-circle",
                                                                                    "theme": "filled",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="close-circle"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-close-circle"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                    key="svg-close-circle-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(CloseCircleFilled)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </div>
                                                                </ForwardRef(Select)>
                                                              </Select>
                                                            </ForwardRef(InternalSelect)>
                                                          </Selector>
                                                        </Component>
                                                      </div>
                                                    </div>
                                                    <ErrorList
                                                      errors={Array []}
                                                      onDomErrorVisibleChange={[Function]}
                                                    >
                                                      <CSSMotion
                                                        motionAppear={true}
                                                        motionDeadline={500}
                                                        motionName="ant-show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <DomWrapper />
                                                      </CSSMotion>
                                                    </ErrorList>
                                                  </div>
                                                </Col>
                                              </FormItemInput>
                                            </div>
                                          </Row>
                                        </Field>
                                      </WrapperField>
                                    </FormItem>
                                  </div>
                                </Col>
                                <Col
                                  md={
                                    Object {
                                      "span": 5,
                                    }
                                  }
                                >
                                  <div
                                    className="ant-col ant-col-md-5"
                                    style={
                                      Object {
                                        "paddingLeft": 20,
                                        "paddingRight": 20,
                                      }
                                    }
                                  >
                                    <FormItem
                                      label="Featured"
                                      name="is_featured"
                                      valuePropName="checked"
                                    >
                                      <WrapperField
                                        label="Featured"
                                        messageVariables={
                                          Object {
                                            "label": "Featured",
                                          }
                                        }
                                        name="is_featured"
                                        onReset={[Function]}
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="checked"
                                      >
                                        <Field
                                          fieldContext={
                                            Object {
                                              "__INTERNAL__": Object {
                                                "itemRef": [Function],
                                                "name": "create-category",
                                              },
                                              "getFieldError": [Function],
                                              "getFieldInstance": [Function],
                                              "getFieldValue": [Function],
                                              "getFieldsError": [Function],
                                              "getFieldsValue": [Function],
                                              "getInternalHooks": [Function],
                                              "isFieldTouched": [Function],
                                              "isFieldValidating": [Function],
                                              "isFieldsTouched": [Function],
                                              "isFieldsValidating": [Function],
                                              "resetFields": [Function],
                                              "scrollToField": [Function],
                                              "setFields": [Function],
                                              "setFieldsValue": [Function],
                                              "submit": [Function],
                                              "validateFields": [Function],
                                              "validateTrigger": "onChange",
                                            }
                                          }
                                          key="_is_featured"
                                          label="Featured"
                                          messageVariables={
                                            Object {
                                              "label": "Featured",
                                            }
                                          }
                                          name={
                                            Array [
                                              "is_featured",
                                            ]
                                          }
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                          valuePropName="checked"
                                        >
                                          <Row
                                            className="ant-form-item"
                                            key="row"
                                          >
                                            <div
                                              className="ant-row ant-form-item"
                                              style={Object {}}
                                            >
                                              <FormItemLabel
                                                htmlFor="create-category_is_featured"
                                                label="Featured"
                                                name="is_featured"
                                                prefixCls="ant-form"
                                                required={false}
                                                requiredMark={true}
                                                valuePropName="checked"
                                              >
                                                <Col
                                                  className="ant-form-item-label"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-label"
                                                    style={Object {}}
                                                  >
                                                    <label
                                                      className=""
                                                      htmlFor="create-category_is_featured"
                                                      title="Featured"
                                                    >
                                                      Featured
                                                    </label>
                                                  </div>
                                                </Col>
                                              </FormItemLabel>
                                              <FormItemInput
                                                errors={Array []}
                                                label="Featured"
                                                name={
                                                  Array [
                                                    "is_featured",
                                                  ]
                                                }
                                                onDomErrorVisibleChange={[Function]}
                                                prefixCls="ant-form"
                                                status=""
                                                touched={false}
                                                validateStatus=""
                                                validating={false}
                                                valuePropName="checked"
                                              >
                                                <Col
                                                  className="ant-form-item-control"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-control"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input"
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input-content"
                                                      >
                                                        <Component
                                                          update={1}
                                                        >
                                                          <Switch
                                                            id="create-category_is_featured"
                                                            onChange={[Function]}
                                                          >
                                                            <Wave
                                                              insertExtraNode={true}
                                                            >
                                                              <Switch
                                                                className=""
                                                                id="create-category_is_featured"
                                                                loadingIcon={
                                                                  <div
                                                                    className="ant-switch-handle"
                                                                  />
                                                                }
                                                                onChange={[Function]}
                                                                prefixCls="ant-switch"
                                                              >
                                                                <button
                                                                  aria-checked={false}
                                                                  className="ant-switch"
                                                                  id="create-category_is_featured"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="switch"
                                                                  type="button"
                                                                >
                                                                  <div
                                                                    className="ant-switch-handle"
                                                                  />
                                                                  <span
                                                                    className="ant-switch-inner"
                                                                  />
                                                                </button>
                                                              </Switch>
                                                            </Wave>
                                                          </Switch>
                                                        </Component>
                                                      </div>
                                                    </div>
                                                    <ErrorList
                                                      errors={Array []}
                                                      onDomErrorVisibleChange={[Function]}
                                                    >
                                                      <CSSMotion
                                                        motionAppear={true}
                                                        motionDeadline={500}
                                                        motionName="ant-show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <DomWrapper />
                                                      </CSSMotion>
                                                    </ErrorList>
                                                  </div>
                                                </Col>
                                              </FormItemInput>
                                            </div>
                                          </Row>
                                        </Field>
                                      </WrapperField>
                                    </FormItem>
                                  </div>
                                </Col>
                              </div>
                            </Row>
                            <FormItem
                              label="Colour"
                              name="background_colour"
                            >
                              <WrapperField
                                label="Colour"
                                messageVariables={
                                  Object {
                                    "label": "Colour",
                                  }
                                }
                                name="background_colour"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-category",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_background_colour"
                                  label="Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Colour",
                                    }
                                  }
                                  name={
                                    Array [
                                      "background_colour",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-category_background_colour"
                                        label="Colour"
                                        name="background_colour"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-category_background_colour"
                                              title="Colour"
                                            >
                                              Colour
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Colour"
                                        name={
                                          Array [
                                            "background_colour",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <div
                                                    id="create-category_background_colour"
                                                    onChange={[Function]}
                                                    style={
                                                      Object {
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "borderRadius": "1px",
                                                          "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                          "cursor": "pointer",
                                                          "display": "inline-block",
                                                          "padding": "5px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "null",
                                                            "borderRadius": "2px",
                                                            "height": "24px",
                                                            "width": "100px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <SlugInput
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Slug"
                                name="slug"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Slug"
                                  messageVariables={
                                    Object {
                                      "label": "Slug",
                                    }
                                  }
                                  name="slug"
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_slug"
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name={
                                      Array [
                                        "slug",
                                      ]
                                    }
                                    onReset={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_slug"
                                          label="Slug"
                                          name="slug"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-category_slug"
                                                title="Slug"
                                              >
                                                Slug
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Slug"
                                          name={
                                            Array [
                                              "slug",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Input
                                                      id="create-category_slug"
                                                      onChange={[Function]}
                                                      type="text"
                                                    >
                                                      <ClearableLabeledInput
                                                        bordered={true}
                                                        element={
                                                          <input
                                                            className="ant-input"
                                                            id="create-category_slug"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                          />
                                                        }
                                                        focused={false}
                                                        handleReset={[Function]}
                                                        id="create-category_slug"
                                                        inputType="input"
                                                        onChange={[Function]}
                                                        prefixCls="ant-input"
                                                        triggerFocus={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="ant-input"
                                                          id="create-category_slug"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </ClearableLabeledInput>
                                                    </Input>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </SlugInput>
                          </div>
                        </Col>
                        <Col
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <FormItem
                              label="Featured Image"
                              name="medium_id"
                            >
                              <WrapperField
                                label="Featured Image"
                                messageVariables={
                                  Object {
                                    "label": "Featured Image",
                                  }
                                }
                                name="medium_id"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-category",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_medium_id"
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name={
                                    Array [
                                      "medium_id",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-category_medium_id"
                                        label="Featured Image"
                                        name="medium_id"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-category_medium_id"
                                              title="Featured Image"
                                            >
                                              Featured Image
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured Image"
                                        name={
                                          Array [
                                            "medium_id",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                  value={2}
                                                >
                                                  <MediaSelector
                                                    containerStyles={
                                                      Object {
                                                        "justifyContent": "start",
                                                      }
                                                    }
                                                    id="create-category_medium_id"
                                                    maxWidth="350px"
                                                    onChange={[Function]}
                                                    value={2}
                                                  >
                                                    <Modal
                                                      closable={false}
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                          >
                                                            Cancel
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                            Ok
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      visible={false}
                                                      width="800px"
                                                    >
                                                      <Dialog
                                                        closable={false}
                                                        closeIcon={
                                                          <span
                                                            className="ant-modal-close-x"
                                                          >
                                                            <ForwardRef(CloseOutlined)
                                                              className="ant-modal-close-icon"
                                                            />
                                                          </span>
                                                        }
                                                        confirmLoading={false}
                                                        focusTriggerAfterClose={true}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        maskTransitionName="ant-fade"
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        onClose={[Function]}
                                                        prefixCls="ant-modal"
                                                        transitionName="ant-zoom"
                                                        visible={false}
                                                        width="800px"
                                                        wrapClassName=""
                                                      >
                                                        <PortalWrapper
                                                          visible={false}
                                                        />
                                                      </Dialog>
                                                    </Modal>
                                                    <Space
                                                      direction="vertical"
                                                    >
                                                      <div
                                                        className="ant-space ant-space-vertical"
                                                        style={Object {}}
                                                      >
                                                        <Item
                                                          className="ant-space-item"
                                                          direction="vertical"
                                                          index={0}
                                                          key="ant-space-item-0"
                                                          marginDirection="marginRight"
                                                          wrap={false}
                                                        >
                                                          <div
                                                            className="ant-space-item"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "justifyContent": "start",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "position": "relative",
                                                                  }
                                                                }
                                                              >
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "background": "transparent",
                                                                      "borderStyle": "dashed",
                                                                      "display": "block",
                                                                      "height": "auto",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave>
                                                                    <button
                                                                      className="ant-btn"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "background": "transparent",
                                                                          "borderStyle": "dashed",
                                                                          "display": "block",
                                                                          "height": "auto",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <img
                                                                        key=".0"
                                                                        width="100%"
                                                                      />
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "bottom": 0,
                                                                      "left": 0,
                                                                      "maxWidth": "52px",
                                                                      "position": "absolute",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave>
                                                                    <button
                                                                      className="ant-btn"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "maxWidth": "52px",
                                                                          "position": "absolute",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <ForwardRef(DeleteOutlined)
                                                                        key=".0"
                                                                      >
                                                                        <AntdIcon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "delete",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            aria-label="delete"
                                                                            className="anticon anticon-delete"
                                                                            role="img"
                                                                          >
                                                                            <IconReact
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Object {
                                                                                    "attrs": Object {
                                                                                      "focusable": "false",
                                                                                      "viewBox": "64 64 896 896",
                                                                                    },
                                                                                    "children": Array [
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                    ],
                                                                                    "tag": "svg",
                                                                                  },
                                                                                  "name": "delete",
                                                                                  "theme": "outlined",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                data-icon="delete"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="1em"
                                                                                key="svg-delete"
                                                                                viewBox="64 64 896 896"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                                  key="svg-delete-svg-0"
                                                                                />
                                                                              </svg>
                                                                            </IconReact>
                                                                          </span>
                                                                        </AntdIcon>
                                                                      </ForwardRef(DeleteOutlined)>
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Item>
                                                      </div>
                                                    </Space>
                                                  </MediaSelector>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={12}
                          style={
                            Object {
                              "marginLeft": "20px",
                              "marginRight": "auto",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-12"
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <DescriptionInput
                              inputProps={
                                Object {
                                  "basic": true,
                                  "placeholder": "Enter Description...",
                                  "style": Object {
                                    "background": "#fff",
                                    "padding": "0.5rem 0.75rem",
                                    "width": "600px",
                                  },
                                }
                              }
                            >
                              <FormItem
                                label="Description"
                                name="description"
                              >
                                <WrapperField
                                  label="Description"
                                  messageVariables={
                                    Object {
                                      "label": "Description",
                                    }
                                  }
                                  name="description"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_description"
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name={
                                      Array [
                                        "description",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_description"
                                          label="Description"
                                          name="description"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="create-category_description"
                                                title="Description"
                                              >
                                                Description
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Description"
                                          name={
                                            Array [
                                              "description",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                    value={
                                                      Object {
                                                        "blocks": Array [
                                                          Object {
                                                            "data": Object {
                                                              "text": "Description",
                                                            },
                                                            "type": "paragraph",
                                                          },
                                                        ],
                                                        "time": 1613559903378,
                                                        "version": "2.19.0",
                                                      }
                                                    }
                                                  >
                                                    <Editor
                                                      basic={true}
                                                      id="create-category_description"
                                                      onChange={[Function]}
                                                      placeholder="Enter Description..."
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "padding": "0.5rem 0.75rem",
                                                          "width": "600px",
                                                        }
                                                      }
                                                      value={
                                                        Object {
                                                          "blocks": Array [
                                                            Object {
                                                              "data": Object {
                                                                "text": "Description",
                                                              },
                                                              "type": "paragraph",
                                                            },
                                                          ],
                                                          "time": 1613559903378,
                                                          "version": "2.19.0",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    </Editor>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </DescriptionInput>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      style={
                        Object {
                          "background": "#f0f2f5",
                        }
                      }
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <MetaForm
                          form={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                            }
                          }
                          formData={
                            Object {
                              "description": Object {
                                "blocks": Array [
                                  Object {
                                    "data": Object {
                                      "text": "Description",
                                    },
                                    "type": "paragraph",
                                  },
                                ],
                                "time": 1613559903378,
                                "version": "2.19.0",
                              },
                              "medium_id": 2,
                              "name": "Name",
                            }
                          }
                        >
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              bordered={true}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Data"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Data"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Meta Data
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Code Injection"
                                  isActive={false}
                                  key="1"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="1"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Code Injection"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Code Injection
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              bordered={true}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Fields"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Fields"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Meta Fields
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                        </MetaForm>
                      </div>
                    </Row>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </CategoryForm>
</Provider>
`;

exports[`Categories Create Form component snapshot testing should match component with empty data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CategoryForm
    data={Array []}
    onCreate={[MockFunction onCreate]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      layout="vertical"
      name="create-category"
      onFinish={[Function]}
      onValuesChange={[Function]}
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={Object {}}
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row
              justify="center"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": "1200px",
                  "width": "100%",
                }
              }
            >
              <div
                className="ant-row ant-row-center"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="end"
                    >
                      <div
                        className="ant-row ant-row-end"
                        style={
                          Object {
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                validateStatus=""
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Space>
                                          <div
                                            className="ant-space ant-space-horizontal ant-space-align-center"
                                            style={Object {}}
                                          >
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={0}
                                              key="ant-space-item-0"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={
                                                  Object {
                                                    "marginRight": 8,
                                                  }
                                                }
                                              >
                                                <Button
                                                  htmlType="button"
                                                  onClick={[Function]}
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Reset
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={1}
                                              key="ant-space-item-1"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={Object {}}
                                              >
                                                <Button
                                                  disabled={true}
                                                  htmlType="submit"
                                                  type="primary"
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn ant-btn-primary"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Submit
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                          </div>
                                        </Space>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="ant-show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="space-around"
                      style={
                        Object {
                          "background": "#f0f2f5",
                          "marginBottom": "1rem",
                          "padding": "1.25rem",
                        }
                      }
                    >
                      <div
                        className="ant-row ant-row-space-around"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "marginLeft": -20,
                            "marginRight": -20,
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <Col
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <TitleInput
                              label="Category Name"
                              name="name"
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Category Name"
                                name="name"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter name!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Category Name"
                                  messageVariables={
                                    Object {
                                      "label": "Category Name",
                                    }
                                  }
                                  name="name"
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_name"
                                    label="Category Name"
                                    messageVariables={
                                      Object {
                                        "label": "Category Name",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    onReset={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_name"
                                          label="Category Name"
                                          name="name"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-category_name"
                                                title="Category Name"
                                              >
                                                Category Name
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Category Name"
                                          name={
                                            Array [
                                              "name",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Input
                                                      id="create-category_name"
                                                      onChange={[Function]}
                                                      type="text"
                                                    >
                                                      <ClearableLabeledInput
                                                        bordered={true}
                                                        element={
                                                          <input
                                                            className="ant-input"
                                                            id="create-category_name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                          />
                                                        }
                                                        focused={false}
                                                        handleReset={[Function]}
                                                        id="create-category_name"
                                                        inputType="input"
                                                        onChange={[Function]}
                                                        prefixCls="ant-input"
                                                        triggerFocus={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="ant-input"
                                                          id="create-category_name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </ClearableLabeledInput>
                                                    </Input>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </TitleInput>
                            <Row
                              gutter={40}
                            >
                              <div
                                className="ant-row"
                                style={
                                  Object {
                                    "marginLeft": -20,
                                    "marginRight": -20,
                                  }
                                }
                              >
                                <Col
                                  md={
                                    Object {
                                      "span": 16,
                                    }
                                  }
                                >
                                  <div
                                    className="ant-col ant-col-md-16"
                                    style={
                                      Object {
                                        "paddingLeft": 20,
                                        "paddingRight": 20,
                                      }
                                    }
                                  >
                                    <FormItem
                                      label="Parent Category"
                                      name="parent_id"
                                    >
                                      <WrapperField
                                        label="Parent Category"
                                        messageVariables={
                                          Object {
                                            "label": "Parent Category",
                                          }
                                        }
                                        name="parent_id"
                                        onReset={[Function]}
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                      >
                                        <Field
                                          fieldContext={
                                            Object {
                                              "__INTERNAL__": Object {
                                                "itemRef": [Function],
                                                "name": "create-category",
                                              },
                                              "getFieldError": [Function],
                                              "getFieldInstance": [Function],
                                              "getFieldValue": [Function],
                                              "getFieldsError": [Function],
                                              "getFieldsValue": [Function],
                                              "getInternalHooks": [Function],
                                              "isFieldTouched": [Function],
                                              "isFieldValidating": [Function],
                                              "isFieldsTouched": [Function],
                                              "isFieldsValidating": [Function],
                                              "resetFields": [Function],
                                              "scrollToField": [Function],
                                              "setFields": [Function],
                                              "setFieldsValue": [Function],
                                              "submit": [Function],
                                              "validateFields": [Function],
                                              "validateTrigger": "onChange",
                                            }
                                          }
                                          key="_parent_id"
                                          label="Parent Category"
                                          messageVariables={
                                            Object {
                                              "label": "Parent Category",
                                            }
                                          }
                                          name={
                                            Array [
                                              "parent_id",
                                            ]
                                          }
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                          valuePropName="value"
                                        >
                                          <Row
                                            className="ant-form-item"
                                            key="row"
                                          >
                                            <div
                                              className="ant-row ant-form-item"
                                              style={Object {}}
                                            >
                                              <FormItemLabel
                                                htmlFor="create-category_parent_id"
                                                label="Parent Category"
                                                name="parent_id"
                                                prefixCls="ant-form"
                                                required={false}
                                                requiredMark={true}
                                              >
                                                <Col
                                                  className="ant-form-item-label"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-label"
                                                    style={Object {}}
                                                  >
                                                    <label
                                                      className=""
                                                      htmlFor="create-category_parent_id"
                                                      title="Parent Category"
                                                    >
                                                      Parent Category
                                                    </label>
                                                  </div>
                                                </Col>
                                              </FormItemLabel>
                                              <FormItemInput
                                                errors={Array []}
                                                label="Parent Category"
                                                name={
                                                  Array [
                                                    "parent_id",
                                                  ]
                                                }
                                                onDomErrorVisibleChange={[Function]}
                                                prefixCls="ant-form"
                                                status=""
                                                touched={false}
                                                validateStatus=""
                                                validating={false}
                                              >
                                                <Col
                                                  className="ant-form-item-control"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-control"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input"
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input-content"
                                                      >
                                                        <Component
                                                          update={1}
                                                        >
                                                          <Selector
                                                            action="Categories"
                                                            id="create-category_parent_id"
                                                            invalidOptions={Array []}
                                                            onChange={[Function]}
                                                            setLoading={false}
                                                          >
                                                            <ForwardRef(InternalSelect)
                                                              allowClear={true}
                                                              autoClearSearchValue={true}
                                                              bordered={true}
                                                              defaultValue={
                                                                Array [
                                                                  Array [],
                                                                ]
                                                              }
                                                              filterOption={[Function]}
                                                              getPopupContainer={[Function]}
                                                              listHeight={128}
                                                              loading={false}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              placeholder="Select categories"
                                                              searchValue=""
                                                              value={
                                                                Array [
                                                                  Array [],
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                allowClear={true}
                                                                autoClearSearchValue={true}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                getPopupContainer={[Function]}
                                                                inputIcon={[Function]}
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={null}
                                                                notFoundContent={null}
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                placeholder="Select categories"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                transitionName="ant-slide-up"
                                                                value={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                              >
                                                                <ForwardRef(Select)
                                                                  allowClear={true}
                                                                  autoClearSearchValue={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={
                                                                    Array [
                                                                      Array [],
                                                                    ]
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  getPopupContainer={[Function]}
                                                                  inputIcon={[Function]}
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={null}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  placeholder="Select categories"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  transitionName="ant-slide-up"
                                                                  value={
                                                                    Array [
                                                                      Array [],
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SelectTrigger
                                                                      containerWidth={null}
                                                                      dropdownClassName=""
                                                                      empty={true}
                                                                      getPopupContainer={[Function]}
                                                                      getTriggerDOMNode={[Function]}
                                                                      popupElement={
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={Array []}
                                                                          height={128}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={null}
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onScroll={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={Array []}
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={
                                                                            Set {
                                                                              Array [],
                                                                            }
                                                                          }
                                                                          virtual={true}
                                                                        />
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      transitionName="ant-slide-up"
                                                                      visible={false}
                                                                    >
                                                                      <Trigger
                                                                        action={Array []}
                                                                        afterPopupVisibleChange={[Function]}
                                                                        autoDestroy={false}
                                                                        blurDelay={0.15}
                                                                        builtinPlacements={
                                                                          Object {
                                                                            "bottomLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tl",
                                                                                "bl",
                                                                              ],
                                                                            },
                                                                            "bottomRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tr",
                                                                                "br",
                                                                              ],
                                                                            },
                                                                            "topLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "bl",
                                                                                "tl",
                                                                              ],
                                                                            },
                                                                            "topRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "br",
                                                                                "tr",
                                                                              ],
                                                                            },
                                                                          }
                                                                        }
                                                                        defaultPopupVisible={false}
                                                                        destroyPopupOnHide={false}
                                                                        focusDelay={0}
                                                                        getDocument={[Function]}
                                                                        getPopupClassNameFromAlign={[Function]}
                                                                        getPopupContainer={[Function]}
                                                                        getTriggerDOMNode={[Function]}
                                                                        hideAction={Array []}
                                                                        mask={false}
                                                                        maskClosable={true}
                                                                        mouseEnterDelay={0}
                                                                        mouseLeaveDelay={0.1}
                                                                        onPopupAlign={[Function]}
                                                                        onPopupVisibleChange={[Function]}
                                                                        popup={
                                                                          <div>
                                                                            <ForwardRef(OptionList)
                                                                              childrenAsData={true}
                                                                              defaultActiveFirstOption={true}
                                                                              flattenOptions={Array []}
                                                                              height={128}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              itemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent={null}
                                                                              onActiveValue={[Function]}
                                                                              onMouseEnter={[Function]}
                                                                              onScroll={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              options={Array []}
                                                                              prefixCls="ant-select"
                                                                              searchValue=""
                                                                              values={
                                                                                Set {
                                                                                  Array [],
                                                                                }
                                                                              }
                                                                              virtual={true}
                                                                            />
                                                                          </div>
                                                                        }
                                                                        popupAlign={Object {}}
                                                                        popupClassName="ant-select-dropdown-empty"
                                                                        popupPlacement="bottomLeft"
                                                                        popupStyle={
                                                                          Object {
                                                                            "minWidth": null,
                                                                            "width": null,
                                                                          }
                                                                        }
                                                                        popupTransitionName="ant-slide-up"
                                                                        popupVisible={false}
                                                                        prefixCls="ant-select-dropdown"
                                                                        showAction={Array []}
                                                                      >
                                                                        <Selector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          allowClear={true}
                                                                          autoClearSearchValue={true}
                                                                          className=""
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          defaultValue={
                                                                            Array [
                                                                              Array [],
                                                                            ]
                                                                          }
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-item"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          filterOption={[Function]}
                                                                          getPopupContainer={[Function]}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          key="trigger"
                                                                          listHeight={128}
                                                                          listItemHeight={24}
                                                                          loading={false}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          placeholder="Select categories"
                                                                          prefixCls="ant-select"
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={false}
                                                                          tokenWithEnter={false}
                                                                          transitionName="ant-slide-up"
                                                                          value={
                                                                            Array [
                                                                              Array [],
                                                                            ]
                                                                          }
                                                                          values={
                                                                            Array [
                                                                              Object {
                                                                                "disabled": undefined,
                                                                                "isCacheable": true,
                                                                                "key": Array [],
                                                                                "label": Array [],
                                                                                "value": Array [],
                                                                              },
                                                                            ]
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="ant-select-selector"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                          >
                                                                            <SingleSelector
                                                                              accessibilityIndex={0}
                                                                              activeValue={null}
                                                                              allowClear={true}
                                                                              autoClearSearchValue={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  Array [],
                                                                                ]
                                                                              }
                                                                              domRef={
                                                                                Object {
                                                                                  "current": <div
                                                                                    class="ant-select-selector"
                                                                                  >
                                                                                    <span
                                                                                      class="ant-select-selection-search"
                                                                                    >
                                                                                      <input
                                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                        aria-autocomplete="list"
                                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                        aria-haspopup="listbox"
                                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                        autocomplete="off"
                                                                                        class="ant-select-selection-search-input"
                                                                                        id="rc_select_TEST_OR_SSR"
                                                                                        readonly=""
                                                                                        role="combobox"
                                                                                        style="opacity: 0;"
                                                                                        type="search"
                                                                                        unselectable="on"
                                                                                        value=""
                                                                                      />
                                                                                    </span>
                                                                                    <span
                                                                                      class="ant-select-selection-item"
                                                                                    />
                                                                                  </div>,
                                                                                }
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              getPopupContainer={[Function]}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              inputElement={null}
                                                                              inputIcon={[Function]}
                                                                              inputRef={
                                                                                Object {
                                                                                  "current": <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />,
                                                                                }
                                                                              }
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onInputChange={[Function]}
                                                                              onInputCompositionEnd={[Function]}
                                                                              onInputCompositionStart={[Function]}
                                                                              onInputKeyDown={[Function]}
                                                                              onInputMouseDown={[Function]}
                                                                              onInputPaste={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              onSearchSubmit={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              searchValue=""
                                                                              showSearch={false}
                                                                              tokenWithEnter={false}
                                                                              transitionName="ant-slide-up"
                                                                              value={
                                                                                Array [
                                                                                  Array [],
                                                                                ]
                                                                              }
                                                                              values={
                                                                                Array [
                                                                                  Object {
                                                                                    "disabled": undefined,
                                                                                    "isCacheable": true,
                                                                                    "key": Array [],
                                                                                    "label": Array [],
                                                                                    "value": Array [],
                                                                                  },
                                                                                ]
                                                                              }
                                                                            >
                                                                              <span
                                                                                className="ant-select-selection-search"
                                                                              >
                                                                                <Input
                                                                                  accessibilityIndex={0}
                                                                                  attrs={Object {}}
                                                                                  editable={false}
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  inputElement={null}
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  prefixCls="ant-select"
                                                                                  value=""
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autoComplete="off"
                                                                                    className="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    onChange={[Function]}
                                                                                    onCompositionEnd={[Function]}
                                                                                    onCompositionStart={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onPaste={[Function]}
                                                                                    readOnly={true}
                                                                                    role="combobox"
                                                                                    style={
                                                                                      Object {
                                                                                        "opacity": 0,
                                                                                      }
                                                                                    }
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </Input>
                                                                              </span>
                                                                              <span
                                                                                className="ant-select-selection-item"
                                                                              />
                                                                            </SingleSelector>
                                                                          </div>
                                                                        </Selector>
                                                                      </Trigger>
                                                                    </SelectTrigger>
                                                                    <TransBtn
                                                                      className="ant-select-arrow"
                                                                      customizeIcon={[Function]}
                                                                      customizeIconProps={
                                                                        Object {
                                                                          "focused": false,
                                                                          "loading": false,
                                                                          "open": undefined,
                                                                          "searchValue": "",
                                                                          "showSearch": false,
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-arrow"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-select-suffix"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-select-suffix"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-select-suffix"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                    <TransBtn
                                                                      className="ant-select-clear"
                                                                      customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-clear"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(CloseCircleFilled)>
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close-circle",
                                                                                "theme": "filled",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="close-circle"
                                                                              className="anticon anticon-close-circle"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close-circle",
                                                                                    "theme": "filled",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="close-circle"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-close-circle"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                    key="svg-close-circle-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(CloseCircleFilled)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </div>
                                                                </ForwardRef(Select)>
                                                              </Select>
                                                            </ForwardRef(InternalSelect)>
                                                          </Selector>
                                                        </Component>
                                                      </div>
                                                    </div>
                                                    <ErrorList
                                                      errors={Array []}
                                                      onDomErrorVisibleChange={[Function]}
                                                    >
                                                      <CSSMotion
                                                        motionAppear={true}
                                                        motionDeadline={500}
                                                        motionName="ant-show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <DomWrapper />
                                                      </CSSMotion>
                                                    </ErrorList>
                                                  </div>
                                                </Col>
                                              </FormItemInput>
                                            </div>
                                          </Row>
                                        </Field>
                                      </WrapperField>
                                    </FormItem>
                                  </div>
                                </Col>
                                <Col
                                  md={
                                    Object {
                                      "span": 5,
                                    }
                                  }
                                >
                                  <div
                                    className="ant-col ant-col-md-5"
                                    style={
                                      Object {
                                        "paddingLeft": 20,
                                        "paddingRight": 20,
                                      }
                                    }
                                  >
                                    <FormItem
                                      label="Featured"
                                      name="is_featured"
                                      valuePropName="checked"
                                    >
                                      <WrapperField
                                        label="Featured"
                                        messageVariables={
                                          Object {
                                            "label": "Featured",
                                          }
                                        }
                                        name="is_featured"
                                        onReset={[Function]}
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="checked"
                                      >
                                        <Field
                                          fieldContext={
                                            Object {
                                              "__INTERNAL__": Object {
                                                "itemRef": [Function],
                                                "name": "create-category",
                                              },
                                              "getFieldError": [Function],
                                              "getFieldInstance": [Function],
                                              "getFieldValue": [Function],
                                              "getFieldsError": [Function],
                                              "getFieldsValue": [Function],
                                              "getInternalHooks": [Function],
                                              "isFieldTouched": [Function],
                                              "isFieldValidating": [Function],
                                              "isFieldsTouched": [Function],
                                              "isFieldsValidating": [Function],
                                              "resetFields": [Function],
                                              "scrollToField": [Function],
                                              "setFields": [Function],
                                              "setFieldsValue": [Function],
                                              "submit": [Function],
                                              "validateFields": [Function],
                                              "validateTrigger": "onChange",
                                            }
                                          }
                                          key="_is_featured"
                                          label="Featured"
                                          messageVariables={
                                            Object {
                                              "label": "Featured",
                                            }
                                          }
                                          name={
                                            Array [
                                              "is_featured",
                                            ]
                                          }
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                          valuePropName="checked"
                                        >
                                          <Row
                                            className="ant-form-item"
                                            key="row"
                                          >
                                            <div
                                              className="ant-row ant-form-item"
                                              style={Object {}}
                                            >
                                              <FormItemLabel
                                                htmlFor="create-category_is_featured"
                                                label="Featured"
                                                name="is_featured"
                                                prefixCls="ant-form"
                                                required={false}
                                                requiredMark={true}
                                                valuePropName="checked"
                                              >
                                                <Col
                                                  className="ant-form-item-label"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-label"
                                                    style={Object {}}
                                                  >
                                                    <label
                                                      className=""
                                                      htmlFor="create-category_is_featured"
                                                      title="Featured"
                                                    >
                                                      Featured
                                                    </label>
                                                  </div>
                                                </Col>
                                              </FormItemLabel>
                                              <FormItemInput
                                                errors={Array []}
                                                label="Featured"
                                                name={
                                                  Array [
                                                    "is_featured",
                                                  ]
                                                }
                                                onDomErrorVisibleChange={[Function]}
                                                prefixCls="ant-form"
                                                status=""
                                                touched={false}
                                                validateStatus=""
                                                validating={false}
                                                valuePropName="checked"
                                              >
                                                <Col
                                                  className="ant-form-item-control"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-control"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input"
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input-content"
                                                      >
                                                        <Component
                                                          update={1}
                                                        >
                                                          <Switch
                                                            id="create-category_is_featured"
                                                            onChange={[Function]}
                                                          >
                                                            <Wave
                                                              insertExtraNode={true}
                                                            >
                                                              <Switch
                                                                className=""
                                                                id="create-category_is_featured"
                                                                loadingIcon={
                                                                  <div
                                                                    className="ant-switch-handle"
                                                                  />
                                                                }
                                                                onChange={[Function]}
                                                                prefixCls="ant-switch"
                                                              >
                                                                <button
                                                                  aria-checked={false}
                                                                  className="ant-switch"
                                                                  id="create-category_is_featured"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="switch"
                                                                  type="button"
                                                                >
                                                                  <div
                                                                    className="ant-switch-handle"
                                                                  />
                                                                  <span
                                                                    className="ant-switch-inner"
                                                                  />
                                                                </button>
                                                              </Switch>
                                                            </Wave>
                                                          </Switch>
                                                        </Component>
                                                      </div>
                                                    </div>
                                                    <ErrorList
                                                      errors={Array []}
                                                      onDomErrorVisibleChange={[Function]}
                                                    >
                                                      <CSSMotion
                                                        motionAppear={true}
                                                        motionDeadline={500}
                                                        motionName="ant-show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <DomWrapper />
                                                      </CSSMotion>
                                                    </ErrorList>
                                                  </div>
                                                </Col>
                                              </FormItemInput>
                                            </div>
                                          </Row>
                                        </Field>
                                      </WrapperField>
                                    </FormItem>
                                  </div>
                                </Col>
                              </div>
                            </Row>
                            <FormItem
                              label="Colour"
                              name="background_colour"
                            >
                              <WrapperField
                                label="Colour"
                                messageVariables={
                                  Object {
                                    "label": "Colour",
                                  }
                                }
                                name="background_colour"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-category",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_background_colour"
                                  label="Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Colour",
                                    }
                                  }
                                  name={
                                    Array [
                                      "background_colour",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-category_background_colour"
                                        label="Colour"
                                        name="background_colour"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-category_background_colour"
                                              title="Colour"
                                            >
                                              Colour
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Colour"
                                        name={
                                          Array [
                                            "background_colour",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <div
                                                    id="create-category_background_colour"
                                                    onChange={[Function]}
                                                    style={
                                                      Object {
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "borderRadius": "1px",
                                                          "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                          "cursor": "pointer",
                                                          "display": "inline-block",
                                                          "padding": "5px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "null",
                                                            "borderRadius": "2px",
                                                            "height": "24px",
                                                            "width": "100px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <SlugInput
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Slug"
                                name="slug"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Slug"
                                  messageVariables={
                                    Object {
                                      "label": "Slug",
                                    }
                                  }
                                  name="slug"
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_slug"
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name={
                                      Array [
                                        "slug",
                                      ]
                                    }
                                    onReset={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_slug"
                                          label="Slug"
                                          name="slug"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-category_slug"
                                                title="Slug"
                                              >
                                                Slug
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Slug"
                                          name={
                                            Array [
                                              "slug",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Input
                                                      id="create-category_slug"
                                                      onChange={[Function]}
                                                      type="text"
                                                    >
                                                      <ClearableLabeledInput
                                                        bordered={true}
                                                        element={
                                                          <input
                                                            className="ant-input"
                                                            id="create-category_slug"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                          />
                                                        }
                                                        focused={false}
                                                        handleReset={[Function]}
                                                        id="create-category_slug"
                                                        inputType="input"
                                                        onChange={[Function]}
                                                        prefixCls="ant-input"
                                                        triggerFocus={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="ant-input"
                                                          id="create-category_slug"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </ClearableLabeledInput>
                                                    </Input>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </SlugInput>
                          </div>
                        </Col>
                        <Col
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <FormItem
                              label="Featured Image"
                              name="medium_id"
                            >
                              <WrapperField
                                label="Featured Image"
                                messageVariables={
                                  Object {
                                    "label": "Featured Image",
                                  }
                                }
                                name="medium_id"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-category",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_medium_id"
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name={
                                    Array [
                                      "medium_id",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-category_medium_id"
                                        label="Featured Image"
                                        name="medium_id"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-category_medium_id"
                                              title="Featured Image"
                                            >
                                              Featured Image
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured Image"
                                        name={
                                          Array [
                                            "medium_id",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <MediaSelector
                                                    containerStyles={
                                                      Object {
                                                        "justifyContent": "start",
                                                      }
                                                    }
                                                    id="create-category_medium_id"
                                                    maxWidth="350px"
                                                    onChange={[Function]}
                                                  >
                                                    <Modal
                                                      closable={false}
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                          >
                                                            Cancel
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                            Ok
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      visible={false}
                                                      width="800px"
                                                    >
                                                      <Dialog
                                                        closable={false}
                                                        closeIcon={
                                                          <span
                                                            className="ant-modal-close-x"
                                                          >
                                                            <ForwardRef(CloseOutlined)
                                                              className="ant-modal-close-icon"
                                                            />
                                                          </span>
                                                        }
                                                        confirmLoading={false}
                                                        focusTriggerAfterClose={true}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        maskTransitionName="ant-fade"
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        onClose={[Function]}
                                                        prefixCls="ant-modal"
                                                        transitionName="ant-zoom"
                                                        visible={false}
                                                        width="800px"
                                                        wrapClassName=""
                                                      >
                                                        <PortalWrapper
                                                          visible={false}
                                                        />
                                                      </Dialog>
                                                    </Modal>
                                                    <Space
                                                      direction="vertical"
                                                    >
                                                      <div
                                                        className="ant-space ant-space-vertical"
                                                        style={Object {}}
                                                      >
                                                        <Item
                                                          className="ant-space-item"
                                                          direction="vertical"
                                                          index={0}
                                                          key="ant-space-item-0"
                                                          marginDirection="marginRight"
                                                          wrap={false}
                                                        >
                                                          <div
                                                            className="ant-space-item"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "justifyContent": "start",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "position": "relative",
                                                                  }
                                                                }
                                                              >
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "background": "transparent",
                                                                      "borderStyle": "dashed",
                                                                      "display": "block",
                                                                      "height": "auto",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave>
                                                                    <button
                                                                      className="ant-btn"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "background": "transparent",
                                                                          "borderStyle": "dashed",
                                                                          "display": "block",
                                                                          "height": "auto",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <img
                                                                        key=".0"
                                                                        width="100%"
                                                                      />
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "bottom": 0,
                                                                      "left": 0,
                                                                      "maxWidth": "52px",
                                                                      "position": "absolute",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave>
                                                                    <button
                                                                      className="ant-btn"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "maxWidth": "52px",
                                                                          "position": "absolute",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <ForwardRef(DeleteOutlined)
                                                                        key=".0"
                                                                      >
                                                                        <AntdIcon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "delete",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            aria-label="delete"
                                                                            className="anticon anticon-delete"
                                                                            role="img"
                                                                          >
                                                                            <IconReact
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Object {
                                                                                    "attrs": Object {
                                                                                      "focusable": "false",
                                                                                      "viewBox": "64 64 896 896",
                                                                                    },
                                                                                    "children": Array [
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                    ],
                                                                                    "tag": "svg",
                                                                                  },
                                                                                  "name": "delete",
                                                                                  "theme": "outlined",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                data-icon="delete"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="1em"
                                                                                key="svg-delete"
                                                                                viewBox="64 64 896 896"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                                  key="svg-delete-svg-0"
                                                                                />
                                                                              </svg>
                                                                            </IconReact>
                                                                          </span>
                                                                        </AntdIcon>
                                                                      </ForwardRef(DeleteOutlined)>
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Item>
                                                      </div>
                                                    </Space>
                                                  </MediaSelector>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={12}
                          style={
                            Object {
                              "marginLeft": "20px",
                              "marginRight": "auto",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-12"
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <DescriptionInput
                              inputProps={
                                Object {
                                  "basic": true,
                                  "placeholder": "Enter Description...",
                                  "style": Object {
                                    "background": "#fff",
                                    "padding": "0.5rem 0.75rem",
                                    "width": "600px",
                                  },
                                }
                              }
                            >
                              <FormItem
                                label="Description"
                                name="description"
                              >
                                <WrapperField
                                  label="Description"
                                  messageVariables={
                                    Object {
                                      "label": "Description",
                                    }
                                  }
                                  name="description"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_description"
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name={
                                      Array [
                                        "description",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_description"
                                          label="Description"
                                          name="description"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="create-category_description"
                                                title="Description"
                                              >
                                                Description
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Description"
                                          name={
                                            Array [
                                              "description",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Editor
                                                      basic={true}
                                                      id="create-category_description"
                                                      onChange={[Function]}
                                                      placeholder="Enter Description..."
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "padding": "0.5rem 0.75rem",
                                                          "width": "600px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    </Editor>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </DescriptionInput>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      style={
                        Object {
                          "background": "#f0f2f5",
                        }
                      }
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <MetaForm
                          form={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                            }
                          }
                          formData={Array []}
                        >
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              bordered={true}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Data"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Data"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Meta Data
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Code Injection"
                                  isActive={false}
                                  key="1"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="1"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Code Injection"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Code Injection
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              bordered={true}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Fields"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Fields"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Meta Fields
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                        </MetaForm>
                      </div>
                    </Row>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </CategoryForm>
</Provider>
`;

exports[`Categories Create Form component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CategoryForm
    onCreate={[MockFunction onCreate]}
  >
    <ForwardRef(InternalForm)
      form={
        Object {
          "__INTERNAL__": Object {
            "itemRef": [Function],
            "name": "create-category",
          },
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "getInternalHooks": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "resetFields": [Function],
          "scrollToField": [Function],
          "setFields": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
        }
      }
      initialValues={Object {}}
      layout="vertical"
      name="create-category"
      onFinish={[Function]}
      onValuesChange={[Function]}
    >
      <SizeContextProvider>
        <ForwardRef(Form)
          className="ant-form ant-form-vertical"
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": "create-category",
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          id="create-category"
          initialValues={Object {}}
          name="create-category"
          onFinish={[Function]}
          onFinishFailed={[Function]}
          onValuesChange={[Function]}
        >
          <form
            className="ant-form ant-form-vertical"
            id="create-category"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Row
              justify="center"
              style={
                Object {
                  "margin": "0 auto",
                  "maxWidth": "1200px",
                  "width": "100%",
                }
              }
            >
              <div
                className="ant-row ant-row-center"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="end"
                    >
                      <div
                        className="ant-row ant-row-end"
                        style={
                          Object {
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <FormItem>
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                prefixCls="ant-form"
                                requiredMark={true}
                              />
                              <FormItemInput
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                validateStatus=""
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Space>
                                          <div
                                            className="ant-space ant-space-horizontal ant-space-align-center"
                                            style={Object {}}
                                          >
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={0}
                                              key="ant-space-item-0"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={
                                                  Object {
                                                    "marginRight": 8,
                                                  }
                                                }
                                              >
                                                <Button
                                                  htmlType="button"
                                                  onClick={[Function]}
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Reset
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                            <Item
                                              className="ant-space-item"
                                              direction="horizontal"
                                              index={1}
                                              key="ant-space-item-1"
                                              marginDirection="marginRight"
                                              wrap={false}
                                            >
                                              <div
                                                className="ant-space-item"
                                                style={Object {}}
                                              >
                                                <Button
                                                  disabled={true}
                                                  htmlType="submit"
                                                  type="primary"
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn ant-btn-primary"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Submit
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </Item>
                                          </div>
                                        </Space>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="ant-show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </FormItem>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      justify="space-around"
                      style={
                        Object {
                          "background": "#f0f2f5",
                          "marginBottom": "1rem",
                          "padding": "1.25rem",
                        }
                      }
                    >
                      <div
                        className="ant-row ant-row-space-around"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "marginLeft": -20,
                            "marginRight": -20,
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <Col
                          span={12}
                        >
                          <div
                            className="ant-col ant-col-12"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <TitleInput
                              label="Category Name"
                              name="name"
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Category Name"
                                name="name"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter name!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Category Name"
                                  messageVariables={
                                    Object {
                                      "label": "Category Name",
                                    }
                                  }
                                  name="name"
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_name"
                                    label="Category Name"
                                    messageVariables={
                                      Object {
                                        "label": "Category Name",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    onReset={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_name"
                                          label="Category Name"
                                          name="name"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-category_name"
                                                title="Category Name"
                                              >
                                                Category Name
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Category Name"
                                          name={
                                            Array [
                                              "name",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter name!",
                                                "required": true,
                                              },
                                              Object {
                                                "max": 500,
                                                "message": "Name must be maximum 500 characters.",
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Input
                                                      id="create-category_name"
                                                      onChange={[Function]}
                                                      type="text"
                                                    >
                                                      <ClearableLabeledInput
                                                        bordered={true}
                                                        element={
                                                          <input
                                                            className="ant-input"
                                                            id="create-category_name"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                          />
                                                        }
                                                        focused={false}
                                                        handleReset={[Function]}
                                                        id="create-category_name"
                                                        inputType="input"
                                                        onChange={[Function]}
                                                        prefixCls="ant-input"
                                                        triggerFocus={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="ant-input"
                                                          id="create-category_name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </ClearableLabeledInput>
                                                    </Input>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </TitleInput>
                            <Row
                              gutter={40}
                            >
                              <div
                                className="ant-row"
                                style={
                                  Object {
                                    "marginLeft": -20,
                                    "marginRight": -20,
                                  }
                                }
                              >
                                <Col
                                  md={
                                    Object {
                                      "span": 16,
                                    }
                                  }
                                >
                                  <div
                                    className="ant-col ant-col-md-16"
                                    style={
                                      Object {
                                        "paddingLeft": 20,
                                        "paddingRight": 20,
                                      }
                                    }
                                  >
                                    <FormItem
                                      label="Parent Category"
                                      name="parent_id"
                                    >
                                      <WrapperField
                                        label="Parent Category"
                                        messageVariables={
                                          Object {
                                            "label": "Parent Category",
                                          }
                                        }
                                        name="parent_id"
                                        onReset={[Function]}
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                      >
                                        <Field
                                          fieldContext={
                                            Object {
                                              "__INTERNAL__": Object {
                                                "itemRef": [Function],
                                                "name": "create-category",
                                              },
                                              "getFieldError": [Function],
                                              "getFieldInstance": [Function],
                                              "getFieldValue": [Function],
                                              "getFieldsError": [Function],
                                              "getFieldsValue": [Function],
                                              "getInternalHooks": [Function],
                                              "isFieldTouched": [Function],
                                              "isFieldValidating": [Function],
                                              "isFieldsTouched": [Function],
                                              "isFieldsValidating": [Function],
                                              "resetFields": [Function],
                                              "scrollToField": [Function],
                                              "setFields": [Function],
                                              "setFieldsValue": [Function],
                                              "submit": [Function],
                                              "validateFields": [Function],
                                              "validateTrigger": "onChange",
                                            }
                                          }
                                          key="_parent_id"
                                          label="Parent Category"
                                          messageVariables={
                                            Object {
                                              "label": "Parent Category",
                                            }
                                          }
                                          name={
                                            Array [
                                              "parent_id",
                                            ]
                                          }
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                          valuePropName="value"
                                        >
                                          <Row
                                            className="ant-form-item"
                                            key="row"
                                          >
                                            <div
                                              className="ant-row ant-form-item"
                                              style={Object {}}
                                            >
                                              <FormItemLabel
                                                htmlFor="create-category_parent_id"
                                                label="Parent Category"
                                                name="parent_id"
                                                prefixCls="ant-form"
                                                required={false}
                                                requiredMark={true}
                                              >
                                                <Col
                                                  className="ant-form-item-label"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-label"
                                                    style={Object {}}
                                                  >
                                                    <label
                                                      className=""
                                                      htmlFor="create-category_parent_id"
                                                      title="Parent Category"
                                                    >
                                                      Parent Category
                                                    </label>
                                                  </div>
                                                </Col>
                                              </FormItemLabel>
                                              <FormItemInput
                                                errors={Array []}
                                                label="Parent Category"
                                                name={
                                                  Array [
                                                    "parent_id",
                                                  ]
                                                }
                                                onDomErrorVisibleChange={[Function]}
                                                prefixCls="ant-form"
                                                status=""
                                                touched={false}
                                                validateStatus=""
                                                validating={false}
                                              >
                                                <Col
                                                  className="ant-form-item-control"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-control"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input"
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input-content"
                                                      >
                                                        <Component
                                                          update={1}
                                                        >
                                                          <Selector
                                                            action="Categories"
                                                            id="create-category_parent_id"
                                                            invalidOptions={Array []}
                                                            onChange={[Function]}
                                                            setLoading={false}
                                                          >
                                                            <ForwardRef(InternalSelect)
                                                              allowClear={true}
                                                              autoClearSearchValue={true}
                                                              bordered={true}
                                                              defaultValue={
                                                                Array [
                                                                  Array [],
                                                                ]
                                                              }
                                                              filterOption={[Function]}
                                                              getPopupContainer={[Function]}
                                                              listHeight={128}
                                                              loading={false}
                                                              notFoundContent={null}
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              placeholder="Select categories"
                                                              searchValue=""
                                                              value={
                                                                Array [
                                                                  Array [],
                                                                ]
                                                              }
                                                            >
                                                              <Select
                                                                allowClear={true}
                                                                autoClearSearchValue={true}
                                                                className=""
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                defaultValue={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                getPopupContainer={[Function]}
                                                                inputIcon={[Function]}
                                                                listHeight={128}
                                                                listItemHeight={24}
                                                                loading={false}
                                                                menuItemSelectedIcon={null}
                                                                notFoundContent={null}
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                placeholder="Select categories"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                transitionName="ant-slide-up"
                                                                value={
                                                                  Array [
                                                                    Array [],
                                                                  ]
                                                                }
                                                              >
                                                                <ForwardRef(Select)
                                                                  allowClear={true}
                                                                  autoClearSearchValue={true}
                                                                  className=""
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  defaultValue={
                                                                    Array [
                                                                      Array [],
                                                                    ]
                                                                  }
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  getPopupContainer={[Function]}
                                                                  inputIcon={[Function]}
                                                                  listHeight={128}
                                                                  listItemHeight={24}
                                                                  loading={false}
                                                                  menuItemSelectedIcon={null}
                                                                  notFoundContent={null}
                                                                  onChange={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  placeholder="Select categories"
                                                                  prefixCls="ant-select"
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  searchValue=""
                                                                  transitionName="ant-slide-up"
                                                                  value={
                                                                    Array [
                                                                      Array [],
                                                                    ]
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                  >
                                                                    <SelectTrigger
                                                                      containerWidth={null}
                                                                      dropdownClassName=""
                                                                      empty={true}
                                                                      getPopupContainer={[Function]}
                                                                      getTriggerDOMNode={[Function]}
                                                                      popupElement={
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={Array []}
                                                                          height={128}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={null}
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onScroll={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={Array []}
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={
                                                                            Set {
                                                                              Array [],
                                                                            }
                                                                          }
                                                                          virtual={true}
                                                                        />
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      transitionName="ant-slide-up"
                                                                      visible={false}
                                                                    >
                                                                      <Trigger
                                                                        action={Array []}
                                                                        afterPopupVisibleChange={[Function]}
                                                                        autoDestroy={false}
                                                                        blurDelay={0.15}
                                                                        builtinPlacements={
                                                                          Object {
                                                                            "bottomLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tl",
                                                                                "bl",
                                                                              ],
                                                                            },
                                                                            "bottomRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tr",
                                                                                "br",
                                                                              ],
                                                                            },
                                                                            "topLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "bl",
                                                                                "tl",
                                                                              ],
                                                                            },
                                                                            "topRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "br",
                                                                                "tr",
                                                                              ],
                                                                            },
                                                                          }
                                                                        }
                                                                        defaultPopupVisible={false}
                                                                        destroyPopupOnHide={false}
                                                                        focusDelay={0}
                                                                        getDocument={[Function]}
                                                                        getPopupClassNameFromAlign={[Function]}
                                                                        getPopupContainer={[Function]}
                                                                        getTriggerDOMNode={[Function]}
                                                                        hideAction={Array []}
                                                                        mask={false}
                                                                        maskClosable={true}
                                                                        mouseEnterDelay={0}
                                                                        mouseLeaveDelay={0.1}
                                                                        onPopupAlign={[Function]}
                                                                        onPopupVisibleChange={[Function]}
                                                                        popup={
                                                                          <div>
                                                                            <ForwardRef(OptionList)
                                                                              childrenAsData={true}
                                                                              defaultActiveFirstOption={true}
                                                                              flattenOptions={Array []}
                                                                              height={128}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              itemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent={null}
                                                                              onActiveValue={[Function]}
                                                                              onMouseEnter={[Function]}
                                                                              onScroll={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              options={Array []}
                                                                              prefixCls="ant-select"
                                                                              searchValue=""
                                                                              values={
                                                                                Set {
                                                                                  Array [],
                                                                                }
                                                                              }
                                                                              virtual={true}
                                                                            />
                                                                          </div>
                                                                        }
                                                                        popupAlign={Object {}}
                                                                        popupClassName="ant-select-dropdown-empty"
                                                                        popupPlacement="bottomLeft"
                                                                        popupStyle={
                                                                          Object {
                                                                            "minWidth": null,
                                                                            "width": null,
                                                                          }
                                                                        }
                                                                        popupTransitionName="ant-slide-up"
                                                                        popupVisible={false}
                                                                        prefixCls="ant-select-dropdown"
                                                                        showAction={Array []}
                                                                      >
                                                                        <Selector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          allowClear={true}
                                                                          autoClearSearchValue={true}
                                                                          className=""
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          defaultValue={
                                                                            Array [
                                                                              Array [],
                                                                            ]
                                                                          }
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-item"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          filterOption={[Function]}
                                                                          getPopupContainer={[Function]}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          key="trigger"
                                                                          listHeight={128}
                                                                          listItemHeight={24}
                                                                          loading={false}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent={null}
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          placeholder="Select categories"
                                                                          prefixCls="ant-select"
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={false}
                                                                          tokenWithEnter={false}
                                                                          transitionName="ant-slide-up"
                                                                          value={
                                                                            Array [
                                                                              Array [],
                                                                            ]
                                                                          }
                                                                          values={
                                                                            Array [
                                                                              Object {
                                                                                "disabled": undefined,
                                                                                "isCacheable": true,
                                                                                "key": Array [],
                                                                                "label": Array [],
                                                                                "value": Array [],
                                                                              },
                                                                            ]
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="ant-select-selector"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                          >
                                                                            <SingleSelector
                                                                              accessibilityIndex={0}
                                                                              activeValue={null}
                                                                              allowClear={true}
                                                                              autoClearSearchValue={true}
                                                                              className=""
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              defaultValue={
                                                                                Array [
                                                                                  Array [],
                                                                                ]
                                                                              }
                                                                              domRef={
                                                                                Object {
                                                                                  "current": <div
                                                                                    class="ant-select-selector"
                                                                                  >
                                                                                    <span
                                                                                      class="ant-select-selection-search"
                                                                                    >
                                                                                      <input
                                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                        aria-autocomplete="list"
                                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                        aria-haspopup="listbox"
                                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                        autocomplete="off"
                                                                                        class="ant-select-selection-search-input"
                                                                                        id="rc_select_TEST_OR_SSR"
                                                                                        readonly=""
                                                                                        role="combobox"
                                                                                        style="opacity: 0;"
                                                                                        type="search"
                                                                                        unselectable="on"
                                                                                        value=""
                                                                                      />
                                                                                    </span>
                                                                                    <span
                                                                                      class="ant-select-selection-item"
                                                                                    />
                                                                                  </div>,
                                                                                }
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              getPopupContainer={[Function]}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              inputElement={null}
                                                                              inputIcon={[Function]}
                                                                              inputRef={
                                                                                Object {
                                                                                  "current": <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    readonly=""
                                                                                    role="combobox"
                                                                                    style="opacity: 0;"
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />,
                                                                                }
                                                                              }
                                                                              listHeight={128}
                                                                              listItemHeight={24}
                                                                              loading={false}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent={null}
                                                                              onChange={[Function]}
                                                                              onInputChange={[Function]}
                                                                              onInputCompositionEnd={[Function]}
                                                                              onInputCompositionStart={[Function]}
                                                                              onInputKeyDown={[Function]}
                                                                              onInputMouseDown={[Function]}
                                                                              onInputPaste={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              onSearchSubmit={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              placeholder="Select categories"
                                                                              prefixCls="ant-select"
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              searchValue=""
                                                                              showSearch={false}
                                                                              tokenWithEnter={false}
                                                                              transitionName="ant-slide-up"
                                                                              value={
                                                                                Array [
                                                                                  Array [],
                                                                                ]
                                                                              }
                                                                              values={
                                                                                Array [
                                                                                  Object {
                                                                                    "disabled": undefined,
                                                                                    "isCacheable": true,
                                                                                    "key": Array [],
                                                                                    "label": Array [],
                                                                                    "value": Array [],
                                                                                  },
                                                                                ]
                                                                              }
                                                                            >
                                                                              <span
                                                                                className="ant-select-selection-search"
                                                                              >
                                                                                <Input
                                                                                  accessibilityIndex={0}
                                                                                  attrs={Object {}}
                                                                                  editable={false}
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  inputElement={null}
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  prefixCls="ant-select"
                                                                                  value=""
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autoComplete="off"
                                                                                    className="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    onChange={[Function]}
                                                                                    onCompositionEnd={[Function]}
                                                                                    onCompositionStart={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onPaste={[Function]}
                                                                                    readOnly={true}
                                                                                    role="combobox"
                                                                                    style={
                                                                                      Object {
                                                                                        "opacity": 0,
                                                                                      }
                                                                                    }
                                                                                    type="search"
                                                                                    unselectable="on"
                                                                                    value=""
                                                                                  />
                                                                                </Input>
                                                                              </span>
                                                                              <span
                                                                                className="ant-select-selection-item"
                                                                              />
                                                                            </SingleSelector>
                                                                          </div>
                                                                        </Selector>
                                                                      </Trigger>
                                                                    </SelectTrigger>
                                                                    <TransBtn
                                                                      className="ant-select-arrow"
                                                                      customizeIcon={[Function]}
                                                                      customizeIconProps={
                                                                        Object {
                                                                          "focused": false,
                                                                          "loading": false,
                                                                          "open": undefined,
                                                                          "searchValue": "",
                                                                          "showSearch": false,
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-arrow"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-select-suffix"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-select-suffix"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-select-suffix"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                    <TransBtn
                                                                      className="ant-select-clear"
                                                                      customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-clear"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(CloseCircleFilled)>
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close-circle",
                                                                                "theme": "filled",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="close-circle"
                                                                              className="anticon anticon-close-circle"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close-circle",
                                                                                    "theme": "filled",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="close-circle"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-close-circle"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                    key="svg-close-circle-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(CloseCircleFilled)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </div>
                                                                </ForwardRef(Select)>
                                                              </Select>
                                                            </ForwardRef(InternalSelect)>
                                                          </Selector>
                                                        </Component>
                                                      </div>
                                                    </div>
                                                    <ErrorList
                                                      errors={Array []}
                                                      onDomErrorVisibleChange={[Function]}
                                                    >
                                                      <CSSMotion
                                                        motionAppear={true}
                                                        motionDeadline={500}
                                                        motionName="ant-show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <DomWrapper />
                                                      </CSSMotion>
                                                    </ErrorList>
                                                  </div>
                                                </Col>
                                              </FormItemInput>
                                            </div>
                                          </Row>
                                        </Field>
                                      </WrapperField>
                                    </FormItem>
                                  </div>
                                </Col>
                                <Col
                                  md={
                                    Object {
                                      "span": 5,
                                    }
                                  }
                                >
                                  <div
                                    className="ant-col ant-col-md-5"
                                    style={
                                      Object {
                                        "paddingLeft": 20,
                                        "paddingRight": 20,
                                      }
                                    }
                                  >
                                    <FormItem
                                      label="Featured"
                                      name="is_featured"
                                      valuePropName="checked"
                                    >
                                      <WrapperField
                                        label="Featured"
                                        messageVariables={
                                          Object {
                                            "label": "Featured",
                                          }
                                        }
                                        name="is_featured"
                                        onReset={[Function]}
                                        trigger="onChange"
                                        validateTrigger="onChange"
                                        valuePropName="checked"
                                      >
                                        <Field
                                          fieldContext={
                                            Object {
                                              "__INTERNAL__": Object {
                                                "itemRef": [Function],
                                                "name": "create-category",
                                              },
                                              "getFieldError": [Function],
                                              "getFieldInstance": [Function],
                                              "getFieldValue": [Function],
                                              "getFieldsError": [Function],
                                              "getFieldsValue": [Function],
                                              "getInternalHooks": [Function],
                                              "isFieldTouched": [Function],
                                              "isFieldValidating": [Function],
                                              "isFieldsTouched": [Function],
                                              "isFieldsValidating": [Function],
                                              "resetFields": [Function],
                                              "scrollToField": [Function],
                                              "setFields": [Function],
                                              "setFieldsValue": [Function],
                                              "submit": [Function],
                                              "validateFields": [Function],
                                              "validateTrigger": "onChange",
                                            }
                                          }
                                          key="_is_featured"
                                          label="Featured"
                                          messageVariables={
                                            Object {
                                              "label": "Featured",
                                            }
                                          }
                                          name={
                                            Array [
                                              "is_featured",
                                            ]
                                          }
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                          valuePropName="checked"
                                        >
                                          <Row
                                            className="ant-form-item"
                                            key="row"
                                          >
                                            <div
                                              className="ant-row ant-form-item"
                                              style={Object {}}
                                            >
                                              <FormItemLabel
                                                htmlFor="create-category_is_featured"
                                                label="Featured"
                                                name="is_featured"
                                                prefixCls="ant-form"
                                                required={false}
                                                requiredMark={true}
                                                valuePropName="checked"
                                              >
                                                <Col
                                                  className="ant-form-item-label"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-label"
                                                    style={Object {}}
                                                  >
                                                    <label
                                                      className=""
                                                      htmlFor="create-category_is_featured"
                                                      title="Featured"
                                                    >
                                                      Featured
                                                    </label>
                                                  </div>
                                                </Col>
                                              </FormItemLabel>
                                              <FormItemInput
                                                errors={Array []}
                                                label="Featured"
                                                name={
                                                  Array [
                                                    "is_featured",
                                                  ]
                                                }
                                                onDomErrorVisibleChange={[Function]}
                                                prefixCls="ant-form"
                                                status=""
                                                touched={false}
                                                validateStatus=""
                                                validating={false}
                                                valuePropName="checked"
                                              >
                                                <Col
                                                  className="ant-form-item-control"
                                                >
                                                  <div
                                                    className="ant-col ant-form-item-control"
                                                    style={Object {}}
                                                  >
                                                    <div
                                                      className="ant-form-item-control-input"
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input-content"
                                                      >
                                                        <Component
                                                          update={1}
                                                        >
                                                          <Switch
                                                            id="create-category_is_featured"
                                                            onChange={[Function]}
                                                          >
                                                            <Wave
                                                              insertExtraNode={true}
                                                            >
                                                              <Switch
                                                                className=""
                                                                id="create-category_is_featured"
                                                                loadingIcon={
                                                                  <div
                                                                    className="ant-switch-handle"
                                                                  />
                                                                }
                                                                onChange={[Function]}
                                                                prefixCls="ant-switch"
                                                              >
                                                                <button
                                                                  aria-checked={false}
                                                                  className="ant-switch"
                                                                  id="create-category_is_featured"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="switch"
                                                                  type="button"
                                                                >
                                                                  <div
                                                                    className="ant-switch-handle"
                                                                  />
                                                                  <span
                                                                    className="ant-switch-inner"
                                                                  />
                                                                </button>
                                                              </Switch>
                                                            </Wave>
                                                          </Switch>
                                                        </Component>
                                                      </div>
                                                    </div>
                                                    <ErrorList
                                                      errors={Array []}
                                                      onDomErrorVisibleChange={[Function]}
                                                    >
                                                      <CSSMotion
                                                        motionAppear={true}
                                                        motionDeadline={500}
                                                        motionName="ant-show-help"
                                                        onLeaveEnd={[Function]}
                                                        removeOnLeave={true}
                                                        visible={false}
                                                      >
                                                        <DomWrapper />
                                                      </CSSMotion>
                                                    </ErrorList>
                                                  </div>
                                                </Col>
                                              </FormItemInput>
                                            </div>
                                          </Row>
                                        </Field>
                                      </WrapperField>
                                    </FormItem>
                                  </div>
                                </Col>
                              </div>
                            </Row>
                            <FormItem
                              label="Colour"
                              name="background_colour"
                            >
                              <WrapperField
                                label="Colour"
                                messageVariables={
                                  Object {
                                    "label": "Colour",
                                  }
                                }
                                name="background_colour"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-category",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_background_colour"
                                  label="Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Colour",
                                    }
                                  }
                                  name={
                                    Array [
                                      "background_colour",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-category_background_colour"
                                        label="Colour"
                                        name="background_colour"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-category_background_colour"
                                              title="Colour"
                                            >
                                              Colour
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Colour"
                                        name={
                                          Array [
                                            "background_colour",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <div
                                                    id="create-category_background_colour"
                                                    onChange={[Function]}
                                                    style={
                                                      Object {
                                                        "position": "relative",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "borderRadius": "1px",
                                                          "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                          "cursor": "pointer",
                                                          "display": "inline-block",
                                                          "padding": "5px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "null",
                                                            "borderRadius": "2px",
                                                            "height": "24px",
                                                            "width": "100px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </div>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                            <SlugInput
                              onChange={[Function]}
                            >
                              <FormItem
                                label="Slug"
                                name="slug"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Slug"
                                  messageVariables={
                                    Object {
                                      "label": "Slug",
                                    }
                                  }
                                  name="slug"
                                  onReset={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_slug"
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name={
                                      Array [
                                        "slug",
                                      ]
                                    }
                                    onReset={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_slug"
                                          label="Slug"
                                          name="slug"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="create-category_slug"
                                                title="Slug"
                                              >
                                                Slug
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Slug"
                                          name={
                                            Array [
                                              "slug",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the slug!",
                                                "required": true,
                                              },
                                              Object {
                                                "message": "Please enter valid slug!",
                                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Input
                                                      id="create-category_slug"
                                                      onChange={[Function]}
                                                      type="text"
                                                    >
                                                      <ClearableLabeledInput
                                                        bordered={true}
                                                        element={
                                                          <input
                                                            className="ant-input"
                                                            id="create-category_slug"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="text"
                                                          />
                                                        }
                                                        focused={false}
                                                        handleReset={[Function]}
                                                        id="create-category_slug"
                                                        inputType="input"
                                                        onChange={[Function]}
                                                        prefixCls="ant-input"
                                                        triggerFocus={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <input
                                                          className="ant-input"
                                                          id="create-category_slug"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          type="text"
                                                          value=""
                                                        />
                                                      </ClearableLabeledInput>
                                                    </Input>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </SlugInput>
                          </div>
                        </Col>
                        <Col
                          span={10}
                        >
                          <div
                            className="ant-col ant-col-10"
                            style={
                              Object {
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <FormItem
                              label="Featured Image"
                              name="medium_id"
                            >
                              <WrapperField
                                label="Featured Image"
                                messageVariables={
                                  Object {
                                    "label": "Featured Image",
                                  }
                                }
                                name="medium_id"
                                onReset={[Function]}
                                trigger="onChange"
                                validateTrigger="onChange"
                              >
                                <Field
                                  fieldContext={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "create-category",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                      "validateTrigger": "onChange",
                                    }
                                  }
                                  key="_medium_id"
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name={
                                    Array [
                                      "medium_id",
                                    ]
                                  }
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                  valuePropName="value"
                                >
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        htmlFor="create-category_medium_id"
                                        label="Featured Image"
                                        name="medium_id"
                                        prefixCls="ant-form"
                                        required={false}
                                        requiredMark={true}
                                      >
                                        <Col
                                          className="ant-form-item-label"
                                        >
                                          <div
                                            className="ant-col ant-form-item-label"
                                            style={Object {}}
                                          >
                                            <label
                                              className=""
                                              htmlFor="create-category_medium_id"
                                              title="Featured Image"
                                            >
                                              Featured Image
                                            </label>
                                          </div>
                                        </Col>
                                      </FormItemLabel>
                                      <FormItemInput
                                        errors={Array []}
                                        label="Featured Image"
                                        name={
                                          Array [
                                            "medium_id",
                                          ]
                                        }
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        touched={false}
                                        validateStatus=""
                                        validating={false}
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Component
                                                  update={1}
                                                >
                                                  <MediaSelector
                                                    containerStyles={
                                                      Object {
                                                        "justifyContent": "start",
                                                      }
                                                    }
                                                    id="create-category_medium_id"
                                                    maxWidth="350px"
                                                    onChange={[Function]}
                                                  >
                                                    <Modal
                                                      closable={false}
                                                      confirmLoading={false}
                                                      footer={
                                                        Array [
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                          >
                                                            Cancel
                                                          </ForwardRef(InternalButton)>,
                                                          <ForwardRef(InternalButton)
                                                            onClick={[Function]}
                                                            type="primary"
                                                          >
                                                            Ok
                                                          </ForwardRef(InternalButton)>,
                                                        ]
                                                      }
                                                      okType="primary"
                                                      onCancel={[Function]}
                                                      visible={false}
                                                      width="800px"
                                                    >
                                                      <Dialog
                                                        closable={false}
                                                        closeIcon={
                                                          <span
                                                            className="ant-modal-close-x"
                                                          >
                                                            <ForwardRef(CloseOutlined)
                                                              className="ant-modal-close-icon"
                                                            />
                                                          </span>
                                                        }
                                                        confirmLoading={false}
                                                        focusTriggerAfterClose={true}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        maskTransitionName="ant-fade"
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        onClose={[Function]}
                                                        prefixCls="ant-modal"
                                                        transitionName="ant-zoom"
                                                        visible={false}
                                                        width="800px"
                                                        wrapClassName=""
                                                      >
                                                        <PortalWrapper
                                                          visible={false}
                                                        />
                                                      </Dialog>
                                                    </Modal>
                                                    <Space
                                                      direction="vertical"
                                                    >
                                                      <div
                                                        className="ant-space ant-space-vertical"
                                                        style={Object {}}
                                                      >
                                                        <Item
                                                          className="ant-space-item"
                                                          direction="vertical"
                                                          index={0}
                                                          key="ant-space-item-0"
                                                          marginDirection="marginRight"
                                                          wrap={false}
                                                        >
                                                          <div
                                                            className="ant-space-item"
                                                            style={Object {}}
                                                          >
                                                            <div
                                                              style={
                                                                Object {
                                                                  "alignItems": "center",
                                                                  "display": "flex",
                                                                  "justifyContent": "start",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "position": "relative",
                                                                  }
                                                                }
                                                              >
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "background": "transparent",
                                                                      "borderStyle": "dashed",
                                                                      "display": "block",
                                                                      "height": "auto",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave>
                                                                    <button
                                                                      className="ant-btn"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "background": "transparent",
                                                                          "borderStyle": "dashed",
                                                                          "display": "block",
                                                                          "height": "auto",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <img
                                                                        key=".0"
                                                                        width="100%"
                                                                      />
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                                <Button
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "bottom": 0,
                                                                      "left": 0,
                                                                      "maxWidth": "52px",
                                                                      "position": "absolute",
                                                                    }
                                                                  }
                                                                >
                                                                  <Wave>
                                                                    <button
                                                                      className="ant-btn"
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "bottom": 0,
                                                                          "left": 0,
                                                                          "maxWidth": "52px",
                                                                          "position": "absolute",
                                                                        }
                                                                      }
                                                                      type="button"
                                                                    >
                                                                      <LoadingIcon
                                                                        existIcon={false}
                                                                        loading={false}
                                                                        prefixCls="ant-btn"
                                                                      >
                                                                        <CSSMotion
                                                                          motionName="ant-btn-loading-icon-motion"
                                                                          onAppearActive={[Function]}
                                                                          onAppearStart={[Function]}
                                                                          onEnterActive={[Function]}
                                                                          onEnterStart={[Function]}
                                                                          onLeaveActive={[Function]}
                                                                          onLeaveStart={[Function]}
                                                                          removeOnLeave={true}
                                                                          visible={false}
                                                                        >
                                                                          <DomWrapper />
                                                                        </CSSMotion>
                                                                      </LoadingIcon>
                                                                      <ForwardRef(DeleteOutlined)
                                                                        key=".0"
                                                                      >
                                                                        <AntdIcon
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "delete",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            aria-label="delete"
                                                                            className="anticon anticon-delete"
                                                                            role="img"
                                                                          >
                                                                            <IconReact
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Object {
                                                                                    "attrs": Object {
                                                                                      "focusable": "false",
                                                                                      "viewBox": "64 64 896 896",
                                                                                    },
                                                                                    "children": Array [
                                                                                      Object {
                                                                                        "attrs": Object {
                                                                                          "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                                        },
                                                                                        "tag": "path",
                                                                                      },
                                                                                    ],
                                                                                    "tag": "svg",
                                                                                  },
                                                                                  "name": "delete",
                                                                                  "theme": "outlined",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                data-icon="delete"
                                                                                fill="currentColor"
                                                                                focusable="false"
                                                                                height="1em"
                                                                                key="svg-delete"
                                                                                viewBox="64 64 896 896"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                                                  key="svg-delete-svg-0"
                                                                                />
                                                                              </svg>
                                                                            </IconReact>
                                                                          </span>
                                                                        </AntdIcon>
                                                                      </ForwardRef(DeleteOutlined)>
                                                                    </button>
                                                                  </Wave>
                                                                </Button>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Item>
                                                      </div>
                                                    </Space>
                                                  </MediaSelector>
                                                </Component>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </Field>
                              </WrapperField>
                            </FormItem>
                          </div>
                        </Col>
                        <Col
                          span={12}
                          style={
                            Object {
                              "marginLeft": "20px",
                              "marginRight": "auto",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-12"
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                                "paddingLeft": 20,
                                "paddingRight": 20,
                              }
                            }
                          >
                            <DescriptionInput
                              inputProps={
                                Object {
                                  "basic": true,
                                  "placeholder": "Enter Description...",
                                  "style": Object {
                                    "background": "#fff",
                                    "padding": "0.5rem 0.75rem",
                                    "width": "600px",
                                  },
                                }
                              }
                            >
                              <FormItem
                                label="Description"
                                name="description"
                              >
                                <WrapperField
                                  label="Description"
                                  messageVariables={
                                    Object {
                                      "label": "Description",
                                    }
                                  }
                                  name="description"
                                  onReset={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "create-category",
                                        },
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_description"
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name={
                                      Array [
                                        "description",
                                      ]
                                    }
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="create-category_description"
                                          label="Description"
                                          name="description"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="create-category_description"
                                                title="Description"
                                              >
                                                Description
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Description"
                                          name={
                                            Array [
                                              "description",
                                            ]
                                          }
                                          onDomErrorVisibleChange={[Function]}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validateStatus=""
                                          validating={false}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={1}
                                                  >
                                                    <Editor
                                                      basic={true}
                                                      id="create-category_description"
                                                      onChange={[Function]}
                                                      placeholder="Enter Description..."
                                                      style={
                                                        Object {
                                                          "background": "#fff",
                                                          "padding": "0.5rem 0.75rem",
                                                          "width": "600px",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      />
                                                    </Editor>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                errors={Array []}
                                                onDomErrorVisibleChange={[Function]}
                                              >
                                                <CSSMotion
                                                  motionAppear={true}
                                                  motionDeadline={500}
                                                  motionName="ant-show-help"
                                                  onLeaveEnd={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </DescriptionInput>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </div>
                </Col>
                <Col
                  span={24}
                >
                  <div
                    className="ant-col ant-col-24"
                    style={Object {}}
                  >
                    <Row
                      gutter={40}
                      style={
                        Object {
                          "background": "#f0f2f5",
                        }
                      }
                    >
                      <div
                        className="ant-row"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginLeft": -20,
                            "marginRight": -20,
                          }
                        }
                      >
                        <MetaForm
                          form={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                            }
                          }
                          formData={Object {}}
                        >
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              bordered={true}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Data"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Data"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Meta Data
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Code Injection"
                                  isActive={false}
                                  key="1"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="1"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Code Injection"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Code Injection
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                          <Collapse
                            expandIcon={[Function]}
                            expandIconPosition="right"
                            style={
                              Object {
                                "width": "100%",
                              }
                            }
                          >
                            <Collapse
                              accordion={false}
                              bordered={true}
                              className="ant-collapse-icon-position-right"
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              onChange={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              prefixCls="ant-collapse"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <div
                                className="ant-collapse ant-collapse-icon-position-right"
                                role={null}
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <CollapsePanel
                                  accordion={false}
                                  destroyInactivePanel={false}
                                  expandIcon={[Function]}
                                  header="Meta Fields"
                                  isActive={false}
                                  key="0"
                                  onItemClick={[Function]}
                                  openMotion={
                                    Object {
                                      "leavedClassName": "ant-collapse-content-hidden",
                                      "motionAppear": false,
                                      "motionDeadline": 500,
                                      "motionName": "ant-motion-collapse",
                                      "onAppearActive": [Function],
                                      "onAppearEnd": [Function],
                                      "onAppearStart": [Function],
                                      "onEnterActive": [Function],
                                      "onEnterEnd": [Function],
                                      "onEnterStart": [Function],
                                      "onLeaveActive": [Function],
                                      "onLeaveEnd": [Function],
                                      "onLeaveStart": [Function],
                                    }
                                  }
                                  panelKey="0"
                                  prefixCls="ant-collapse"
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    className=""
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    forceRender={false}
                                    header="Meta Fields"
                                    headerClass=""
                                    isActive={false}
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                    showArrow={true}
                                  >
                                    <div
                                      className="ant-collapse-item"
                                    >
                                      <div
                                        aria-expanded={false}
                                        className="ant-collapse-header"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        role="button"
                                        tabIndex={0}
                                      >
                                        <Button
                                          className="ant-collapse-arrow"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-collapse-arrow"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Expand
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                        Meta Fields
                                      </div>
                                      <CSSMotion
                                        forceRender={false}
                                        leavedClassName="ant-collapse-content-hidden"
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionName="ant-motion-collapse"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={false}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </div>
                                  </CollapsePanel>
                                </CollapsePanel>
                              </div>
                            </Collapse>
                          </Collapse>
                        </MetaForm>
                      </div>
                    </Row>
                  </div>
                </Col>
              </div>
            </Row>
          </form>
        </ForwardRef(Form)>
      </SizeContextProvider>
    </ForwardRef(InternalForm)>
  </CategoryForm>
</Provider>
`;
