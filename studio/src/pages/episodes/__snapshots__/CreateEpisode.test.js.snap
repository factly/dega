// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Episode create component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CreateEpisode>
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
      title="Create Episode"
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        title="Create Episode"
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          title="Create Episode"
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <EpisodeForm
      onCreate={[Function]}
    >
      <ForwardRef(InternalForm)
        form={
          Object {
            "__INTERNAL__": Object {
              "itemRef": [Function],
              "name": "create-category",
            },
            "getFieldError": [Function],
            "getFieldInstance": [Function],
            "getFieldValue": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        initialValues={Object {}}
        labelCol={
          Object {
            "span": 24,
          }
        }
        layout="vertical"
        name="create-category"
        onFinish={[Function]}
        onValuesChange={[Function]}
        wrapperCol={
          Object {
            "span": 24,
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-vertical"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "create-category",
                },
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="create-category"
            initialValues={Object {}}
            name="create-category"
            onFinish={[Function]}
            onFinishFailed={[Function]}
            onValuesChange={[Function]}
          >
            <form
              className="ant-form ant-form-vertical"
              id="create-category"
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <div
                style={
                  Object {
                    "display": "flex",
                  }
                }
              >
                <div
                  style={
                    Object {
                      "flex": 1,
                      "marginRight": 10,
                    }
                  }
                >
                  <TitleInput
                    onChange={[Function]}
                  >
                    <FormItem
                      label="Title"
                      name="title"
                      rules={
                        Array [
                          Object {
                            "message": "Please enter title!",
                            "required": true,
                          },
                          Object {
                            "max": 500,
                            "message": "Name must be maximum 500 characters.",
                          },
                        ]
                      }
                    >
                      <WrapperField
                        label="Title"
                        messageVariables={
                          Object {
                            "label": "Title",
                          }
                        }
                        name="title"
                        onReset={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter title!",
                              "required": true,
                            },
                            Object {
                              "max": 500,
                              "message": "Name must be maximum 500 characters.",
                            },
                          ]
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_title"
                          label="Title"
                          messageVariables={
                            Object {
                              "label": "Title",
                            }
                          }
                          name={
                            Array [
                              "title",
                            ]
                          }
                          onReset={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter title!",
                                "required": true,
                              },
                              Object {
                                "max": 500,
                                "message": "Name must be maximum 500 characters.",
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_title"
                                label="Title"
                                name="title"
                                prefixCls="ant-form"
                                required={true}
                                requiredMark={true}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter title!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    style={Object {}}
                                  >
                                    <label
                                      className="ant-form-item-required"
                                      htmlFor="create-category_title"
                                      title="Title"
                                    >
                                      Title
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Title"
                                name={
                                  Array [
                                    "title",
                                  ]
                                }
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter title!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 500,
                                      "message": "Name must be maximum 500 characters.",
                                    },
                                  ]
                                }
                                status=""
                                touched={false}
                                validateStatus=""
                                validating={false}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={1}
                                        >
                                          <Input
                                            id="create-category_title"
                                            onChange={[Function]}
                                            type="text"
                                          >
                                            <ClearableLabeledInput
                                              bordered={true}
                                              element={
                                                <input
                                                  className="ant-input"
                                                  id="create-category_title"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="text"
                                                />
                                              }
                                              focused={false}
                                              handleReset={[Function]}
                                              id="create-category_title"
                                              inputType="input"
                                              onChange={[Function]}
                                              prefixCls="ant-input"
                                              triggerFocus={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <input
                                                className="ant-input"
                                                id="create-category_title"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                type="text"
                                                value=""
                                              />
                                            </ClearableLabeledInput>
                                          </Input>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="ant-show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                  </TitleInput>
                  <SlugInput>
                    <FormItem
                      label="Slug"
                      name="slug"
                      rules={
                        Array [
                          Object {
                            "message": "Please input the slug!",
                            "required": true,
                          },
                          Object {
                            "message": "Please enter valid slug!",
                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                          },
                        ]
                      }
                    >
                      <WrapperField
                        label="Slug"
                        messageVariables={
                          Object {
                            "label": "Slug",
                          }
                        }
                        name="slug"
                        onReset={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please input the slug!",
                              "required": true,
                            },
                            Object {
                              "message": "Please enter valid slug!",
                              "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                            },
                          ]
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_slug"
                          label="Slug"
                          messageVariables={
                            Object {
                              "label": "Slug",
                            }
                          }
                          name={
                            Array [
                              "slug",
                            ]
                          }
                          onReset={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please input the slug!",
                                "required": true,
                              },
                              Object {
                                "message": "Please enter valid slug!",
                                "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                              },
                            ]
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_slug"
                                label="Slug"
                                name="slug"
                                prefixCls="ant-form"
                                required={true}
                                requiredMark={true}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    style={Object {}}
                                  >
                                    <label
                                      className="ant-form-item-required"
                                      htmlFor="create-category_slug"
                                      title="Slug"
                                    >
                                      Slug
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Slug"
                                name={
                                  Array [
                                    "slug",
                                  ]
                                }
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please input the slug!",
                                      "required": true,
                                    },
                                    Object {
                                      "message": "Please enter valid slug!",
                                      "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                    },
                                  ]
                                }
                                status=""
                                touched={false}
                                validateStatus=""
                                validating={false}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={1}
                                        >
                                          <Input
                                            id="create-category_slug"
                                            onChange={[Function]}
                                            type="text"
                                          >
                                            <ClearableLabeledInput
                                              bordered={true}
                                              element={
                                                <input
                                                  className="ant-input"
                                                  id="create-category_slug"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="text"
                                                />
                                              }
                                              focused={false}
                                              handleReset={[Function]}
                                              id="create-category_slug"
                                              inputType="input"
                                              onChange={[Function]}
                                              prefixCls="ant-input"
                                              triggerFocus={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <input
                                                className="ant-input"
                                                id="create-category_slug"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                type="text"
                                                value=""
                                              />
                                            </ClearableLabeledInput>
                                          </Input>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="ant-show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                  </SlugInput>
                  <FormItem
                    label="Podcasts"
                    name="podcast"
                  >
                    <WrapperField
                      label="Podcasts"
                      messageVariables={
                        Object {
                          "label": "Podcasts",
                        }
                      }
                      name="podcast"
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        fieldContext={
                          Object {
                            "__INTERNAL__": Object {
                              "itemRef": [Function],
                              "name": "create-category",
                            },
                            "getFieldError": [Function],
                            "getFieldInstance": [Function],
                            "getFieldValue": [Function],
                            "getFieldsError": [Function],
                            "getFieldsValue": [Function],
                            "getInternalHooks": [Function],
                            "isFieldTouched": [Function],
                            "isFieldValidating": [Function],
                            "isFieldsTouched": [Function],
                            "isFieldsValidating": [Function],
                            "resetFields": [Function],
                            "scrollToField": [Function],
                            "setFields": [Function],
                            "setFieldsValue": [Function],
                            "submit": [Function],
                            "validateFields": [Function],
                            "validateTrigger": "onChange",
                          }
                        }
                        key="_podcast"
                        label="Podcasts"
                        messageVariables={
                          Object {
                            "label": "Podcasts",
                          }
                        }
                        name={
                          Array [
                            "podcast",
                          ]
                        }
                        onReset={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={Object {}}
                          >
                            <FormItemLabel
                              htmlFor="create-category_podcast"
                              label="Podcasts"
                              name="podcast"
                              prefixCls="ant-form"
                              required={false}
                              requiredMark={true}
                            >
                              <Col
                                className="ant-form-item-label"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-label"
                                  style={Object {}}
                                >
                                  <label
                                    className=""
                                    htmlFor="create-category_podcast"
                                    title="Podcasts"
                                  >
                                    Podcasts
                                  </label>
                                </div>
                              </Col>
                            </FormItemLabel>
                            <FormItemInput
                              errors={Array []}
                              label="Podcasts"
                              name={
                                Array [
                                  "podcast",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                      >
                                        <Selector
                                          action="Podcasts"
                                          display="title"
                                          id="create-category_podcast"
                                          onChange={[Function]}
                                        >
                                          <ForwardRef(InternalSelect)
                                            allowClear={true}
                                            autoClearSearchValue={true}
                                            bordered={true}
                                            defaultValue={
                                              Array [
                                                Array [],
                                              ]
                                            }
                                            filterOption={[Function]}
                                            getPopupContainer={[Function]}
                                            listHeight={128}
                                            loading={false}
                                            notFoundContent={null}
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            onSearch={[Function]}
                                            placeholder="Select podcasts"
                                            searchValue=""
                                            value={
                                              Array [
                                                Array [],
                                              ]
                                            }
                                          >
                                            <Select
                                              allowClear={true}
                                              autoClearSearchValue={true}
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue={
                                                Array [
                                                  Array [],
                                                ]
                                              }
                                              dropdownClassName=""
                                              filterOption={[Function]}
                                              getPopupContainer={[Function]}
                                              inputIcon={[Function]}
                                              listHeight={128}
                                              listItemHeight={24}
                                              loading={false}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={null}
                                              onChange={[Function]}
                                              onPopupScroll={[Function]}
                                              onSearch={[Function]}
                                              placeholder="Select podcasts"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              searchValue=""
                                              transitionName="ant-slide-up"
                                              value={
                                                Array [
                                                  Array [],
                                                ]
                                              }
                                            >
                                              <ForwardRef(Select)
                                                allowClear={true}
                                                autoClearSearchValue={true}
                                                className=""
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                defaultValue={
                                                  Array [
                                                    Array [],
                                                  ]
                                                }
                                                dropdownClassName=""
                                                filterOption={[Function]}
                                                getPopupContainer={[Function]}
                                                inputIcon={[Function]}
                                                listHeight={128}
                                                listItemHeight={24}
                                                loading={false}
                                                menuItemSelectedIcon={null}
                                                notFoundContent={null}
                                                onChange={[Function]}
                                                onPopupScroll={[Function]}
                                                onSearch={[Function]}
                                                placeholder="Select podcasts"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                transitionName="ant-slide-up"
                                                value={
                                                  Array [
                                                    Array [],
                                                  ]
                                                }
                                              >
                                                <div
                                                  className="ant-select ant-select-single ant-select-allow-clear ant-select-show-arrow"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                >
                                                  <SelectTrigger
                                                    containerWidth={null}
                                                    dropdownClassName=""
                                                    empty={false}
                                                    getPopupContainer={[Function]}
                                                    getTriggerDOMNode={[Function]}
                                                    popupElement={
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={
                                                          Array [
                                                            Object {
                                                              "data": Object {
                                                                "children": "Podcast-1",
                                                                "key": "podcasts1",
                                                                "value": 1,
                                                              },
                                                              "groupOption": false,
                                                              "key": "podcasts1",
                                                            },
                                                          ]
                                                        }
                                                        height={128}
                                                        id="rc_select_TEST_OR_SSR"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={null}
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onScroll={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "children": "Podcast-1",
                                                              "key": "podcasts1",
                                                              "value": 1,
                                                            },
                                                          ]
                                                        }
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={
                                                          Set {
                                                            Array [],
                                                          }
                                                        }
                                                        virtual={true}
                                                      />
                                                    }
                                                    prefixCls="ant-select"
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <Trigger
                                                      action={Array []}
                                                      afterPopupVisibleChange={[Function]}
                                                      autoDestroy={false}
                                                      blurDelay={0.15}
                                                      builtinPlacements={
                                                        Object {
                                                          "bottomLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tl",
                                                              "bl",
                                                            ],
                                                          },
                                                          "bottomRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tr",
                                                              "br",
                                                            ],
                                                          },
                                                          "topLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "bl",
                                                              "tl",
                                                            ],
                                                          },
                                                          "topRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "br",
                                                              "tr",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      defaultPopupVisible={false}
                                                      destroyPopupOnHide={false}
                                                      focusDelay={0}
                                                      getDocument={[Function]}
                                                      getPopupClassNameFromAlign={[Function]}
                                                      getPopupContainer={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      hideAction={Array []}
                                                      mask={false}
                                                      maskClosable={true}
                                                      mouseEnterDelay={0}
                                                      mouseLeaveDelay={0.1}
                                                      onPopupAlign={[Function]}
                                                      onPopupVisibleChange={[Function]}
                                                      popup={
                                                        <div>
                                                          <ForwardRef(OptionList)
                                                            childrenAsData={true}
                                                            defaultActiveFirstOption={true}
                                                            flattenOptions={
                                                              Array [
                                                                Object {
                                                                  "data": Object {
                                                                    "children": "Podcast-1",
                                                                    "key": "podcasts1",
                                                                    "value": 1,
                                                                  },
                                                                  "groupOption": false,
                                                                  "key": "podcasts1",
                                                                },
                                                              ]
                                                            }
                                                            height={128}
                                                            id="rc_select_TEST_OR_SSR"
                                                            itemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={null}
                                                            onActiveValue={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onScroll={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "children": "Podcast-1",
                                                                  "key": "podcasts1",
                                                                  "value": 1,
                                                                },
                                                              ]
                                                            }
                                                            prefixCls="ant-select"
                                                            searchValue=""
                                                            values={
                                                              Set {
                                                                Array [],
                                                              }
                                                            }
                                                            virtual={true}
                                                          />
                                                        </div>
                                                      }
                                                      popupAlign={Object {}}
                                                      popupClassName=""
                                                      popupPlacement="bottomLeft"
                                                      popupStyle={
                                                        Object {
                                                          "minWidth": null,
                                                          "width": null,
                                                        }
                                                      }
                                                      popupTransitionName="ant-slide-up"
                                                      prefixCls="ant-select-dropdown"
                                                      showAction={Array []}
                                                    >
                                                      <Selector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        allowClear={true}
                                                        autoClearSearchValue={true}
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        defaultValue={
                                                          Array [
                                                            Array [],
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                              />
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        filterOption={[Function]}
                                                        getPopupContainer={[Function]}
                                                        id="rc_select_TEST_OR_SSR"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        key="trigger"
                                                        listHeight={128}
                                                        listItemHeight={24}
                                                        loading={false}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={null}
                                                        onChange={[Function]}
                                                        onPopupScroll={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placeholder="Select podcasts"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        value={
                                                          Array [
                                                            Array [],
                                                          ]
                                                        }
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "isCacheable": true,
                                                              "key": Array [],
                                                              "label": Array [],
                                                              "value": Array [],
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <div
                                                          className="ant-select-selector"
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SingleSelector
                                                            accessibilityIndex={0}
                                                            activeValue={null}
                                                            allowClear={true}
                                                            autoClearSearchValue={true}
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue={
                                                              Array [
                                                                Array [],
                                                              ]
                                                            }
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="rc_select_TEST_OR_SSR_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="rc_select_TEST_OR_SSR_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                  />
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            filterOption={[Function]}
                                                            getPopupContainer={[Function]}
                                                            id="rc_select_TEST_OR_SSR"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />,
                                                              }
                                                            }
                                                            listHeight={128}
                                                            listItemHeight={24}
                                                            loading={false}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={null}
                                                            onChange={[Function]}
                                                            onInputChange={[Function]}
                                                            onInputCompositionEnd={[Function]}
                                                            onInputCompositionStart={[Function]}
                                                            onInputKeyDown={[Function]}
                                                            onInputMouseDown={[Function]}
                                                            onInputPaste={[Function]}
                                                            onPopupScroll={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placeholder="Select podcasts"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            value={
                                                              Array [
                                                                Array [],
                                                              ]
                                                            }
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "isCacheable": true,
                                                                  "key": Array [],
                                                                  "label": Array [],
                                                                  "value": Array [],
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <span
                                                              className="ant-select-selection-search"
                                                            >
                                                              <Input
                                                                accessibilityIndex={0}
                                                                attrs={Object {}}
                                                                editable={false}
                                                                id="rc_select_TEST_OR_SSR"
                                                                inputElement={null}
                                                                onChange={[Function]}
                                                                onCompositionEnd={[Function]}
                                                                onCompositionStart={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                prefixCls="ant-select"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="rc_select_TEST_OR_SSR_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="rc_select_TEST_OR_SSR_list"
                                                                  autoComplete="off"
                                                                  className="ant-select-selection-search-input"
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  readOnly={true}
                                                                  role="combobox"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </Input>
                                                            </span>
                                                            <span
                                                              className="ant-select-selection-item"
                                                            />
                                                          </SingleSelector>
                                                        </div>
                                                      </Selector>
                                                    </Trigger>
                                                  </SelectTrigger>
                                                  <TransBtn
                                                    className="ant-select-arrow"
                                                    customizeIcon={[Function]}
                                                    customizeIconProps={
                                                      Object {
                                                        "focused": false,
                                                        "loading": false,
                                                        "open": undefined,
                                                        "searchValue": "",
                                                        "showSearch": false,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-arrow"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(DownOutlined)
                                                        className="ant-select-suffix"
                                                      >
                                                        <AntdIcon
                                                          className="ant-select-suffix"
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="down"
                                                            className="anticon anticon-down ant-select-suffix"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="down"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-down"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                  key="svg-down-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DownOutlined)>
                                                    </span>
                                                  </TransBtn>
                                                  <TransBtn
                                                    className="ant-select-clear"
                                                    customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-clear"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(CloseCircleFilled)>
                                                        <AntdIcon
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "close-circle",
                                                              "theme": "filled",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="close-circle"
                                                            className="anticon anticon-close-circle"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "close-circle",
                                                                  "theme": "filled",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="close-circle"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-close-circle"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                  key="svg-close-circle-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(CloseCircleFilled)>
                                                    </span>
                                                  </TransBtn>
                                                </div>
                                              </ForwardRef(Select)>
                                            </Select>
                                          </ForwardRef(InternalSelect)>
                                        </Selector>
                                      </Component>
                                    </div>
                                  </div>
                                  <ErrorList
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                  >
                                    <CSSMotion
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionName="ant-show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                  <FormItem>
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          prefixCls="ant-form"
                          requiredMark={true}
                        />
                        <FormItemInput
                          errors={Array []}
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          status=""
                          validateStatus=""
                        >
                          <Col
                            className="ant-form-item-control"
                            span={24}
                          >
                            <div
                              className="ant-col ant-col-24 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Group
                                    compact={true}
                                  >
                                    <span
                                      className="ant-input-group ant-input-group-compact"
                                    >
                                      <FormItem
                                        label="Season"
                                        name="season"
                                      >
                                        <WrapperField
                                          label="Season"
                                          messageVariables={
                                            Object {
                                              "label": "Season",
                                            }
                                          }
                                          name="season"
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                        >
                                          <Field
                                            fieldContext={
                                              Object {
                                                "__INTERNAL__": Object {
                                                  "itemRef": [Function],
                                                  "name": "create-category",
                                                },
                                                "getFieldError": [Function],
                                                "getFieldInstance": [Function],
                                                "getFieldValue": [Function],
                                                "getFieldsError": [Function],
                                                "getFieldsValue": [Function],
                                                "getInternalHooks": [Function],
                                                "isFieldTouched": [Function],
                                                "isFieldValidating": [Function],
                                                "isFieldsTouched": [Function],
                                                "isFieldsValidating": [Function],
                                                "resetFields": [Function],
                                                "scrollToField": [Function],
                                                "setFields": [Function],
                                                "setFieldsValue": [Function],
                                                "submit": [Function],
                                                "validateFields": [Function],
                                                "validateTrigger": "onChange",
                                              }
                                            }
                                            key="_season"
                                            label="Season"
                                            messageVariables={
                                              Object {
                                                "label": "Season",
                                              }
                                            }
                                            name={
                                              Array [
                                                "season",
                                              ]
                                            }
                                            onReset={[Function]}
                                            trigger="onChange"
                                            validateTrigger="onChange"
                                            valuePropName="value"
                                          >
                                            <Row
                                              className="ant-form-item"
                                              key="row"
                                            >
                                              <div
                                                className="ant-row ant-form-item"
                                                style={Object {}}
                                              >
                                                <FormItemLabel
                                                  htmlFor="create-category_season"
                                                  label="Season"
                                                  name="season"
                                                  prefixCls="ant-form"
                                                  required={false}
                                                  requiredMark={true}
                                                >
                                                  <Col
                                                    className="ant-form-item-label"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-label"
                                                      style={Object {}}
                                                    >
                                                      <label
                                                        className=""
                                                        htmlFor="create-category_season"
                                                        title="Season"
                                                      >
                                                        Season
                                                      </label>
                                                    </div>
                                                  </Col>
                                                </FormItemLabel>
                                                <FormItemInput
                                                  errors={Array []}
                                                  label="Season"
                                                  name={
                                                    Array [
                                                      "season",
                                                    ]
                                                  }
                                                  onDomErrorVisibleChange={[Function]}
                                                  prefixCls="ant-form"
                                                  status=""
                                                  touched={false}
                                                  validateStatus=""
                                                  validating={false}
                                                >
                                                  <Col
                                                    className="ant-form-item-control"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-control"
                                                      style={Object {}}
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input"
                                                      >
                                                        <div
                                                          className="ant-form-item-control-input-content"
                                                        >
                                                          <Component
                                                            update={1}
                                                          >
                                                            <ForwardRef
                                                              id="create-category_season"
                                                              onChange={[Function]}
                                                              placeholder="Input season"
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                            >
                                                              <InputNumber
                                                                className=""
                                                                downHandler={
                                                                  <ForwardRef(DownOutlined)
                                                                    className="ant-input-number-handler-down-inner"
                                                                  />
                                                                }
                                                                id="create-category_season"
                                                                onChange={[Function]}
                                                                placeholder="Input season"
                                                                prefixCls="ant-input-number"
                                                                style={
                                                                  Object {
                                                                    "width": "100%",
                                                                  }
                                                                }
                                                                upHandler={
                                                                  <ForwardRef(UpOutlined)
                                                                    className="ant-input-number-handler-up-inner"
                                                                  />
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-input-number"
                                                                  onBlur={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "width": "100%",
                                                                    }
                                                                  }
                                                                >
                                                                  <StepHandler
                                                                    downDisabled={false}
                                                                    downNode={
                                                                      <ForwardRef(DownOutlined)
                                                                        className="ant-input-number-handler-down-inner"
                                                                      />
                                                                    }
                                                                    onStep={[Function]}
                                                                    prefixCls="ant-input-number"
                                                                    upDisabled={false}
                                                                    upNode={
                                                                      <ForwardRef(UpOutlined)
                                                                        className="ant-input-number-handler-up-inner"
                                                                      />
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="ant-input-number-handler-wrap"
                                                                    >
                                                                      <span
                                                                        aria-disabled={false}
                                                                        aria-label="Increase Value"
                                                                        className="ant-input-number-handler ant-input-number-handler-up"
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        role="button"
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(UpOutlined)
                                                                          className="ant-input-number-handler-up-inner"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-input-number-handler-up-inner"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "up",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="up"
                                                                              className="anticon anticon-up ant-input-number-handler-up-inner"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "up",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="up"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-up"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                                                    key="svg-up-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(UpOutlined)>
                                                                      </span>
                                                                      <span
                                                                        aria-disabled={false}
                                                                        aria-label="Decrease Value"
                                                                        className="ant-input-number-handler ant-input-number-handler-down"
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        role="button"
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-input-number-handler-down-inner"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-input-number-handler-down-inner"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-input-number-handler-down-inner"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </div>
                                                                  </StepHandler>
                                                                  <div
                                                                    className="ant-input-number-input-wrap"
                                                                  >
                                                                    <input
                                                                      aria-valuenow={null}
                                                                      autoComplete="off"
                                                                      className="ant-input-number-input"
                                                                      id="create-category_season"
                                                                      onChange={[Function]}
                                                                      placeholder="Input season"
                                                                      role="spinbutton"
                                                                      step={1}
                                                                      value=""
                                                                    />
                                                                  </div>
                                                                </div>
                                                              </InputNumber>
                                                            </ForwardRef>
                                                          </Component>
                                                        </div>
                                                      </div>
                                                      <ErrorList
                                                        errors={Array []}
                                                        onDomErrorVisibleChange={[Function]}
                                                      >
                                                        <CSSMotion
                                                          motionAppear={true}
                                                          motionDeadline={500}
                                                          motionName="ant-show-help"
                                                          onLeaveEnd={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </ErrorList>
                                                    </div>
                                                  </Col>
                                                </FormItemInput>
                                              </div>
                                            </Row>
                                          </Field>
                                        </WrapperField>
                                      </FormItem>
                                      <FormItem
                                        label="Episode"
                                        name="episode"
                                      >
                                        <WrapperField
                                          label="Episode"
                                          messageVariables={
                                            Object {
                                              "label": "Episode",
                                            }
                                          }
                                          name="episode"
                                          onReset={[Function]}
                                          trigger="onChange"
                                          validateTrigger="onChange"
                                        >
                                          <Field
                                            fieldContext={
                                              Object {
                                                "__INTERNAL__": Object {
                                                  "itemRef": [Function],
                                                  "name": "create-category",
                                                },
                                                "getFieldError": [Function],
                                                "getFieldInstance": [Function],
                                                "getFieldValue": [Function],
                                                "getFieldsError": [Function],
                                                "getFieldsValue": [Function],
                                                "getInternalHooks": [Function],
                                                "isFieldTouched": [Function],
                                                "isFieldValidating": [Function],
                                                "isFieldsTouched": [Function],
                                                "isFieldsValidating": [Function],
                                                "resetFields": [Function],
                                                "scrollToField": [Function],
                                                "setFields": [Function],
                                                "setFieldsValue": [Function],
                                                "submit": [Function],
                                                "validateFields": [Function],
                                                "validateTrigger": "onChange",
                                              }
                                            }
                                            key="_episode"
                                            label="Episode"
                                            messageVariables={
                                              Object {
                                                "label": "Episode",
                                              }
                                            }
                                            name={
                                              Array [
                                                "episode",
                                              ]
                                            }
                                            onReset={[Function]}
                                            trigger="onChange"
                                            validateTrigger="onChange"
                                            valuePropName="value"
                                          >
                                            <Row
                                              className="ant-form-item"
                                              key="row"
                                            >
                                              <div
                                                className="ant-row ant-form-item"
                                                style={Object {}}
                                              >
                                                <FormItemLabel
                                                  htmlFor="create-category_episode"
                                                  label="Episode"
                                                  name="episode"
                                                  prefixCls="ant-form"
                                                  required={false}
                                                  requiredMark={true}
                                                >
                                                  <Col
                                                    className="ant-form-item-label"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-label"
                                                      style={Object {}}
                                                    >
                                                      <label
                                                        className=""
                                                        htmlFor="create-category_episode"
                                                        title="Episode"
                                                      >
                                                        Episode
                                                      </label>
                                                    </div>
                                                  </Col>
                                                </FormItemLabel>
                                                <FormItemInput
                                                  errors={Array []}
                                                  label="Episode"
                                                  name={
                                                    Array [
                                                      "episode",
                                                    ]
                                                  }
                                                  onDomErrorVisibleChange={[Function]}
                                                  prefixCls="ant-form"
                                                  status=""
                                                  touched={false}
                                                  validateStatus=""
                                                  validating={false}
                                                >
                                                  <Col
                                                    className="ant-form-item-control"
                                                  >
                                                    <div
                                                      className="ant-col ant-form-item-control"
                                                      style={Object {}}
                                                    >
                                                      <div
                                                        className="ant-form-item-control-input"
                                                      >
                                                        <div
                                                          className="ant-form-item-control-input-content"
                                                        >
                                                          <Component
                                                            update={1}
                                                          >
                                                            <ForwardRef
                                                              id="create-category_episode"
                                                              onChange={[Function]}
                                                              placeholder="Input episode"
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                            >
                                                              <InputNumber
                                                                className=""
                                                                downHandler={
                                                                  <ForwardRef(DownOutlined)
                                                                    className="ant-input-number-handler-down-inner"
                                                                  />
                                                                }
                                                                id="create-category_episode"
                                                                onChange={[Function]}
                                                                placeholder="Input episode"
                                                                prefixCls="ant-input-number"
                                                                style={
                                                                  Object {
                                                                    "width": "100%",
                                                                  }
                                                                }
                                                                upHandler={
                                                                  <ForwardRef(UpOutlined)
                                                                    className="ant-input-number-handler-up-inner"
                                                                  />
                                                                }
                                                              >
                                                                <div
                                                                  className="ant-input-number"
                                                                  onBlur={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "width": "100%",
                                                                    }
                                                                  }
                                                                >
                                                                  <StepHandler
                                                                    downDisabled={false}
                                                                    downNode={
                                                                      <ForwardRef(DownOutlined)
                                                                        className="ant-input-number-handler-down-inner"
                                                                      />
                                                                    }
                                                                    onStep={[Function]}
                                                                    prefixCls="ant-input-number"
                                                                    upDisabled={false}
                                                                    upNode={
                                                                      <ForwardRef(UpOutlined)
                                                                        className="ant-input-number-handler-up-inner"
                                                                      />
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="ant-input-number-handler-wrap"
                                                                    >
                                                                      <span
                                                                        aria-disabled={false}
                                                                        aria-label="Increase Value"
                                                                        className="ant-input-number-handler ant-input-number-handler-up"
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        role="button"
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(UpOutlined)
                                                                          className="ant-input-number-handler-up-inner"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-input-number-handler-up-inner"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "up",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="up"
                                                                              className="anticon anticon-up ant-input-number-handler-up-inner"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "up",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="up"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-up"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                                                    key="svg-up-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(UpOutlined)>
                                                                      </span>
                                                                      <span
                                                                        aria-disabled={false}
                                                                        aria-label="Decrease Value"
                                                                        className="ant-input-number-handler ant-input-number-handler-down"
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        role="button"
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-input-number-handler-down-inner"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-input-number-handler-down-inner"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-input-number-handler-down-inner"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </div>
                                                                  </StepHandler>
                                                                  <div
                                                                    className="ant-input-number-input-wrap"
                                                                  >
                                                                    <input
                                                                      aria-valuenow={null}
                                                                      autoComplete="off"
                                                                      className="ant-input-number-input"
                                                                      id="create-category_episode"
                                                                      onChange={[Function]}
                                                                      placeholder="Input episode"
                                                                      role="spinbutton"
                                                                      step={1}
                                                                      value=""
                                                                    />
                                                                  </div>
                                                                </div>
                                                              </InputNumber>
                                                            </ForwardRef>
                                                          </Component>
                                                        </div>
                                                      </div>
                                                      <ErrorList
                                                        errors={Array []}
                                                        onDomErrorVisibleChange={[Function]}
                                                      >
                                                        <CSSMotion
                                                          motionAppear={true}
                                                          motionDeadline={500}
                                                          motionName="ant-show-help"
                                                          onLeaveEnd={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </ErrorList>
                                                    </div>
                                                  </Col>
                                                </FormItemInput>
                                              </div>
                                            </Row>
                                          </Field>
                                        </WrapperField>
                                      </FormItem>
                                    </span>
                                  </Group>
                                </div>
                              </div>
                              <ErrorList
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                              >
                                <CSSMotion
                                  motionAppear={true}
                                  motionDeadline={500}
                                  motionName="ant-show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </FormItem>
                  <FormItem
                    label="Type of Episode"
                    name="type"
                  >
                    <WrapperField
                      label="Type of Episode"
                      messageVariables={
                        Object {
                          "label": "Type of Episode",
                        }
                      }
                      name="type"
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        fieldContext={
                          Object {
                            "__INTERNAL__": Object {
                              "itemRef": [Function],
                              "name": "create-category",
                            },
                            "getFieldError": [Function],
                            "getFieldInstance": [Function],
                            "getFieldValue": [Function],
                            "getFieldsError": [Function],
                            "getFieldsValue": [Function],
                            "getInternalHooks": [Function],
                            "isFieldTouched": [Function],
                            "isFieldValidating": [Function],
                            "isFieldsTouched": [Function],
                            "isFieldsValidating": [Function],
                            "resetFields": [Function],
                            "scrollToField": [Function],
                            "setFields": [Function],
                            "setFieldsValue": [Function],
                            "submit": [Function],
                            "validateFields": [Function],
                            "validateTrigger": "onChange",
                          }
                        }
                        key="_type"
                        label="Type of Episode"
                        messageVariables={
                          Object {
                            "label": "Type of Episode",
                          }
                        }
                        name={
                          Array [
                            "type",
                          ]
                        }
                        onReset={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={Object {}}
                          >
                            <FormItemLabel
                              htmlFor="create-category_type"
                              label="Type of Episode"
                              name="type"
                              prefixCls="ant-form"
                              required={false}
                              requiredMark={true}
                            >
                              <Col
                                className="ant-form-item-label"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-label"
                                  style={Object {}}
                                >
                                  <label
                                    className=""
                                    htmlFor="create-category_type"
                                    title="Type of Episode"
                                  >
                                    Type of Episode
                                  </label>
                                </div>
                              </Col>
                            </FormItemLabel>
                            <FormItemInput
                              errors={Array []}
                              label="Type of Episode"
                              name={
                                Array [
                                  "type",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                      >
                                        <ForwardRef
                                          defaultValue="full"
                                          id="create-category_type"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="ant-radio-group ant-radio-group-outline"
                                            id="create-category_type"
                                          >
                                            <ForwardRef(RadioButton)
                                              value="full"
                                            >
                                              <Radio
                                                checked={true}
                                                prefixCls="ant-radio-button"
                                                type="radio"
                                                value="full"
                                              >
                                                <label
                                                  className="ant-radio-button-wrapper ant-radio-button-wrapper-checked"
                                                >
                                                  <Checkbox
                                                    checked={true}
                                                    className=""
                                                    defaultChecked={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    onKeyUp={[Function]}
                                                    prefixCls="ant-radio-button"
                                                    style={Object {}}
                                                    type="radio"
                                                    value="full"
                                                  >
                                                    <span
                                                      className="ant-radio-button ant-radio-button-checked"
                                                      style={Object {}}
                                                    >
                                                      <input
                                                        checked={true}
                                                        className="ant-radio-button-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyPress={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="radio"
                                                        value="full"
                                                      />
                                                      <span
                                                        className="ant-radio-button-inner"
                                                      />
                                                    </span>
                                                  </Checkbox>
                                                  <span>
                                                    Full
                                                  </span>
                                                </label>
                                              </Radio>
                                            </ForwardRef(RadioButton)>
                                            <ForwardRef(RadioButton)
                                              value="trailer"
                                            >
                                              <Radio
                                                checked={false}
                                                prefixCls="ant-radio-button"
                                                type="radio"
                                                value="trailer"
                                              >
                                                <label
                                                  className="ant-radio-button-wrapper"
                                                >
                                                  <Checkbox
                                                    checked={false}
                                                    className=""
                                                    defaultChecked={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    onKeyUp={[Function]}
                                                    prefixCls="ant-radio-button"
                                                    style={Object {}}
                                                    type="radio"
                                                    value="trailer"
                                                  >
                                                    <span
                                                      className="ant-radio-button"
                                                      style={Object {}}
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="ant-radio-button-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyPress={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="radio"
                                                        value="trailer"
                                                      />
                                                      <span
                                                        className="ant-radio-button-inner"
                                                      />
                                                    </span>
                                                  </Checkbox>
                                                  <span>
                                                    Trailer
                                                  </span>
                                                </label>
                                              </Radio>
                                            </ForwardRef(RadioButton)>
                                            <ForwardRef(RadioButton)
                                              value="bonus"
                                            >
                                              <Radio
                                                checked={false}
                                                prefixCls="ant-radio-button"
                                                type="radio"
                                                value="bonus"
                                              >
                                                <label
                                                  className="ant-radio-button-wrapper"
                                                >
                                                  <Checkbox
                                                    checked={false}
                                                    className=""
                                                    defaultChecked={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyPress={[Function]}
                                                    onKeyUp={[Function]}
                                                    prefixCls="ant-radio-button"
                                                    style={Object {}}
                                                    type="radio"
                                                    value="bonus"
                                                  >
                                                    <span
                                                      className="ant-radio-button"
                                                      style={Object {}}
                                                    >
                                                      <input
                                                        checked={false}
                                                        className="ant-radio-button-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyPress={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="radio"
                                                        value="bonus"
                                                      />
                                                      <span
                                                        className="ant-radio-button-inner"
                                                      />
                                                    </span>
                                                  </Checkbox>
                                                  <span>
                                                    Bonus
                                                  </span>
                                                </label>
                                              </Radio>
                                            </ForwardRef(RadioButton)>
                                          </div>
                                        </ForwardRef>
                                      </Component>
                                    </div>
                                  </div>
                                  <ErrorList
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                  >
                                    <CSSMotion
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionName="ant-show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                  <DescriptionInput
                    inputProps={
                      Object {
                        "placeholder": "Enter Description...",
                        "style": Object {
                          "width": "600px",
                        },
                      }
                    }
                  >
                    <FormItem
                      label="Description"
                      name="description"
                    >
                      <WrapperField
                        label="Description"
                        messageVariables={
                          Object {
                            "label": "Description",
                          }
                        }
                        name="description"
                        onReset={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "create-category",
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_description"
                          label="Description"
                          messageVariables={
                            Object {
                              "label": "Description",
                            }
                          }
                          name={
                            Array [
                              "description",
                            ]
                          }
                          onReset={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                          >
                            <div
                              className="ant-row ant-form-item"
                              style={Object {}}
                            >
                              <FormItemLabel
                                htmlFor="create-category_description"
                                label="Description"
                                name="description"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                              >
                                <Col
                                  className="ant-form-item-label"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-label"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="create-category_description"
                                      title="Description"
                                    >
                                      Description
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Description"
                                name={
                                  Array [
                                    "description",
                                  ]
                                }
                                onDomErrorVisibleChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validateStatus=""
                                validating={false}
                              >
                                <Col
                                  className="ant-form-item-control"
                                  span={24}
                                >
                                  <div
                                    className="ant-col ant-col-24 ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={1}
                                        >
                                          <Editor
                                            id="create-category_description"
                                            onChange={[Function]}
                                            placeholder="Enter Description..."
                                            style={
                                              Object {
                                                "width": "600px",
                                              }
                                            }
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "width": "600px",
                                                }
                                              }
                                            />
                                          </Editor>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      errors={Array []}
                                      onDomErrorVisibleChange={[Function]}
                                    >
                                      <CSSMotion
                                        motionAppear={true}
                                        motionDeadline={500}
                                        motionName="ant-show-help"
                                        onLeaveEnd={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                  </DescriptionInput>
                  <MetaForm>
                    <Collapse
                      expandIcon={[Function]}
                      expandIconPosition="right"
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <Collapse
                        accordion={false}
                        bordered={true}
                        className="ant-collapse-icon-position-right"
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        expandIconPosition="right"
                        onChange={[Function]}
                        openMotion={
                          Object {
                            "leavedClassName": "ant-collapse-content-hidden",
                            "motionAppear": false,
                            "motionDeadline": 500,
                            "motionName": "ant-motion-collapse",
                            "onAppearActive": [Function],
                            "onAppearEnd": [Function],
                            "onAppearStart": [Function],
                            "onEnterActive": [Function],
                            "onEnterEnd": [Function],
                            "onEnterStart": [Function],
                            "onLeaveActive": [Function],
                            "onLeaveEnd": [Function],
                            "onLeaveStart": [Function],
                          }
                        }
                        prefixCls="ant-collapse"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <div
                          className="ant-collapse ant-collapse-icon-position-right"
                          role={null}
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <CollapsePanel
                            accordion={false}
                            destroyInactivePanel={false}
                            expandIcon={[Function]}
                            header="Meta Data"
                            isActive={false}
                            key="0"
                            onItemClick={[Function]}
                            openMotion={
                              Object {
                                "leavedClassName": "ant-collapse-content-hidden",
                                "motionAppear": false,
                                "motionDeadline": 500,
                                "motionName": "ant-motion-collapse",
                                "onAppearActive": [Function],
                                "onAppearEnd": [Function],
                                "onAppearStart": [Function],
                                "onEnterActive": [Function],
                                "onEnterEnd": [Function],
                                "onEnterStart": [Function],
                                "onLeaveActive": [Function],
                                "onLeaveEnd": [Function],
                                "onLeaveStart": [Function],
                              }
                            }
                            panelKey="0"
                            prefixCls="ant-collapse"
                          >
                            <CollapsePanel
                              accordion={false}
                              className=""
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              forceRender={false}
                              header="Meta Data"
                              headerClass=""
                              isActive={false}
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="0"
                              prefixCls="ant-collapse"
                              showArrow={true}
                            >
                              <div
                                className="ant-collapse-item"
                              >
                                <div
                                  aria-expanded={false}
                                  className="ant-collapse-header"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Button
                                    className="ant-collapse-arrow"
                                  >
                                    <Wave>
                                      <button
                                        className="ant-btn ant-collapse-arrow"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <LoadingIcon
                                          existIcon={false}
                                          loading={false}
                                          prefixCls="ant-btn"
                                        >
                                          <CSSMotion
                                            motionName="ant-btn-loading-icon-motion"
                                            onAppearActive={[Function]}
                                            onAppearStart={[Function]}
                                            onEnterActive={[Function]}
                                            onEnterStart={[Function]}
                                            onLeaveActive={[Function]}
                                            onLeaveStart={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </LoadingIcon>
                                        <span
                                          key=".0"
                                        >
                                          Expand
                                        </span>
                                      </button>
                                    </Wave>
                                  </Button>
                                  Meta Data
                                </div>
                                <CSSMotion
                                  forceRender={false}
                                  leavedClassName="ant-collapse-content-hidden"
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionName="ant-motion-collapse"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  removeOnLeave={false}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </div>
                            </CollapsePanel>
                          </CollapsePanel>
                          <CollapsePanel
                            accordion={false}
                            destroyInactivePanel={false}
                            expandIcon={[Function]}
                            header="Code Injection"
                            isActive={false}
                            key="1"
                            onItemClick={[Function]}
                            openMotion={
                              Object {
                                "leavedClassName": "ant-collapse-content-hidden",
                                "motionAppear": false,
                                "motionDeadline": 500,
                                "motionName": "ant-motion-collapse",
                                "onAppearActive": [Function],
                                "onAppearEnd": [Function],
                                "onAppearStart": [Function],
                                "onEnterActive": [Function],
                                "onEnterEnd": [Function],
                                "onEnterStart": [Function],
                                "onLeaveActive": [Function],
                                "onLeaveEnd": [Function],
                                "onLeaveStart": [Function],
                              }
                            }
                            panelKey="1"
                            prefixCls="ant-collapse"
                          >
                            <CollapsePanel
                              accordion={false}
                              className=""
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              forceRender={false}
                              header="Code Injection"
                              headerClass=""
                              isActive={false}
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="1"
                              prefixCls="ant-collapse"
                              showArrow={true}
                            >
                              <div
                                className="ant-collapse-item"
                              >
                                <div
                                  aria-expanded={false}
                                  className="ant-collapse-header"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Button
                                    className="ant-collapse-arrow"
                                  >
                                    <Wave>
                                      <button
                                        className="ant-btn ant-collapse-arrow"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <LoadingIcon
                                          existIcon={false}
                                          loading={false}
                                          prefixCls="ant-btn"
                                        >
                                          <CSSMotion
                                            motionName="ant-btn-loading-icon-motion"
                                            onAppearActive={[Function]}
                                            onAppearStart={[Function]}
                                            onEnterActive={[Function]}
                                            onEnterStart={[Function]}
                                            onLeaveActive={[Function]}
                                            onLeaveStart={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </LoadingIcon>
                                        <span
                                          key=".0"
                                        >
                                          Expand
                                        </span>
                                      </button>
                                    </Wave>
                                  </Button>
                                  Code Injection
                                </div>
                                <CSSMotion
                                  forceRender={false}
                                  leavedClassName="ant-collapse-content-hidden"
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionName="ant-motion-collapse"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  removeOnLeave={false}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </div>
                            </CollapsePanel>
                          </CollapsePanel>
                        </div>
                      </Collapse>
                    </Collapse>
                    <Collapse
                      expandIcon={[Function]}
                      expandIconPosition="right"
                      style={
                        Object {
                          "width": "100%",
                        }
                      }
                    >
                      <Collapse
                        accordion={false}
                        bordered={true}
                        className="ant-collapse-icon-position-right"
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        expandIconPosition="right"
                        onChange={[Function]}
                        openMotion={
                          Object {
                            "leavedClassName": "ant-collapse-content-hidden",
                            "motionAppear": false,
                            "motionDeadline": 500,
                            "motionName": "ant-motion-collapse",
                            "onAppearActive": [Function],
                            "onAppearEnd": [Function],
                            "onAppearStart": [Function],
                            "onEnterActive": [Function],
                            "onEnterEnd": [Function],
                            "onEnterStart": [Function],
                            "onLeaveActive": [Function],
                            "onLeaveEnd": [Function],
                            "onLeaveStart": [Function],
                          }
                        }
                        prefixCls="ant-collapse"
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                      >
                        <div
                          className="ant-collapse ant-collapse-icon-position-right"
                          role={null}
                          style={
                            Object {
                              "width": "100%",
                            }
                          }
                        >
                          <CollapsePanel
                            accordion={false}
                            destroyInactivePanel={false}
                            expandIcon={[Function]}
                            header="Meta Fields"
                            isActive={false}
                            key="0"
                            onItemClick={[Function]}
                            openMotion={
                              Object {
                                "leavedClassName": "ant-collapse-content-hidden",
                                "motionAppear": false,
                                "motionDeadline": 500,
                                "motionName": "ant-motion-collapse",
                                "onAppearActive": [Function],
                                "onAppearEnd": [Function],
                                "onAppearStart": [Function],
                                "onEnterActive": [Function],
                                "onEnterEnd": [Function],
                                "onEnterStart": [Function],
                                "onLeaveActive": [Function],
                                "onLeaveEnd": [Function],
                                "onLeaveStart": [Function],
                              }
                            }
                            panelKey="0"
                            prefixCls="ant-collapse"
                          >
                            <CollapsePanel
                              accordion={false}
                              className=""
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              forceRender={false}
                              header="Meta Fields"
                              headerClass=""
                              isActive={false}
                              onItemClick={[Function]}
                              openMotion={
                                Object {
                                  "leavedClassName": "ant-collapse-content-hidden",
                                  "motionAppear": false,
                                  "motionDeadline": 500,
                                  "motionName": "ant-motion-collapse",
                                  "onAppearActive": [Function],
                                  "onAppearEnd": [Function],
                                  "onAppearStart": [Function],
                                  "onEnterActive": [Function],
                                  "onEnterEnd": [Function],
                                  "onEnterStart": [Function],
                                  "onLeaveActive": [Function],
                                  "onLeaveEnd": [Function],
                                  "onLeaveStart": [Function],
                                }
                              }
                              panelKey="0"
                              prefixCls="ant-collapse"
                              showArrow={true}
                            >
                              <div
                                className="ant-collapse-item"
                              >
                                <div
                                  aria-expanded={false}
                                  className="ant-collapse-header"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <Button
                                    className="ant-collapse-arrow"
                                  >
                                    <Wave>
                                      <button
                                        className="ant-btn ant-collapse-arrow"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <LoadingIcon
                                          existIcon={false}
                                          loading={false}
                                          prefixCls="ant-btn"
                                        >
                                          <CSSMotion
                                            motionName="ant-btn-loading-icon-motion"
                                            onAppearActive={[Function]}
                                            onAppearStart={[Function]}
                                            onEnterActive={[Function]}
                                            onEnterStart={[Function]}
                                            onLeaveActive={[Function]}
                                            onLeaveStart={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </LoadingIcon>
                                        <span
                                          key=".0"
                                        >
                                          Expand
                                        </span>
                                      </button>
                                    </Wave>
                                  </Button>
                                  Meta Fields
                                </div>
                                <CSSMotion
                                  forceRender={false}
                                  leavedClassName="ant-collapse-content-hidden"
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionName="ant-motion-collapse"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  removeOnLeave={false}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </div>
                            </CollapsePanel>
                          </CollapsePanel>
                        </div>
                      </Collapse>
                    </Collapse>
                  </MetaForm>
                  <FormItem
                    wrapperCol={
                      Object {
                        "offset": 10,
                        "span": 14,
                      }
                    }
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        style={Object {}}
                      >
                        <FormItemLabel
                          prefixCls="ant-form"
                          requiredMark={true}
                          wrapperCol={
                            Object {
                              "offset": 10,
                              "span": 14,
                            }
                          }
                        />
                        <FormItemInput
                          errors={Array []}
                          onDomErrorVisibleChange={[Function]}
                          prefixCls="ant-form"
                          status=""
                          validateStatus=""
                          wrapperCol={
                            Object {
                              "offset": 10,
                              "span": 14,
                            }
                          }
                        >
                          <Col
                            className="ant-form-item-control"
                            offset={10}
                            span={14}
                          >
                            <div
                              className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Space>
                                    <div
                                      className="ant-space ant-space-horizontal ant-space-align-center"
                                      style={Object {}}
                                    >
                                      <Item
                                        className="ant-space-item"
                                        direction="horizontal"
                                        index={0}
                                        key="ant-space-item-0"
                                        marginDirection="marginRight"
                                        wrap={false}
                                      >
                                        <div
                                          className="ant-space-item"
                                          style={
                                            Object {
                                              "marginRight": 8,
                                            }
                                          }
                                        >
                                          <Button
                                            disabled={true}
                                            htmlType="submit"
                                            type="primary"
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn ant-btn-primary"
                                                disabled={true}
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Submit
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                      </Item>
                                      <Item
                                        className="ant-space-item"
                                        direction="horizontal"
                                        index={1}
                                        key="ant-space-item-1"
                                        marginDirection="marginRight"
                                        wrap={false}
                                      >
                                        <div
                                          className="ant-space-item"
                                          style={Object {}}
                                        >
                                          <Button
                                            htmlType="button"
                                            onClick={[Function]}
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <LoadingIcon
                                                  existIcon={false}
                                                  loading={false}
                                                  prefixCls="ant-btn"
                                                >
                                                  <CSSMotion
                                                    motionName="ant-btn-loading-icon-motion"
                                                    onAppearActive={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveStart={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </LoadingIcon>
                                                <span
                                                  key=".0"
                                                >
                                                  Reset
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                      </Item>
                                    </div>
                                  </Space>
                                </div>
                              </div>
                              <ErrorList
                                errors={Array []}
                                onDomErrorVisibleChange={[Function]}
                              >
                                <CSSMotion
                                  motionAppear={true}
                                  motionDeadline={500}
                                  motionName="ant-show-help"
                                  onLeaveEnd={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </FormItem>
                </div>
                <div
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                    }
                  }
                >
                  <FormItem
                    label="Featured Image"
                    name="medium_id"
                  >
                    <WrapperField
                      label="Featured Image"
                      messageVariables={
                        Object {
                          "label": "Featured Image",
                        }
                      }
                      name="medium_id"
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        fieldContext={
                          Object {
                            "__INTERNAL__": Object {
                              "itemRef": [Function],
                              "name": "create-category",
                            },
                            "getFieldError": [Function],
                            "getFieldInstance": [Function],
                            "getFieldValue": [Function],
                            "getFieldsError": [Function],
                            "getFieldsValue": [Function],
                            "getInternalHooks": [Function],
                            "isFieldTouched": [Function],
                            "isFieldValidating": [Function],
                            "isFieldsTouched": [Function],
                            "isFieldsValidating": [Function],
                            "resetFields": [Function],
                            "scrollToField": [Function],
                            "setFields": [Function],
                            "setFieldsValue": [Function],
                            "submit": [Function],
                            "validateFields": [Function],
                            "validateTrigger": "onChange",
                          }
                        }
                        key="_medium_id"
                        label="Featured Image"
                        messageVariables={
                          Object {
                            "label": "Featured Image",
                          }
                        }
                        name={
                          Array [
                            "medium_id",
                          ]
                        }
                        onReset={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={Object {}}
                          >
                            <FormItemLabel
                              htmlFor="create-category_medium_id"
                              label="Featured Image"
                              name="medium_id"
                              prefixCls="ant-form"
                              required={false}
                              requiredMark={true}
                            >
                              <Col
                                className="ant-form-item-label"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-label"
                                  style={Object {}}
                                >
                                  <label
                                    className=""
                                    htmlFor="create-category_medium_id"
                                    title="Featured Image"
                                  >
                                    Featured Image
                                  </label>
                                </div>
                              </Col>
                            </FormItemLabel>
                            <FormItemInput
                              errors={Array []}
                              label="Featured Image"
                              name={
                                Array [
                                  "medium_id",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                      >
                                        <MediaSelector
                                          id="create-category_medium_id"
                                          onChange={[Function]}
                                        >
                                          <Modal
                                            closable={false}
                                            confirmLoading={false}
                                            footer={
                                              Array [
                                                <ForwardRef(InternalButton)
                                                  onClick={[Function]}
                                                >
                                                  Cancel
                                                </ForwardRef(InternalButton)>,
                                                <ForwardRef(InternalButton)
                                                  onClick={[Function]}
                                                  type="primary"
                                                >
                                                  Ok
                                                </ForwardRef(InternalButton)>,
                                              ]
                                            }
                                            okType="primary"
                                            onCancel={[Function]}
                                            visible={false}
                                            width="800px"
                                          >
                                            <Dialog
                                              closable={false}
                                              closeIcon={
                                                <span
                                                  className="ant-modal-close-x"
                                                >
                                                  <ForwardRef(CloseOutlined)
                                                    className="ant-modal-close-icon"
                                                  />
                                                </span>
                                              }
                                              confirmLoading={false}
                                              focusTriggerAfterClose={true}
                                              footer={
                                                Array [
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                  >
                                                    Cancel
                                                  </ForwardRef(InternalButton)>,
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                    type="primary"
                                                  >
                                                    Ok
                                                  </ForwardRef(InternalButton)>,
                                                ]
                                              }
                                              maskTransitionName="ant-fade"
                                              okType="primary"
                                              onCancel={[Function]}
                                              onClose={[Function]}
                                              prefixCls="ant-modal"
                                              transitionName="ant-zoom"
                                              visible={false}
                                              width="800px"
                                              wrapClassName=""
                                            >
                                              <PortalWrapper
                                                visible={false}
                                              />
                                            </Dialog>
                                          </Modal>
                                          <Space
                                            direction="vertical"
                                          >
                                            <div
                                              className="ant-space ant-space-vertical"
                                              style={Object {}}
                                            >
                                              <Item
                                                className="ant-space-item"
                                                direction="vertical"
                                                index={0}
                                                key="ant-space-item-0"
                                                marginDirection="marginRight"
                                                wrap={false}
                                              >
                                                <div
                                                  className="ant-space-item"
                                                  style={Object {}}
                                                >
                                                  <div
                                                    style={
                                                      Object {
                                                        "alignItems": "center",
                                                        "display": "flex",
                                                        "justifyContent": "center",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "position": "relative",
                                                        }
                                                      }
                                                    >
                                                      <Button
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "background": "transparent",
                                                            "borderStyle": "dashed",
                                                            "display": "block",
                                                            "height": "auto",
                                                          }
                                                        }
                                                      >
                                                        <Wave>
                                                          <button
                                                            className="ant-btn"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "background": "transparent",
                                                                "borderStyle": "dashed",
                                                                "display": "block",
                                                                "height": "auto",
                                                              }
                                                            }
                                                            type="button"
                                                          >
                                                            <LoadingIcon
                                                              existIcon={false}
                                                              loading={false}
                                                              prefixCls="ant-btn"
                                                            >
                                                              <CSSMotion
                                                                motionName="ant-btn-loading-icon-motion"
                                                                onAppearActive={[Function]}
                                                                onAppearStart={[Function]}
                                                                onEnterActive={[Function]}
                                                                onEnterStart={[Function]}
                                                                onLeaveActive={[Function]}
                                                                onLeaveStart={[Function]}
                                                                removeOnLeave={true}
                                                                visible={false}
                                                              >
                                                                <DomWrapper />
                                                              </CSSMotion>
                                                            </LoadingIcon>
                                                            <PlaceholderImage
                                                              height="auto"
                                                              key=".0"
                                                              width="100%"
                                                            >
                                                              <img
                                                                alt=""
                                                                height="auto"
                                                                src="placeholderImage.svg"
                                                                style={
                                                                  Object {
                                                                    "maxWidth": "240px",
                                                                    "objectFit": "contain",
                                                                    "padding": "1rem",
                                                                  }
                                                                }
                                                                width="100%"
                                                              />
                                                            </PlaceholderImage>
                                                          </button>
                                                        </Wave>
                                                      </Button>
                                                    </div>
                                                  </div>
                                                </div>
                                              </Item>
                                            </div>
                                          </Space>
                                        </MediaSelector>
                                      </Component>
                                    </div>
                                  </div>
                                  <ErrorList
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                  >
                                    <CSSMotion
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionName="ant-show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                  <FormItem
                    label="Audio"
                    name="audio_url"
                  >
                    <WrapperField
                      label="Audio"
                      messageVariables={
                        Object {
                          "label": "Audio",
                        }
                      }
                      name="audio_url"
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        fieldContext={
                          Object {
                            "__INTERNAL__": Object {
                              "itemRef": [Function],
                              "name": "create-category",
                            },
                            "getFieldError": [Function],
                            "getFieldInstance": [Function],
                            "getFieldValue": [Function],
                            "getFieldsError": [Function],
                            "getFieldsValue": [Function],
                            "getInternalHooks": [Function],
                            "isFieldTouched": [Function],
                            "isFieldValidating": [Function],
                            "isFieldsTouched": [Function],
                            "isFieldsValidating": [Function],
                            "resetFields": [Function],
                            "scrollToField": [Function],
                            "setFields": [Function],
                            "setFieldsValue": [Function],
                            "submit": [Function],
                            "validateFields": [Function],
                            "validateTrigger": "onChange",
                          }
                        }
                        key="_audio_url"
                        label="Audio"
                        messageVariables={
                          Object {
                            "label": "Audio",
                          }
                        }
                        name={
                          Array [
                            "audio_url",
                          ]
                        }
                        onReset={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={Object {}}
                          >
                            <FormItemLabel
                              htmlFor="create-category_audio_url"
                              label="Audio"
                              name="audio_url"
                              prefixCls="ant-form"
                              required={false}
                              requiredMark={true}
                            >
                              <Col
                                className="ant-form-item-label"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-label"
                                  style={Object {}}
                                >
                                  <label
                                    className=""
                                    htmlFor="create-category_audio_url"
                                    title="Audio"
                                  >
                                    Audio
                                  </label>
                                </div>
                              </Col>
                            </FormItemLabel>
                            <FormItemInput
                              errors={Array []}
                              label="Audio"
                              name={
                                Array [
                                  "audio_url",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={24}
                              >
                                <div
                                  className="ant-col ant-col-24 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                      >
                                        <Audio
                                          id="create-category_audio_url"
                                          onChange={[Function]}
                                          onUpload={[Function]}
                                        >
                                          <Modal
                                            closable={false}
                                            confirmLoading={false}
                                            footer={
                                              Array [
                                                <ForwardRef(InternalButton)
                                                  onClick={[Function]}
                                                >
                                                  Cancel
                                                </ForwardRef(InternalButton)>,
                                                <ForwardRef(InternalButton)
                                                  onClick={[Function]}
                                                  type="primary"
                                                >
                                                  Submit
                                                </ForwardRef(InternalButton)>,
                                              ]
                                            }
                                            okType="primary"
                                            onCancel={[Function]}
                                            visible={false}
                                            width="800px"
                                          >
                                            <Dialog
                                              closable={false}
                                              closeIcon={
                                                <span
                                                  className="ant-modal-close-x"
                                                >
                                                  <ForwardRef(CloseOutlined)
                                                    className="ant-modal-close-icon"
                                                  />
                                                </span>
                                              }
                                              confirmLoading={false}
                                              focusTriggerAfterClose={true}
                                              footer={
                                                Array [
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                  >
                                                    Cancel
                                                  </ForwardRef(InternalButton)>,
                                                  <ForwardRef(InternalButton)
                                                    onClick={[Function]}
                                                    type="primary"
                                                  >
                                                    Submit
                                                  </ForwardRef(InternalButton)>,
                                                ]
                                              }
                                              maskTransitionName="ant-fade"
                                              okType="primary"
                                              onCancel={[Function]}
                                              onClose={[Function]}
                                              prefixCls="ant-modal"
                                              transitionName="ant-zoom"
                                              visible={false}
                                              width="800px"
                                              wrapClassName=""
                                            >
                                              <PortalWrapper
                                                visible={false}
                                              />
                                            </Dialog>
                                          </Modal>
                                          <Space
                                            direction="vertical"
                                          >
                                            <div
                                              className="ant-space ant-space-vertical"
                                              style={Object {}}
                                            >
                                              <Item
                                                className="ant-space-item"
                                                direction="vertical"
                                                index={0}
                                                key="ant-space-item-0"
                                                marginDirection="marginRight"
                                                wrap={false}
                                              />
                                              <Item
                                                className="ant-space-item"
                                                direction="vertical"
                                                index={1}
                                                key="ant-space-item-1"
                                                marginDirection="marginRight"
                                                wrap={false}
                                              >
                                                <div
                                                  className="ant-space-item"
                                                  style={Object {}}
                                                >
                                                  <Space
                                                    direction="horizontal"
                                                  >
                                                    <div
                                                      className="ant-space ant-space-horizontal ant-space-align-center"
                                                      style={Object {}}
                                                    >
                                                      <Item
                                                        className="ant-space-item"
                                                        direction="horizontal"
                                                        index={0}
                                                        key="ant-space-item-0"
                                                        marginDirection="marginRight"
                                                        wrap={false}
                                                      />
                                                      <Item
                                                        className="ant-space-item"
                                                        direction="horizontal"
                                                        index={1}
                                                        key="ant-space-item-1"
                                                        marginDirection="marginRight"
                                                        wrap={false}
                                                      >
                                                        <div
                                                          className="ant-space-item"
                                                          style={
                                                            Object {
                                                              "marginRight": 8,
                                                            }
                                                          }
                                                        >
                                                           
                                                        </div>
                                                      </Item>
                                                      <Item
                                                        className="ant-space-item"
                                                        direction="horizontal"
                                                        index={2}
                                                        key="ant-space-item-2"
                                                        marginDirection="marginRight"
                                                        wrap={false}
                                                      >
                                                        <div
                                                          className="ant-space-item"
                                                          style={Object {}}
                                                        >
                                                          <Button
                                                            onClick={[Function]}
                                                          >
                                                            <Wave>
                                                              <button
                                                                className="ant-btn"
                                                                onClick={[Function]}
                                                                type="button"
                                                              >
                                                                <LoadingIcon
                                                                  existIcon={false}
                                                                  loading={false}
                                                                  prefixCls="ant-btn"
                                                                >
                                                                  <CSSMotion
                                                                    motionName="ant-btn-loading-icon-motion"
                                                                    onAppearActive={[Function]}
                                                                    onAppearStart={[Function]}
                                                                    onEnterActive={[Function]}
                                                                    onEnterStart={[Function]}
                                                                    onLeaveActive={[Function]}
                                                                    onLeaveStart={[Function]}
                                                                    removeOnLeave={true}
                                                                    visible={false}
                                                                  >
                                                                    <DomWrapper />
                                                                  </CSSMotion>
                                                                </LoadingIcon>
                                                                <span
                                                                  key=".0"
                                                                >
                                                                  Select
                                                                </span>
                                                              </button>
                                                            </Wave>
                                                          </Button>
                                                        </div>
                                                      </Item>
                                                    </div>
                                                  </Space>
                                                </div>
                                              </Item>
                                            </div>
                                          </Space>
                                        </Audio>
                                      </Component>
                                    </div>
                                  </div>
                                  <ErrorList
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                  >
                                    <CSSMotion
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionName="ant-show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                </div>
              </div>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </EpisodeForm>
  </CreateEpisode>
</Provider>
`;
