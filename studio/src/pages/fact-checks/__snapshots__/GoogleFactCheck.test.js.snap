// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GoogleFactCheck component snapshot testing should match when component loading 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <GoogleFactCheck>
    <Space
      direction="vertical"
    >
      <div
        className="ant-space ant-space-vertical"
        style={Object {}}
      >
        <Item
          className="ant-space-item"
          direction="vertical"
          index={0}
          key="ant-space-item-0"
          marginDirection="marginRight"
          wrap={false}
        >
          <div
            className="ant-space-item"
            style={
              Object {
                "marginBottom": 8,
              }
            }
          >
            <ForwardRef(InternalForm)
              form={
                Object {
                  "__INTERNAL__": Object {
                    "itemRef": [Function],
                    "name": "google-fact-check",
                  },
                  "_init": true,
                  "getFieldError": [Function],
                  "getFieldInstance": [Function],
                  "getFieldValue": [Function],
                  "getFieldWarning": [Function],
                  "getFieldsError": [Function],
                  "getFieldsValue": [Function],
                  "getInternalHooks": [Function],
                  "isFieldTouched": [Function],
                  "isFieldValidating": [Function],
                  "isFieldsTouched": [Function],
                  "isFieldsValidating": [Function],
                  "resetFields": [Function],
                  "scrollToField": [Function],
                  "setFields": [Function],
                  "setFieldsValue": [Function],
                  "submit": [Function],
                  "validateFields": [Function],
                }
              }
              layout="inline"
              name="google-fact-check"
              onFinish={[Function]}
              style={
                Object {
                  "maxWidth": "100%",
                }
              }
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "google-fact-check",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="google-fact-check"
                  name="google-fact-check"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="google-fact-check"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <FormItem
                      label="Search"
                      name="query"
                      rules={
                        Array [
                          Object {
                            "message": "Please enter your search query!",
                            "required": true,
                          },
                        ]
                      }
                      style={
                        Object {
                          "width": "25%",
                        }
                      }
                    >
                      <WrapperField
                        label="Search"
                        messageVariables={
                          Object {
                            "label": "Search",
                          }
                        }
                        name="query"
                        onMetaChange={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter your search query!",
                              "required": true,
                            },
                          ]
                        }
                        style={
                          Object {
                            "width": "25%",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "google-fact-check",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_query"
                          label="Search"
                          messageVariables={
                            Object {
                              "label": "Search",
                            }
                          }
                          name={
                            Array [
                              "query",
                            ]
                          }
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter your search query!",
                                "required": true,
                              },
                            ]
                          }
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                            >
                              <FormItemLabel
                                htmlFor="google-fact-check_query"
                                label="Search"
                                name="query"
                                prefixCls="ant-form"
                                required={true}
                                requiredMark={true}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter your search query!",
                                      "required": true,
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                >
                                  <div
                                    className="ant-col ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className="ant-form-item-required"
                                      htmlFor="google-fact-check_query"
                                      title="Search"
                                    >
                                      Search
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Search"
                                name={Array []}
                                prefixCls="ant-form"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter your search query!",
                                      "required": true,
                                    },
                                  ]
                                }
                                status=""
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef
                                              placeholder="search fact checks"
                                            />
                                          }
                                        >
                                          <ForwardRef
                                            id="google-fact-check_query"
                                            onChange={[Function]}
                                            placeholder="search fact checks"
                                          >
                                            <ForwardRef
                                              affixWrapperClassName=""
                                              groupClassName=""
                                              id="google-fact-check_query"
                                              inputClassName=""
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="search fact checks"
                                              prefixCls="ant-input"
                                              wrapperClassName=""
                                            >
                                              <BaseInput
                                                affixWrapperClassName=""
                                                focused={false}
                                                groupClassName=""
                                                handleReset={[Function]}
                                                id="google-fact-check_query"
                                                inputElement={
                                                  <input
                                                    className="ant-input"
                                                    id="google-fact-check_query"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="search fact checks"
                                                    type="text"
                                                  />
                                                }
                                                placeholder="search fact checks"
                                                prefixCls="ant-input"
                                                suffix={null}
                                                triggerFocus={[Function]}
                                                value=""
                                                wrapperClassName=""
                                              >
                                                <input
                                                  className="ant-input"
                                                  id="google-fact-check_query"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="search fact checks"
                                                  type="text"
                                                  value=""
                                                />
                                              </BaseInput>
                                            </ForwardRef>
                                          </ForwardRef>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem
                      label="language"
                      name="language"
                      style={
                        Object {
                          "width": "25%",
                        }
                      }
                    >
                      <WrapperField
                        label="language"
                        messageVariables={
                          Object {
                            "label": "language",
                          }
                        }
                        name="language"
                        onMetaChange={[Function]}
                        style={
                          Object {
                            "width": "25%",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "google-fact-check",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_language"
                          label="language"
                          messageVariables={
                            Object {
                              "label": "language",
                            }
                          }
                          name={
                            Array [
                              "language",
                            ]
                          }
                          onMetaChange={[Function]}
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                            >
                              <FormItemLabel
                                htmlFor="google-fact-check_language"
                                label="language"
                                name="language"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                >
                                  <div
                                    className="ant-col ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="google-fact-check_language"
                                      title="language"
                                    >
                                      language
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="language"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef(InternalSelect)
                                              defaultValue="all"
                                            >
                                              <Option
                                                value="all"
                                              >
                                                All
                                              </Option>
                                              <Option
                                                value="am"
                                              >
                                                Amharic
                                              </Option>
                                              <Option
                                                value="ar"
                                              >
                                                Arabic
                                              </Option>
                                              <Option
                                                value="eu"
                                              >
                                                Basque
                                              </Option>
                                              <Option
                                                value="bn"
                                              >
                                                Bengali
                                              </Option>
                                              <Option
                                                value="en-GB"
                                              >
                                                English (UK)
                                              </Option>
                                              <Option
                                                value="pt-BR"
                                              >
                                                Portuguese (Brazil)
                                              </Option>
                                              <Option
                                                value="bg"
                                              >
                                                Bulgarian
                                              </Option>
                                              <Option
                                                value="ca"
                                              >
                                                Catalan
                                              </Option>
                                              <Option
                                                value="chr"
                                              >
                                                Cherokee
                                              </Option>
                                              <Option
                                                value="hr"
                                              >
                                                Croatian
                                              </Option>
                                              <Option
                                                value="cs"
                                              >
                                                Czech
                                              </Option>
                                              <Option
                                                value="da"
                                              >
                                                Danish
                                              </Option>
                                              <Option
                                                value="nl"
                                              >
                                                Dutch
                                              </Option>
                                              <Option
                                                value="en"
                                              >
                                                English (US)
                                              </Option>
                                              <Option
                                                value="et"
                                              >
                                                Estonian
                                              </Option>
                                              <Option
                                                value="fil"
                                              >
                                                Filipino
                                              </Option>
                                              <Option
                                                value="fi"
                                              >
                                                Finnish
                                              </Option>
                                              <Option
                                                value="fr"
                                              >
                                                French
                                              </Option>
                                              <Option
                                                value="de"
                                              >
                                                German
                                              </Option>
                                              <Option
                                                value="el"
                                              >
                                                Greek
                                              </Option>
                                              <Option
                                                value="gu"
                                              >
                                                Gujarati
                                              </Option>
                                              <Option
                                                value="iw"
                                              >
                                                Hebrew
                                              </Option>
                                              <Option
                                                value="hi"
                                              >
                                                Hindi
                                              </Option>
                                              <Option
                                                value="hu"
                                              >
                                                Hungarian
                                              </Option>
                                              <Option
                                                value="is"
                                              >
                                                Icelandic
                                              </Option>
                                              <Option
                                                value="id"
                                              >
                                                Indonesian
                                              </Option>
                                              <Option
                                                value="it"
                                              >
                                                Italian
                                              </Option>
                                              <Option
                                                value="ja"
                                              >
                                                Japanese
                                              </Option>
                                              <Option
                                                value="kn"
                                              >
                                                Kannada
                                              </Option>
                                              <Option
                                                value="ko"
                                              >
                                                Korean
                                              </Option>
                                              <Option
                                                value="lv"
                                              >
                                                Latvian
                                              </Option>
                                              <Option
                                                value="lt"
                                              >
                                                Lithuanian
                                              </Option>
                                              <Option
                                                value="ms"
                                              >
                                                Malay
                                              </Option>
                                              <Option
                                                value="ml"
                                              >
                                                Malayalam
                                              </Option>
                                              <Option
                                                value="mr"
                                              >
                                                Marathi
                                              </Option>
                                              <Option
                                                value="no"
                                              >
                                                Norwegian
                                              </Option>
                                              <Option
                                                value="pl"
                                              >
                                                Polish
                                              </Option>
                                              <Option
                                                value="pt-PT"
                                              >
                                                Portuguese (Portugal)
                                              </Option>
                                              <Option
                                                value="ro"
                                              >
                                                Romanian
                                              </Option>
                                              <Option
                                                value="ru"
                                              >
                                                Russian
                                              </Option>
                                              <Option
                                                value="sr"
                                              >
                                                Serbian
                                              </Option>
                                              <Option
                                                value="zh-CN"
                                              >
                                                Chinese (PRC)
                                              </Option>
                                              <Option
                                                value="sk"
                                              >
                                                Slovak
                                              </Option>
                                              <Option
                                                value="sl"
                                              >
                                                Slovenian
                                              </Option>
                                              <Option
                                                value="es"
                                              >
                                                Spanish
                                              </Option>
                                              <Option
                                                value="sw"
                                              >
                                                Swahili
                                              </Option>
                                              <Option
                                                value="sv"
                                              >
                                                Swedish
                                              </Option>
                                              <Option
                                                value="ta"
                                              >
                                                Tamil
                                              </Option>
                                              <Option
                                                value="te"
                                              >
                                                Telugu
                                              </Option>
                                              <Option
                                                value="th"
                                              >
                                                Thai
                                              </Option>
                                              <Option
                                                value="zh-TW"
                                              >
                                                Chinese (Taiwan)
                                              </Option>
                                              <Option
                                                value="tr"
                                              >
                                                Turkish
                                              </Option>
                                              <Option
                                                value="ur"
                                              >
                                                Urdu
                                              </Option>
                                              <Option
                                                value="uk"
                                              >
                                                Ukrainian
                                              </Option>
                                              <Option
                                                value="vi"
                                              >
                                                Vietnamese
                                              </Option>
                                              <Option
                                                value="cy"
                                              >
                                                Welsh
                                              </Option>
                                            </ForwardRef(InternalSelect)>
                                          }
                                        >
                                          <ForwardRef(InternalSelect)
                                            defaultValue="all"
                                            id="google-fact-check_language"
                                            onChange={[Function]}
                                          >
                                            <Select
                                              className="ant-select-in-form-item"
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue="all"
                                              dropdownClassName=""
                                              id="google-fact-check_language"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={24}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              placement="bottomLeft"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              transitionName="ant-slide-up"
                                            >
                                              <BaseSelect
                                                OptionList={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "OptionList",
                                                    "render": [Function],
                                                  }
                                                }
                                                activeDescendantId="google-fact-check_language_list_0"
                                                activeValue={null}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                displayValues={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": "0",
                                                      "label": "All",
                                                      "value": "all",
                                                    },
                                                  ]
                                                }
                                                dropdownClassName=""
                                                dropdownMatchSelectWidth={true}
                                                emptyOptions={false}
                                                id="google-fact-check_language"
                                                inputIcon={[Function]}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                omitDomProps={
                                                  Array [
                                                    "inputValue",
                                                  ]
                                                }
                                                onDisplayValuesChange={[Function]}
                                                onSearch={[Function]}
                                                onSearchSplit={[Function]}
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                transitionName="ant-slide-up"
                                              >
                                                <div
                                                  className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                >
                                                  <SelectTrigger
                                                    containerWidth={null}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    empty={false}
                                                    getTriggerDOMNode={[Function]}
                                                    onPopupMouseEnter={[Function]}
                                                    placement="bottomLeft"
                                                    popupElement={<ForwardRef(OptionList) />}
                                                    prefixCls="ant-select"
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <Trigger
                                                      action={Array []}
                                                      afterPopupVisibleChange={[Function]}
                                                      autoDestroy={false}
                                                      blurDelay={0.15}
                                                      builtinPlacements={
                                                        Object {
                                                          "bottomLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tl",
                                                              "bl",
                                                            ],
                                                          },
                                                          "bottomRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tr",
                                                              "br",
                                                            ],
                                                          },
                                                          "topLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "bl",
                                                              "tl",
                                                            ],
                                                          },
                                                          "topRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "br",
                                                              "tr",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      defaultPopupVisible={false}
                                                      destroyPopupOnHide={false}
                                                      focusDelay={0}
                                                      getDocument={[Function]}
                                                      getPopupClassNameFromAlign={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      hideAction={Array []}
                                                      mask={false}
                                                      maskClosable={true}
                                                      mouseEnterDelay={0}
                                                      mouseLeaveDelay={0.1}
                                                      onPopupAlign={[Function]}
                                                      onPopupVisibleChange={[Function]}
                                                      popup={
                                                        <div
                                                          onMouseEnter={[Function]}
                                                        >
                                                          <ForwardRef(OptionList) />
                                                        </div>
                                                      }
                                                      popupAlign={Object {}}
                                                      popupClassName=""
                                                      popupPlacement="bottomLeft"
                                                      popupStyle={
                                                        Object {
                                                          "minWidth": null,
                                                          "width": null,
                                                        }
                                                      }
                                                      popupTransitionName="ant-slide-up"
                                                      prefixCls="ant-select-dropdown"
                                                      showAction={Array []}
                                                    >
                                                      <Selector
                                                        OptionList={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "OptionList",
                                                            "render": [Function],
                                                          }
                                                        }
                                                        activeDescendantId="google-fact-check_language_list_0"
                                                        activeValue={null}
                                                        className="ant-select-in-form-item"
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        displayValues={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "0",
                                                              "label": "All",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="All"
                                                              >
                                                                All
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        emptyOptions={false}
                                                        id="google-fact-check_language"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        key="trigger"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        omitDomProps={
                                                          Array [
                                                            "inputValue",
                                                          ]
                                                        }
                                                        onDisplayValuesChange={[Function]}
                                                        onRemove={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSplit={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placement="bottomLeft"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "0",
                                                              "label": "All",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <div
                                                          className="ant-select-selector"
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SingleSelector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="google-fact-check_language_list_0"
                                                            activeValue={null}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            displayValues={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "0",
                                                                  "label": "All",
                                                                  "value": "all",
                                                                },
                                                              ]
                                                            }
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="google-fact-check_language_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="google-fact-check_language_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="google-fact-check_language_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="google-fact-check_language"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="All"
                                                                  >
                                                                    All
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={false}
                                                            id="google-fact-check_language"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />,
                                                              }
                                                            }
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onInputChange={[Function]}
                                                            onInputCompositionEnd={[Function]}
                                                            onInputCompositionStart={[Function]}
                                                            onInputKeyDown={[Function]}
                                                            onInputMouseDown={[Function]}
                                                            onInputPaste={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "0",
                                                                  "label": "All",
                                                                  "value": "all",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <span
                                                              className="ant-select-selection-search"
                                                            >
                                                              <Input
                                                                activeDescendantId="google-fact-check_language_list_0"
                                                                attrs={Object {}}
                                                                editable={false}
                                                                id="google-fact-check_language"
                                                                inputElement={null}
                                                                onChange={[Function]}
                                                                onCompositionEnd={[Function]}
                                                                onCompositionStart={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                prefixCls="ant-select"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autoComplete="off"
                                                                  className="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  readOnly={true}
                                                                  role="combobox"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </Input>
                                                            </span>
                                                            <span
                                                              className="ant-select-selection-item"
                                                              title="All"
                                                            >
                                                              All
                                                            </span>
                                                          </SingleSelector>
                                                        </div>
                                                      </Selector>
                                                    </Trigger>
                                                  </SelectTrigger>
                                                  <TransBtn
                                                    className="ant-select-arrow"
                                                    customizeIcon={[Function]}
                                                    customizeIconProps={
                                                      Object {
                                                        "focused": false,
                                                        "loading": undefined,
                                                        "open": undefined,
                                                        "searchValue": "",
                                                        "showSearch": false,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-arrow"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(DownOutlined)
                                                        className="ant-select-suffix"
                                                      >
                                                        <AntdIcon
                                                          className="ant-select-suffix"
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="down"
                                                            className="anticon anticon-down ant-select-suffix"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="down"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-down"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                  key="svg-down-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DownOutlined)>
                                                    </span>
                                                  </TransBtn>
                                                </div>
                                              </BaseSelect>
                                            </Select>
                                          </ForwardRef(InternalSelect)>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem>
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          role="row"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                            requiredMark={true}
                          />
                          <FormItemInput
                            errors={Array []}
                            name={Array []}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validating={false}
                            warnings={Array []}
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                role="cell"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </div>
                                <ErrorList
                                  className="ant-form-item-explain-connected"
                                  errors={Array []}
                                  helpStatus=""
                                  warnings={Array []}
                                >
                                  <CSSMotion
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionEnter={false}
                                    motionName="ant-show-help"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </ForwardRef(InternalForm)>
          </div>
        </Item>
        <Item
          className="ant-space-item"
          direction="vertical"
          index={1}
          key="ant-space-item-1"
          marginDirection="marginRight"
          wrap={false}
        >
          <div
            className="ant-space-item"
            style={Object {}}
          >
            <List
              bordered={true}
              className="google-fact-check-search-list"
              dataSource={
                Array [
                  Object {
                    "claimDate": "2020-09-08T02:48:10Z",
                    "claimReview": Array [
                      Object {
                        "languageCode": "en",
                        "publisher": Object {
                          "name": "BOOM",
                          "site": "boomlive.in",
                        },
                        "reviewDate": "2020-09-08T02:48:10Z",
                        "textualRating": "False",
                        "title": "Video From Saudi Arabia Shared As Russian Doctors Celebrating COVID-19 Vaccine",
                        "url": "https://www.boomlive.in/world/video-from-saudi-arabia-shared-as-russian-doctors-celebrating-covid-19-vaccine-9654",
                      },
                    ],
                    "claimant": "Facebook posts",
                    "text": "Video shows Russian doctors celebrating the new COVID-19 vaccine.",
                  },
                  Object {
                    "claimDate": "2021-02-21T00:00:00Z",
                    "claimReview": Array [
                      Object {
                        "languageCode": "en",
                        "publisher": Object {
                          "name": "BOOM",
                          "site": "boomlive.in",
                        },
                        "reviewDate": "2021-02-28T21:23:54Z",
                        "textualRating": "False",
                        "title": "Fact check: False claim that Pelosi travels weekly on 200-seat ...",
                        "url": "https://www.usatoday.com/story/news/factcheck/2021/02/28/fact-check-false-claim-pelosi-travels-weekly-200-seat-plane/6860043002/",
                      },
                    ],
                    "claimant": "social media users",
                    "text": "Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel",
                  },
                ]
              }
              itemLayout="vertical"
              loadMore={null}
              loading={true}
              renderItem={[Function]}
            >
              <div
                className="ant-list ant-list-vertical ant-list-split ant-list-bordered ant-list-loading google-fact-check-search-list"
              >
                <Spin
                  spinning={true}
                >
                  <Spin
                    size="default"
                    spinPrefixCls="ant-spin"
                    spinning={true}
                    wrapperClassName=""
                  >
                    <div
                      className="ant-spin-nested-loading"
                    >
                      <div
                        key="loading"
                      >
                        <div
                          aria-busy={true}
                          aria-live="polite"
                          className="ant-spin ant-spin-spinning"
                        >
                          <span
                            className="ant-spin-dot ant-spin-dot-spin"
                          >
                            <i
                              className="ant-spin-dot-item"
                            />
                            <i
                              className="ant-spin-dot-item"
                            />
                            <i
                              className="ant-spin-dot-item"
                            />
                            <i
                              className="ant-spin-dot-item"
                            />
                          </span>
                        </div>
                      </div>
                      <div
                        className="ant-spin-container ant-spin-blur"
                        key="container"
                      >
                        <ul
                          className="ant-list-items"
                        >
                          <ForwardRef(InternalItem)
                            key="Video shows Russian doctors celebrating the new COVID-19 vaccine."
                          >
                            <li
                              className="ant-list-item ant-list-item-no-flex"
                            >
                              <ForwardRef(Title)
                                level={5}
                              >
                                <ForwardRef
                                  component="h5"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h5"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h5
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Claim by Facebook posts:"
                                                width={0}
                                              >
                                                Claim by Facebook posts:
                                              </Ellipsis>
                                            </h5>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <ForwardRef(Title)
                                level={4}
                              >
                                <ForwardRef
                                  component="h4"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h4"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h4
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Video shows Russian doctors celebrating the new COVID-19 vaccine."
                                                width={0}
                                              >
                                                Video shows Russian doctors celebrating the new COVID-19 vaccine.
                                              </Ellipsis>
                                            </h4>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <Typography>
                                <article
                                  className="ant-typography"
                                >
                                  <b>
                                    BOOM
                                  </b>
                                   rating : 
                                  <b>
                                    False
                                  </b>
                                </article>
                              </Typography>
                              <a
                                href="https://www.boomlive.in/world/video-from-saudi-arabia-shared-as-russian-doctors-celebrating-covid-19-vaccine-9654"
                                target="blank"
                              >
                                Video From Saudi Arabia Shared As Russian Doctors Celebrating COVID-19 Vaccine
                              </a>
                            </li>
                          </ForwardRef(InternalItem)>
                          <ForwardRef(InternalItem)
                            key="Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel"
                          >
                            <li
                              className="ant-list-item ant-list-item-no-flex"
                            >
                              <ForwardRef(Title)
                                level={5}
                              >
                                <ForwardRef
                                  component="h5"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h5"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h5
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Claim by social media users:"
                                                width={0}
                                              >
                                                Claim by social media users:
                                              </Ellipsis>
                                            </h5>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <ForwardRef(Title)
                                level={4}
                              >
                                <ForwardRef
                                  component="h4"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h4"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h4
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel"
                                                width={0}
                                              >
                                                Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel
                                              </Ellipsis>
                                            </h4>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <Typography>
                                <article
                                  className="ant-typography"
                                >
                                  <b>
                                    BOOM
                                  </b>
                                   rating : 
                                  <b>
                                    False
                                  </b>
                                </article>
                              </Typography>
                              <a
                                href="https://www.usatoday.com/story/news/factcheck/2021/02/28/fact-check-false-claim-pelosi-travels-weekly-200-seat-plane/6860043002/"
                                target="blank"
                              >
                                Fact check: False claim that Pelosi travels weekly on 200-seat ...
                              </a>
                            </li>
                          </ForwardRef(InternalItem)>
                        </ul>
                      </div>
                    </div>
                  </Spin>
                </Spin>
              </div>
            </List>
          </div>
        </Item>
      </div>
    </Space>
  </GoogleFactCheck>
</Provider>
`;

exports[`GoogleFactCheck component snapshot testing should match when data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <GoogleFactCheck>
    <Space
      direction="vertical"
    >
      <div
        className="ant-space ant-space-vertical"
        style={Object {}}
      >
        <Item
          className="ant-space-item"
          direction="vertical"
          index={0}
          key="ant-space-item-0"
          marginDirection="marginRight"
          wrap={false}
        >
          <div
            className="ant-space-item"
            style={
              Object {
                "marginBottom": 8,
              }
            }
          >
            <ForwardRef(InternalForm)
              form={
                Object {
                  "__INTERNAL__": Object {
                    "itemRef": [Function],
                    "name": "google-fact-check",
                  },
                  "_init": true,
                  "getFieldError": [Function],
                  "getFieldInstance": [Function],
                  "getFieldValue": [Function],
                  "getFieldWarning": [Function],
                  "getFieldsError": [Function],
                  "getFieldsValue": [Function],
                  "getInternalHooks": [Function],
                  "isFieldTouched": [Function],
                  "isFieldValidating": [Function],
                  "isFieldsTouched": [Function],
                  "isFieldsValidating": [Function],
                  "resetFields": [Function],
                  "scrollToField": [Function],
                  "setFields": [Function],
                  "setFieldsValue": [Function],
                  "submit": [Function],
                  "validateFields": [Function],
                }
              }
              layout="inline"
              name="google-fact-check"
              onFinish={[Function]}
              style={
                Object {
                  "maxWidth": "100%",
                }
              }
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "google-fact-check",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="google-fact-check"
                  name="google-fact-check"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="google-fact-check"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <FormItem
                      label="Search"
                      name="query"
                      rules={
                        Array [
                          Object {
                            "message": "Please enter your search query!",
                            "required": true,
                          },
                        ]
                      }
                      style={
                        Object {
                          "width": "25%",
                        }
                      }
                    >
                      <WrapperField
                        label="Search"
                        messageVariables={
                          Object {
                            "label": "Search",
                          }
                        }
                        name="query"
                        onMetaChange={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter your search query!",
                              "required": true,
                            },
                          ]
                        }
                        style={
                          Object {
                            "width": "25%",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "google-fact-check",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_query"
                          label="Search"
                          messageVariables={
                            Object {
                              "label": "Search",
                            }
                          }
                          name={
                            Array [
                              "query",
                            ]
                          }
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter your search query!",
                                "required": true,
                              },
                            ]
                          }
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                            >
                              <FormItemLabel
                                htmlFor="google-fact-check_query"
                                label="Search"
                                name="query"
                                prefixCls="ant-form"
                                required={true}
                                requiredMark={true}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter your search query!",
                                      "required": true,
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                >
                                  <div
                                    className="ant-col ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className="ant-form-item-required"
                                      htmlFor="google-fact-check_query"
                                      title="Search"
                                    >
                                      Search
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Search"
                                name={Array []}
                                prefixCls="ant-form"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter your search query!",
                                      "required": true,
                                    },
                                  ]
                                }
                                status=""
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef
                                              placeholder="search fact checks"
                                            />
                                          }
                                        >
                                          <ForwardRef
                                            id="google-fact-check_query"
                                            onChange={[Function]}
                                            placeholder="search fact checks"
                                          >
                                            <ForwardRef
                                              affixWrapperClassName=""
                                              groupClassName=""
                                              id="google-fact-check_query"
                                              inputClassName=""
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="search fact checks"
                                              prefixCls="ant-input"
                                              wrapperClassName=""
                                            >
                                              <BaseInput
                                                affixWrapperClassName=""
                                                focused={false}
                                                groupClassName=""
                                                handleReset={[Function]}
                                                id="google-fact-check_query"
                                                inputElement={
                                                  <input
                                                    className="ant-input"
                                                    id="google-fact-check_query"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="search fact checks"
                                                    type="text"
                                                  />
                                                }
                                                placeholder="search fact checks"
                                                prefixCls="ant-input"
                                                suffix={null}
                                                triggerFocus={[Function]}
                                                value=""
                                                wrapperClassName=""
                                              >
                                                <input
                                                  className="ant-input"
                                                  id="google-fact-check_query"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="search fact checks"
                                                  type="text"
                                                  value=""
                                                />
                                              </BaseInput>
                                            </ForwardRef>
                                          </ForwardRef>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem
                      label="language"
                      name="language"
                      style={
                        Object {
                          "width": "25%",
                        }
                      }
                    >
                      <WrapperField
                        label="language"
                        messageVariables={
                          Object {
                            "label": "language",
                          }
                        }
                        name="language"
                        onMetaChange={[Function]}
                        style={
                          Object {
                            "width": "25%",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "google-fact-check",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_language"
                          label="language"
                          messageVariables={
                            Object {
                              "label": "language",
                            }
                          }
                          name={
                            Array [
                              "language",
                            ]
                          }
                          onMetaChange={[Function]}
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                            >
                              <FormItemLabel
                                htmlFor="google-fact-check_language"
                                label="language"
                                name="language"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                >
                                  <div
                                    className="ant-col ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="google-fact-check_language"
                                      title="language"
                                    >
                                      language
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="language"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef(InternalSelect)
                                              defaultValue="all"
                                            >
                                              <Option
                                                value="all"
                                              >
                                                All
                                              </Option>
                                              <Option
                                                value="am"
                                              >
                                                Amharic
                                              </Option>
                                              <Option
                                                value="ar"
                                              >
                                                Arabic
                                              </Option>
                                              <Option
                                                value="eu"
                                              >
                                                Basque
                                              </Option>
                                              <Option
                                                value="bn"
                                              >
                                                Bengali
                                              </Option>
                                              <Option
                                                value="en-GB"
                                              >
                                                English (UK)
                                              </Option>
                                              <Option
                                                value="pt-BR"
                                              >
                                                Portuguese (Brazil)
                                              </Option>
                                              <Option
                                                value="bg"
                                              >
                                                Bulgarian
                                              </Option>
                                              <Option
                                                value="ca"
                                              >
                                                Catalan
                                              </Option>
                                              <Option
                                                value="chr"
                                              >
                                                Cherokee
                                              </Option>
                                              <Option
                                                value="hr"
                                              >
                                                Croatian
                                              </Option>
                                              <Option
                                                value="cs"
                                              >
                                                Czech
                                              </Option>
                                              <Option
                                                value="da"
                                              >
                                                Danish
                                              </Option>
                                              <Option
                                                value="nl"
                                              >
                                                Dutch
                                              </Option>
                                              <Option
                                                value="en"
                                              >
                                                English (US)
                                              </Option>
                                              <Option
                                                value="et"
                                              >
                                                Estonian
                                              </Option>
                                              <Option
                                                value="fil"
                                              >
                                                Filipino
                                              </Option>
                                              <Option
                                                value="fi"
                                              >
                                                Finnish
                                              </Option>
                                              <Option
                                                value="fr"
                                              >
                                                French
                                              </Option>
                                              <Option
                                                value="de"
                                              >
                                                German
                                              </Option>
                                              <Option
                                                value="el"
                                              >
                                                Greek
                                              </Option>
                                              <Option
                                                value="gu"
                                              >
                                                Gujarati
                                              </Option>
                                              <Option
                                                value="iw"
                                              >
                                                Hebrew
                                              </Option>
                                              <Option
                                                value="hi"
                                              >
                                                Hindi
                                              </Option>
                                              <Option
                                                value="hu"
                                              >
                                                Hungarian
                                              </Option>
                                              <Option
                                                value="is"
                                              >
                                                Icelandic
                                              </Option>
                                              <Option
                                                value="id"
                                              >
                                                Indonesian
                                              </Option>
                                              <Option
                                                value="it"
                                              >
                                                Italian
                                              </Option>
                                              <Option
                                                value="ja"
                                              >
                                                Japanese
                                              </Option>
                                              <Option
                                                value="kn"
                                              >
                                                Kannada
                                              </Option>
                                              <Option
                                                value="ko"
                                              >
                                                Korean
                                              </Option>
                                              <Option
                                                value="lv"
                                              >
                                                Latvian
                                              </Option>
                                              <Option
                                                value="lt"
                                              >
                                                Lithuanian
                                              </Option>
                                              <Option
                                                value="ms"
                                              >
                                                Malay
                                              </Option>
                                              <Option
                                                value="ml"
                                              >
                                                Malayalam
                                              </Option>
                                              <Option
                                                value="mr"
                                              >
                                                Marathi
                                              </Option>
                                              <Option
                                                value="no"
                                              >
                                                Norwegian
                                              </Option>
                                              <Option
                                                value="pl"
                                              >
                                                Polish
                                              </Option>
                                              <Option
                                                value="pt-PT"
                                              >
                                                Portuguese (Portugal)
                                              </Option>
                                              <Option
                                                value="ro"
                                              >
                                                Romanian
                                              </Option>
                                              <Option
                                                value="ru"
                                              >
                                                Russian
                                              </Option>
                                              <Option
                                                value="sr"
                                              >
                                                Serbian
                                              </Option>
                                              <Option
                                                value="zh-CN"
                                              >
                                                Chinese (PRC)
                                              </Option>
                                              <Option
                                                value="sk"
                                              >
                                                Slovak
                                              </Option>
                                              <Option
                                                value="sl"
                                              >
                                                Slovenian
                                              </Option>
                                              <Option
                                                value="es"
                                              >
                                                Spanish
                                              </Option>
                                              <Option
                                                value="sw"
                                              >
                                                Swahili
                                              </Option>
                                              <Option
                                                value="sv"
                                              >
                                                Swedish
                                              </Option>
                                              <Option
                                                value="ta"
                                              >
                                                Tamil
                                              </Option>
                                              <Option
                                                value="te"
                                              >
                                                Telugu
                                              </Option>
                                              <Option
                                                value="th"
                                              >
                                                Thai
                                              </Option>
                                              <Option
                                                value="zh-TW"
                                              >
                                                Chinese (Taiwan)
                                              </Option>
                                              <Option
                                                value="tr"
                                              >
                                                Turkish
                                              </Option>
                                              <Option
                                                value="ur"
                                              >
                                                Urdu
                                              </Option>
                                              <Option
                                                value="uk"
                                              >
                                                Ukrainian
                                              </Option>
                                              <Option
                                                value="vi"
                                              >
                                                Vietnamese
                                              </Option>
                                              <Option
                                                value="cy"
                                              >
                                                Welsh
                                              </Option>
                                            </ForwardRef(InternalSelect)>
                                          }
                                        >
                                          <ForwardRef(InternalSelect)
                                            defaultValue="all"
                                            id="google-fact-check_language"
                                            onChange={[Function]}
                                          >
                                            <Select
                                              className="ant-select-in-form-item"
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue="all"
                                              dropdownClassName=""
                                              id="google-fact-check_language"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={24}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              placement="bottomLeft"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              transitionName="ant-slide-up"
                                            >
                                              <BaseSelect
                                                OptionList={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "OptionList",
                                                    "render": [Function],
                                                  }
                                                }
                                                activeDescendantId="google-fact-check_language_list_0"
                                                activeValue={null}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                displayValues={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": "0",
                                                      "label": "All",
                                                      "value": "all",
                                                    },
                                                  ]
                                                }
                                                dropdownClassName=""
                                                dropdownMatchSelectWidth={true}
                                                emptyOptions={false}
                                                id="google-fact-check_language"
                                                inputIcon={[Function]}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                omitDomProps={
                                                  Array [
                                                    "inputValue",
                                                  ]
                                                }
                                                onDisplayValuesChange={[Function]}
                                                onSearch={[Function]}
                                                onSearchSplit={[Function]}
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                transitionName="ant-slide-up"
                                              >
                                                <div
                                                  className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                >
                                                  <SelectTrigger
                                                    containerWidth={null}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    empty={false}
                                                    getTriggerDOMNode={[Function]}
                                                    onPopupMouseEnter={[Function]}
                                                    placement="bottomLeft"
                                                    popupElement={<ForwardRef(OptionList) />}
                                                    prefixCls="ant-select"
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <Trigger
                                                      action={Array []}
                                                      afterPopupVisibleChange={[Function]}
                                                      autoDestroy={false}
                                                      blurDelay={0.15}
                                                      builtinPlacements={
                                                        Object {
                                                          "bottomLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tl",
                                                              "bl",
                                                            ],
                                                          },
                                                          "bottomRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tr",
                                                              "br",
                                                            ],
                                                          },
                                                          "topLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "bl",
                                                              "tl",
                                                            ],
                                                          },
                                                          "topRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "br",
                                                              "tr",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      defaultPopupVisible={false}
                                                      destroyPopupOnHide={false}
                                                      focusDelay={0}
                                                      getDocument={[Function]}
                                                      getPopupClassNameFromAlign={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      hideAction={Array []}
                                                      mask={false}
                                                      maskClosable={true}
                                                      mouseEnterDelay={0}
                                                      mouseLeaveDelay={0.1}
                                                      onPopupAlign={[Function]}
                                                      onPopupVisibleChange={[Function]}
                                                      popup={
                                                        <div
                                                          onMouseEnter={[Function]}
                                                        >
                                                          <ForwardRef(OptionList) />
                                                        </div>
                                                      }
                                                      popupAlign={Object {}}
                                                      popupClassName=""
                                                      popupPlacement="bottomLeft"
                                                      popupStyle={
                                                        Object {
                                                          "minWidth": null,
                                                          "width": null,
                                                        }
                                                      }
                                                      popupTransitionName="ant-slide-up"
                                                      prefixCls="ant-select-dropdown"
                                                      showAction={Array []}
                                                    >
                                                      <Selector
                                                        OptionList={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "OptionList",
                                                            "render": [Function],
                                                          }
                                                        }
                                                        activeDescendantId="google-fact-check_language_list_0"
                                                        activeValue={null}
                                                        className="ant-select-in-form-item"
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        displayValues={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "0",
                                                              "label": "All",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="All"
                                                              >
                                                                All
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        emptyOptions={false}
                                                        id="google-fact-check_language"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        key="trigger"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        omitDomProps={
                                                          Array [
                                                            "inputValue",
                                                          ]
                                                        }
                                                        onDisplayValuesChange={[Function]}
                                                        onRemove={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSplit={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placement="bottomLeft"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "0",
                                                              "label": "All",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <div
                                                          className="ant-select-selector"
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SingleSelector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="google-fact-check_language_list_0"
                                                            activeValue={null}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            displayValues={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "0",
                                                                  "label": "All",
                                                                  "value": "all",
                                                                },
                                                              ]
                                                            }
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="google-fact-check_language_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="google-fact-check_language_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="google-fact-check_language_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="google-fact-check_language"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="All"
                                                                  >
                                                                    All
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={false}
                                                            id="google-fact-check_language"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />,
                                                              }
                                                            }
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onInputChange={[Function]}
                                                            onInputCompositionEnd={[Function]}
                                                            onInputCompositionStart={[Function]}
                                                            onInputKeyDown={[Function]}
                                                            onInputMouseDown={[Function]}
                                                            onInputPaste={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "0",
                                                                  "label": "All",
                                                                  "value": "all",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <span
                                                              className="ant-select-selection-search"
                                                            >
                                                              <Input
                                                                activeDescendantId="google-fact-check_language_list_0"
                                                                attrs={Object {}}
                                                                editable={false}
                                                                id="google-fact-check_language"
                                                                inputElement={null}
                                                                onChange={[Function]}
                                                                onCompositionEnd={[Function]}
                                                                onCompositionStart={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                prefixCls="ant-select"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autoComplete="off"
                                                                  className="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  readOnly={true}
                                                                  role="combobox"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </Input>
                                                            </span>
                                                            <span
                                                              className="ant-select-selection-item"
                                                              title="All"
                                                            >
                                                              All
                                                            </span>
                                                          </SingleSelector>
                                                        </div>
                                                      </Selector>
                                                    </Trigger>
                                                  </SelectTrigger>
                                                  <TransBtn
                                                    className="ant-select-arrow"
                                                    customizeIcon={[Function]}
                                                    customizeIconProps={
                                                      Object {
                                                        "focused": false,
                                                        "loading": undefined,
                                                        "open": undefined,
                                                        "searchValue": "",
                                                        "showSearch": false,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-arrow"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(DownOutlined)
                                                        className="ant-select-suffix"
                                                      >
                                                        <AntdIcon
                                                          className="ant-select-suffix"
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="down"
                                                            className="anticon anticon-down ant-select-suffix"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="down"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-down"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                  key="svg-down-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DownOutlined)>
                                                    </span>
                                                  </TransBtn>
                                                </div>
                                              </BaseSelect>
                                            </Select>
                                          </ForwardRef(InternalSelect)>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem>
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          role="row"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                            requiredMark={true}
                          />
                          <FormItemInput
                            errors={Array []}
                            name={Array []}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validating={false}
                            warnings={Array []}
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                role="cell"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </div>
                                <ErrorList
                                  className="ant-form-item-explain-connected"
                                  errors={Array []}
                                  helpStatus=""
                                  warnings={Array []}
                                >
                                  <CSSMotion
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionEnter={false}
                                    motionName="ant-show-help"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </ForwardRef(InternalForm)>
          </div>
        </Item>
        <Item
          className="ant-space-item"
          direction="vertical"
          index={1}
          key="ant-space-item-1"
          marginDirection="marginRight"
          wrap={false}
        >
          <div
            className="ant-space-item"
            style={Object {}}
          >
            <List
              bordered={true}
              className="google-fact-check-search-list"
              dataSource={
                Array [
                  Object {
                    "claimDate": "2020-09-08T02:48:10Z",
                    "claimReview": Array [
                      Object {
                        "languageCode": "en",
                        "publisher": Object {
                          "name": "BOOM",
                          "site": "boomlive.in",
                        },
                        "reviewDate": "2020-09-08T02:48:10Z",
                        "textualRating": "False",
                        "title": "Video From Saudi Arabia Shared As Russian Doctors Celebrating COVID-19 Vaccine",
                        "url": "https://www.boomlive.in/world/video-from-saudi-arabia-shared-as-russian-doctors-celebrating-covid-19-vaccine-9654",
                      },
                    ],
                    "claimant": "Facebook posts",
                    "text": "Video shows Russian doctors celebrating the new COVID-19 vaccine.",
                  },
                  Object {
                    "claimDate": "2021-02-21T00:00:00Z",
                    "claimReview": Array [
                      Object {
                        "languageCode": "en",
                        "publisher": Object {
                          "name": "BOOM",
                          "site": "boomlive.in",
                        },
                        "reviewDate": "2021-02-28T21:23:54Z",
                        "textualRating": "False",
                        "title": "Fact check: False claim that Pelosi travels weekly on 200-seat ...",
                        "url": "https://www.usatoday.com/story/news/factcheck/2021/02/28/fact-check-false-claim-pelosi-travels-weekly-200-seat-plane/6860043002/",
                      },
                    ],
                    "claimant": "social media users",
                    "text": "Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel",
                  },
                ]
              }
              itemLayout="vertical"
              loadMore={
                <div
                  style={
                    Object {
                      "float": "right",
                      "paddingBlock": "10px",
                    }
                  }
                >
                  <Space
                    direction="horizontal"
                  >
                    <ForwardRef(InternalButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      Back
                    </ForwardRef(InternalButton)>
                    <ForwardRef(InternalButton)
                      disabled={false}
                      onClick={[Function]}
                    >
                      Next
                    </ForwardRef(InternalButton)>
                  </Space>
                </div>
              }
              loading={false}
              renderItem={[Function]}
            >
              <div
                className="ant-list ant-list-vertical ant-list-split ant-list-bordered ant-list-something-after-last-item google-fact-check-search-list"
              >
                <Spin
                  spinning={false}
                >
                  <Spin
                    size="default"
                    spinPrefixCls="ant-spin"
                    spinning={false}
                    wrapperClassName=""
                  >
                    <div
                      className="ant-spin-nested-loading"
                    >
                      <div
                        className="ant-spin-container"
                        key="container"
                      >
                        <ul
                          className="ant-list-items"
                        >
                          <ForwardRef(InternalItem)
                            key="Video shows Russian doctors celebrating the new COVID-19 vaccine."
                          >
                            <li
                              className="ant-list-item ant-list-item-no-flex"
                            >
                              <ForwardRef(Title)
                                level={5}
                              >
                                <ForwardRef
                                  component="h5"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h5"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h5
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Claim by Facebook posts:"
                                                width={0}
                                              >
                                                Claim by Facebook posts:
                                              </Ellipsis>
                                            </h5>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <ForwardRef(Title)
                                level={4}
                              >
                                <ForwardRef
                                  component="h4"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h4"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h4
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Video shows Russian doctors celebrating the new COVID-19 vaccine."
                                                width={0}
                                              >
                                                Video shows Russian doctors celebrating the new COVID-19 vaccine.
                                              </Ellipsis>
                                            </h4>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <Typography>
                                <article
                                  className="ant-typography"
                                >
                                  <b>
                                    BOOM
                                  </b>
                                   rating : 
                                  <b>
                                    False
                                  </b>
                                </article>
                              </Typography>
                              <a
                                href="https://www.boomlive.in/world/video-from-saudi-arabia-shared-as-russian-doctors-celebrating-covid-19-vaccine-9654"
                                target="blank"
                              >
                                Video From Saudi Arabia Shared As Russian Doctors Celebrating COVID-19 Vaccine
                              </a>
                            </li>
                          </ForwardRef(InternalItem)>
                          <ForwardRef(InternalItem)
                            key="Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel"
                          >
                            <li
                              className="ant-list-item ant-list-item-no-flex"
                            >
                              <ForwardRef(Title)
                                level={5}
                              >
                                <ForwardRef
                                  component="h5"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h5"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h5
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Claim by social media users:"
                                                width={0}
                                              >
                                                Claim by social media users:
                                              </Ellipsis>
                                            </h5>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <ForwardRef(Title)
                                level={4}
                              >
                                <ForwardRef
                                  component="h4"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h4"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h4
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel"
                                                width={0}
                                              >
                                                Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel
                                              </Ellipsis>
                                            </h4>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <Typography>
                                <article
                                  className="ant-typography"
                                >
                                  <b>
                                    BOOM
                                  </b>
                                   rating : 
                                  <b>
                                    False
                                  </b>
                                </article>
                              </Typography>
                              <a
                                href="https://www.usatoday.com/story/news/factcheck/2021/02/28/fact-check-false-claim-pelosi-travels-weekly-200-seat-plane/6860043002/"
                                target="blank"
                              >
                                Fact check: False claim that Pelosi travels weekly on 200-seat ...
                              </a>
                            </li>
                          </ForwardRef(InternalItem)>
                        </ul>
                      </div>
                    </div>
                  </Spin>
                </Spin>
                <div
                  style={
                    Object {
                      "float": "right",
                      "paddingBlock": "10px",
                    }
                  }
                >
                  <Space
                    direction="horizontal"
                  >
                    <div
                      className="ant-space ant-space-horizontal ant-space-align-center"
                      style={Object {}}
                    >
                      <Item
                        className="ant-space-item"
                        direction="horizontal"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={
                            Object {
                              "marginRight": 8,
                            }
                          }
                        >
                          <Button
                            disabled={true}
                            onClick={[Function]}
                          >
                            <Wave
                              disabled={false}
                            >
                              <button
                                className="ant-btn ant-btn-default"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <LoadingIcon
                                  existIcon={false}
                                  loading={false}
                                  prefixCls="ant-btn"
                                >
                                  <CSSMotion
                                    motionName="ant-btn-loading-icon-motion"
                                    onAppearActive={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </LoadingIcon>
                                <span
                                  key=".0"
                                >
                                  Back
                                </span>
                              </button>
                            </Wave>
                          </Button>
                        </div>
                      </Item>
                      <Item
                        className="ant-space-item"
                        direction="horizontal"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Button
                            disabled={false}
                            onClick={[Function]}
                          >
                            <Wave
                              disabled={false}
                            >
                              <button
                                className="ant-btn ant-btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                <LoadingIcon
                                  existIcon={false}
                                  loading={false}
                                  prefixCls="ant-btn"
                                >
                                  <CSSMotion
                                    motionName="ant-btn-loading-icon-motion"
                                    onAppearActive={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </LoadingIcon>
                                <span
                                  key=".0"
                                >
                                  Next
                                </span>
                              </button>
                            </Wave>
                          </Button>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </div>
              </div>
            </List>
          </div>
        </Item>
      </div>
    </Space>
  </GoogleFactCheck>
</Provider>
`;

exports[`GoogleFactCheck component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <GoogleFactCheck>
    <Space
      direction="vertical"
    >
      <div
        className="ant-space ant-space-vertical"
        style={Object {}}
      >
        <Item
          className="ant-space-item"
          direction="vertical"
          index={0}
          key="ant-space-item-0"
          marginDirection="marginRight"
          wrap={false}
        >
          <div
            className="ant-space-item"
            style={
              Object {
                "marginBottom": 8,
              }
            }
          >
            <ForwardRef(InternalForm)
              form={
                Object {
                  "__INTERNAL__": Object {
                    "itemRef": [Function],
                    "name": "google-fact-check",
                  },
                  "_init": true,
                  "getFieldError": [Function],
                  "getFieldInstance": [Function],
                  "getFieldValue": [Function],
                  "getFieldWarning": [Function],
                  "getFieldsError": [Function],
                  "getFieldsValue": [Function],
                  "getInternalHooks": [Function],
                  "isFieldTouched": [Function],
                  "isFieldValidating": [Function],
                  "isFieldsTouched": [Function],
                  "isFieldsValidating": [Function],
                  "resetFields": [Function],
                  "scrollToField": [Function],
                  "setFields": [Function],
                  "setFieldsValue": [Function],
                  "submit": [Function],
                  "validateFields": [Function],
                }
              }
              layout="inline"
              name="google-fact-check"
              onFinish={[Function]}
              style={
                Object {
                  "maxWidth": "100%",
                }
              }
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "google-fact-check",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="google-fact-check"
                  name="google-fact-check"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="google-fact-check"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <FormItem
                      label="Search"
                      name="query"
                      rules={
                        Array [
                          Object {
                            "message": "Please enter your search query!",
                            "required": true,
                          },
                        ]
                      }
                      style={
                        Object {
                          "width": "25%",
                        }
                      }
                    >
                      <WrapperField
                        label="Search"
                        messageVariables={
                          Object {
                            "label": "Search",
                          }
                        }
                        name="query"
                        onMetaChange={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter your search query!",
                              "required": true,
                            },
                          ]
                        }
                        style={
                          Object {
                            "width": "25%",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "google-fact-check",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_query"
                          label="Search"
                          messageVariables={
                            Object {
                              "label": "Search",
                            }
                          }
                          name={
                            Array [
                              "query",
                            ]
                          }
                          onMetaChange={[Function]}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter your search query!",
                                "required": true,
                              },
                            ]
                          }
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                            >
                              <FormItemLabel
                                htmlFor="google-fact-check_query"
                                label="Search"
                                name="query"
                                prefixCls="ant-form"
                                required={true}
                                requiredMark={true}
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter your search query!",
                                      "required": true,
                                    },
                                  ]
                                }
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                >
                                  <div
                                    className="ant-col ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className="ant-form-item-required"
                                      htmlFor="google-fact-check_query"
                                      title="Search"
                                    >
                                      Search
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="Search"
                                name={Array []}
                                prefixCls="ant-form"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter your search query!",
                                      "required": true,
                                    },
                                  ]
                                }
                                status=""
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef
                                              placeholder="search fact checks"
                                            />
                                          }
                                        >
                                          <ForwardRef
                                            id="google-fact-check_query"
                                            onChange={[Function]}
                                            placeholder="search fact checks"
                                          >
                                            <ForwardRef
                                              affixWrapperClassName=""
                                              groupClassName=""
                                              id="google-fact-check_query"
                                              inputClassName=""
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              placeholder="search fact checks"
                                              prefixCls="ant-input"
                                              wrapperClassName=""
                                            >
                                              <BaseInput
                                                affixWrapperClassName=""
                                                focused={false}
                                                groupClassName=""
                                                handleReset={[Function]}
                                                id="google-fact-check_query"
                                                inputElement={
                                                  <input
                                                    className="ant-input"
                                                    id="google-fact-check_query"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="search fact checks"
                                                    type="text"
                                                  />
                                                }
                                                placeholder="search fact checks"
                                                prefixCls="ant-input"
                                                suffix={null}
                                                triggerFocus={[Function]}
                                                value=""
                                                wrapperClassName=""
                                              >
                                                <input
                                                  className="ant-input"
                                                  id="google-fact-check_query"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="search fact checks"
                                                  type="text"
                                                  value=""
                                                />
                                              </BaseInput>
                                            </ForwardRef>
                                          </ForwardRef>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem
                      label="language"
                      name="language"
                      style={
                        Object {
                          "width": "25%",
                        }
                      }
                    >
                      <WrapperField
                        label="language"
                        messageVariables={
                          Object {
                            "label": "language",
                          }
                        }
                        name="language"
                        onMetaChange={[Function]}
                        style={
                          Object {
                            "width": "25%",
                          }
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "google-fact-check",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_language"
                          label="language"
                          messageVariables={
                            Object {
                              "label": "language",
                            }
                          }
                          name={
                            Array [
                              "language",
                            ]
                          }
                          onMetaChange={[Function]}
                          style={
                            Object {
                              "width": "25%",
                            }
                          }
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <Row
                            className="ant-form-item"
                            key="row"
                            style={
                              Object {
                                "width": "25%",
                              }
                            }
                          >
                            <div
                              className="ant-row ant-form-item"
                              role="row"
                              style={
                                Object {
                                  "width": "25%",
                                }
                              }
                            >
                              <FormItemLabel
                                htmlFor="google-fact-check_language"
                                label="language"
                                name="language"
                                prefixCls="ant-form"
                                required={false}
                                requiredMark={true}
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                              >
                                <Col
                                  className="ant-form-item-label"
                                >
                                  <div
                                    className="ant-col ant-form-item-label"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <label
                                      className=""
                                      htmlFor="google-fact-check_language"
                                      title="language"
                                    >
                                      language
                                    </label>
                                  </div>
                                </Col>
                              </FormItemLabel>
                              <FormItemInput
                                errors={Array []}
                                label="language"
                                name={Array []}
                                prefixCls="ant-form"
                                status=""
                                style={
                                  Object {
                                    "width": "25%",
                                  }
                                }
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    role="cell"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Component
                                          update={
                                            <ForwardRef(InternalSelect)
                                              defaultValue="all"
                                            >
                                              <Option
                                                value="all"
                                              >
                                                All
                                              </Option>
                                              <Option
                                                value="am"
                                              >
                                                Amharic
                                              </Option>
                                              <Option
                                                value="ar"
                                              >
                                                Arabic
                                              </Option>
                                              <Option
                                                value="eu"
                                              >
                                                Basque
                                              </Option>
                                              <Option
                                                value="bn"
                                              >
                                                Bengali
                                              </Option>
                                              <Option
                                                value="en-GB"
                                              >
                                                English (UK)
                                              </Option>
                                              <Option
                                                value="pt-BR"
                                              >
                                                Portuguese (Brazil)
                                              </Option>
                                              <Option
                                                value="bg"
                                              >
                                                Bulgarian
                                              </Option>
                                              <Option
                                                value="ca"
                                              >
                                                Catalan
                                              </Option>
                                              <Option
                                                value="chr"
                                              >
                                                Cherokee
                                              </Option>
                                              <Option
                                                value="hr"
                                              >
                                                Croatian
                                              </Option>
                                              <Option
                                                value="cs"
                                              >
                                                Czech
                                              </Option>
                                              <Option
                                                value="da"
                                              >
                                                Danish
                                              </Option>
                                              <Option
                                                value="nl"
                                              >
                                                Dutch
                                              </Option>
                                              <Option
                                                value="en"
                                              >
                                                English (US)
                                              </Option>
                                              <Option
                                                value="et"
                                              >
                                                Estonian
                                              </Option>
                                              <Option
                                                value="fil"
                                              >
                                                Filipino
                                              </Option>
                                              <Option
                                                value="fi"
                                              >
                                                Finnish
                                              </Option>
                                              <Option
                                                value="fr"
                                              >
                                                French
                                              </Option>
                                              <Option
                                                value="de"
                                              >
                                                German
                                              </Option>
                                              <Option
                                                value="el"
                                              >
                                                Greek
                                              </Option>
                                              <Option
                                                value="gu"
                                              >
                                                Gujarati
                                              </Option>
                                              <Option
                                                value="iw"
                                              >
                                                Hebrew
                                              </Option>
                                              <Option
                                                value="hi"
                                              >
                                                Hindi
                                              </Option>
                                              <Option
                                                value="hu"
                                              >
                                                Hungarian
                                              </Option>
                                              <Option
                                                value="is"
                                              >
                                                Icelandic
                                              </Option>
                                              <Option
                                                value="id"
                                              >
                                                Indonesian
                                              </Option>
                                              <Option
                                                value="it"
                                              >
                                                Italian
                                              </Option>
                                              <Option
                                                value="ja"
                                              >
                                                Japanese
                                              </Option>
                                              <Option
                                                value="kn"
                                              >
                                                Kannada
                                              </Option>
                                              <Option
                                                value="ko"
                                              >
                                                Korean
                                              </Option>
                                              <Option
                                                value="lv"
                                              >
                                                Latvian
                                              </Option>
                                              <Option
                                                value="lt"
                                              >
                                                Lithuanian
                                              </Option>
                                              <Option
                                                value="ms"
                                              >
                                                Malay
                                              </Option>
                                              <Option
                                                value="ml"
                                              >
                                                Malayalam
                                              </Option>
                                              <Option
                                                value="mr"
                                              >
                                                Marathi
                                              </Option>
                                              <Option
                                                value="no"
                                              >
                                                Norwegian
                                              </Option>
                                              <Option
                                                value="pl"
                                              >
                                                Polish
                                              </Option>
                                              <Option
                                                value="pt-PT"
                                              >
                                                Portuguese (Portugal)
                                              </Option>
                                              <Option
                                                value="ro"
                                              >
                                                Romanian
                                              </Option>
                                              <Option
                                                value="ru"
                                              >
                                                Russian
                                              </Option>
                                              <Option
                                                value="sr"
                                              >
                                                Serbian
                                              </Option>
                                              <Option
                                                value="zh-CN"
                                              >
                                                Chinese (PRC)
                                              </Option>
                                              <Option
                                                value="sk"
                                              >
                                                Slovak
                                              </Option>
                                              <Option
                                                value="sl"
                                              >
                                                Slovenian
                                              </Option>
                                              <Option
                                                value="es"
                                              >
                                                Spanish
                                              </Option>
                                              <Option
                                                value="sw"
                                              >
                                                Swahili
                                              </Option>
                                              <Option
                                                value="sv"
                                              >
                                                Swedish
                                              </Option>
                                              <Option
                                                value="ta"
                                              >
                                                Tamil
                                              </Option>
                                              <Option
                                                value="te"
                                              >
                                                Telugu
                                              </Option>
                                              <Option
                                                value="th"
                                              >
                                                Thai
                                              </Option>
                                              <Option
                                                value="zh-TW"
                                              >
                                                Chinese (Taiwan)
                                              </Option>
                                              <Option
                                                value="tr"
                                              >
                                                Turkish
                                              </Option>
                                              <Option
                                                value="ur"
                                              >
                                                Urdu
                                              </Option>
                                              <Option
                                                value="uk"
                                              >
                                                Ukrainian
                                              </Option>
                                              <Option
                                                value="vi"
                                              >
                                                Vietnamese
                                              </Option>
                                              <Option
                                                value="cy"
                                              >
                                                Welsh
                                              </Option>
                                            </ForwardRef(InternalSelect)>
                                          }
                                        >
                                          <ForwardRef(InternalSelect)
                                            defaultValue="all"
                                            id="google-fact-check_language"
                                            onChange={[Function]}
                                          >
                                            <Select
                                              className="ant-select-in-form-item"
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue="all"
                                              dropdownClassName=""
                                              id="google-fact-check_language"
                                              inputIcon={[Function]}
                                              listHeight={256}
                                              listItemHeight={24}
                                              menuItemSelectedIcon={null}
                                              notFoundContent={
                                                <Context.Consumer>
                                                  [Function]
                                                </Context.Consumer>
                                              }
                                              onChange={[Function]}
                                              placement="bottomLeft"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              transitionName="ant-slide-up"
                                            >
                                              <BaseSelect
                                                OptionList={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "OptionList",
                                                    "render": [Function],
                                                  }
                                                }
                                                activeDescendantId="google-fact-check_language_list_0"
                                                activeValue={null}
                                                className="ant-select-in-form-item"
                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                displayValues={
                                                  Array [
                                                    Object {
                                                      "disabled": undefined,
                                                      "key": "0",
                                                      "label": "All",
                                                      "value": "all",
                                                    },
                                                  ]
                                                }
                                                dropdownClassName=""
                                                dropdownMatchSelectWidth={true}
                                                emptyOptions={false}
                                                id="google-fact-check_language"
                                                inputIcon={[Function]}
                                                notFoundContent={
                                                  <Context.Consumer>
                                                    [Function]
                                                  </Context.Consumer>
                                                }
                                                omitDomProps={
                                                  Array [
                                                    "inputValue",
                                                  ]
                                                }
                                                onDisplayValuesChange={[Function]}
                                                onSearch={[Function]}
                                                onSearchSplit={[Function]}
                                                placement="bottomLeft"
                                                prefixCls="ant-select"
                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                searchValue=""
                                                transitionName="ant-slide-up"
                                              >
                                                <div
                                                  className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                >
                                                  <SelectTrigger
                                                    containerWidth={null}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    empty={false}
                                                    getTriggerDOMNode={[Function]}
                                                    onPopupMouseEnter={[Function]}
                                                    placement="bottomLeft"
                                                    popupElement={<ForwardRef(OptionList) />}
                                                    prefixCls="ant-select"
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <Trigger
                                                      action={Array []}
                                                      afterPopupVisibleChange={[Function]}
                                                      autoDestroy={false}
                                                      blurDelay={0.15}
                                                      builtinPlacements={
                                                        Object {
                                                          "bottomLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tl",
                                                              "bl",
                                                            ],
                                                          },
                                                          "bottomRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "tr",
                                                              "br",
                                                            ],
                                                          },
                                                          "topLeft": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "bl",
                                                              "tl",
                                                            ],
                                                          },
                                                          "topRight": Object {
                                                            "offset": Array [
                                                              0,
                                                              -4,
                                                            ],
                                                            "overflow": Object {
                                                              "adjustX": 0,
                                                              "adjustY": 1,
                                                            },
                                                            "points": Array [
                                                              "br",
                                                              "tr",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      defaultPopupVisible={false}
                                                      destroyPopupOnHide={false}
                                                      focusDelay={0}
                                                      getDocument={[Function]}
                                                      getPopupClassNameFromAlign={[Function]}
                                                      getTriggerDOMNode={[Function]}
                                                      hideAction={Array []}
                                                      mask={false}
                                                      maskClosable={true}
                                                      mouseEnterDelay={0}
                                                      mouseLeaveDelay={0.1}
                                                      onPopupAlign={[Function]}
                                                      onPopupVisibleChange={[Function]}
                                                      popup={
                                                        <div
                                                          onMouseEnter={[Function]}
                                                        >
                                                          <ForwardRef(OptionList) />
                                                        </div>
                                                      }
                                                      popupAlign={Object {}}
                                                      popupClassName=""
                                                      popupPlacement="bottomLeft"
                                                      popupStyle={
                                                        Object {
                                                          "minWidth": null,
                                                          "width": null,
                                                        }
                                                      }
                                                      popupTransitionName="ant-slide-up"
                                                      prefixCls="ant-select-dropdown"
                                                      showAction={Array []}
                                                    >
                                                      <Selector
                                                        OptionList={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "displayName": "OptionList",
                                                            "render": [Function],
                                                          }
                                                        }
                                                        activeDescendantId="google-fact-check_language_list_0"
                                                        activeValue={null}
                                                        className="ant-select-in-form-item"
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        displayValues={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "0",
                                                              "label": "All",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="All"
                                                              >
                                                                All
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        emptyOptions={false}
                                                        id="google-fact-check_language"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        key="trigger"
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        omitDomProps={
                                                          Array [
                                                            "inputValue",
                                                          ]
                                                        }
                                                        onDisplayValuesChange={[Function]}
                                                        onRemove={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSplit={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onToggleOpen={[Function]}
                                                        placement="bottomLeft"
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "0",
                                                              "label": "All",
                                                              "value": "all",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <div
                                                          className="ant-select-selector"
                                                          onClick={[Function]}
                                                          onMouseDown={[Function]}
                                                        >
                                                          <SingleSelector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="google-fact-check_language_list_0"
                                                            activeValue={null}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            displayValues={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "0",
                                                                  "label": "All",
                                                                  "value": "all",
                                                                },
                                                              ]
                                                            }
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="google-fact-check_language_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="google-fact-check_language_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="google-fact-check_language_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="google-fact-check_language"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-item"
                                                                    title="All"
                                                                  >
                                                                    All
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={false}
                                                            id="google-fact-check_language"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            inputRef={
                                                              Object {
                                                                "current": <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />,
                                                              }
                                                            }
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onInputChange={[Function]}
                                                            onInputCompositionEnd={[Function]}
                                                            onInputCompositionStart={[Function]}
                                                            onInputKeyDown={[Function]}
                                                            onInputMouseDown={[Function]}
                                                            onInputPaste={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": "0",
                                                                  "label": "All",
                                                                  "value": "all",
                                                                },
                                                              ]
                                                            }
                                                          >
                                                            <span
                                                              className="ant-select-selection-search"
                                                            >
                                                              <Input
                                                                activeDescendantId="google-fact-check_language_list_0"
                                                                attrs={Object {}}
                                                                editable={false}
                                                                id="google-fact-check_language"
                                                                inputElement={null}
                                                                onChange={[Function]}
                                                                onCompositionEnd={[Function]}
                                                                onCompositionStart={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                prefixCls="ant-select"
                                                                value=""
                                                              >
                                                                <input
                                                                  aria-activedescendant="google-fact-check_language_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="google-fact-check_language_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="google-fact-check_language_list"
                                                                  autoComplete="off"
                                                                  className="ant-select-selection-search-input"
                                                                  id="google-fact-check_language"
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  readOnly={true}
                                                                  role="combobox"
                                                                  style={
                                                                    Object {
                                                                      "opacity": 0,
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </Input>
                                                            </span>
                                                            <span
                                                              className="ant-select-selection-item"
                                                              title="All"
                                                            >
                                                              All
                                                            </span>
                                                          </SingleSelector>
                                                        </div>
                                                      </Selector>
                                                    </Trigger>
                                                  </SelectTrigger>
                                                  <TransBtn
                                                    className="ant-select-arrow"
                                                    customizeIcon={[Function]}
                                                    customizeIconProps={
                                                      Object {
                                                        "focused": false,
                                                        "loading": undefined,
                                                        "open": undefined,
                                                        "searchValue": "",
                                                        "showSearch": false,
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-hidden={true}
                                                      className="ant-select-arrow"
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "WebkitUserSelect": "none",
                                                          "userSelect": "none",
                                                        }
                                                      }
                                                      unselectable="on"
                                                    >
                                                      <ForwardRef(DownOutlined)
                                                        className="ant-select-suffix"
                                                      >
                                                        <AntdIcon
                                                          className="ant-select-suffix"
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            aria-label="down"
                                                            className="anticon anticon-down ant-select-suffix"
                                                            role="img"
                                                          >
                                                            <IconReact
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                data-icon="down"
                                                                fill="currentColor"
                                                                focusable="false"
                                                                height="1em"
                                                                key="svg-down"
                                                                viewBox="64 64 896 896"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                  key="svg-down-svg-0"
                                                                />
                                                              </svg>
                                                            </IconReact>
                                                          </span>
                                                        </AntdIcon>
                                                      </ForwardRef(DownOutlined)>
                                                    </span>
                                                  </TransBtn>
                                                </div>
                                              </BaseSelect>
                                            </Select>
                                          </ForwardRef(InternalSelect)>
                                        </Component>
                                      </div>
                                    </div>
                                    <ErrorList
                                      className="ant-form-item-explain-connected"
                                      errors={Array []}
                                      helpStatus=""
                                      warnings={Array []}
                                    >
                                      <CSSMotion
                                        motionAppear={false}
                                        motionDeadline={500}
                                        motionEnter={false}
                                        motionName="ant-show-help"
                                        onAppearActive={[Function]}
                                        onAppearEnd={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterEnd={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveEnd={[Function]}
                                        onLeaveStart={[Function]}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </ErrorList>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </Field>
                      </WrapperField>
                    </FormItem>
                    <FormItem>
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          role="row"
                          style={Object {}}
                        >
                          <FormItemLabel
                            prefixCls="ant-form"
                            requiredMark={true}
                          />
                          <FormItemInput
                            errors={Array []}
                            name={Array []}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validating={false}
                            warnings={Array []}
                          >
                            <Col
                              className="ant-form-item-control"
                            >
                              <div
                                className="ant-col ant-form-item-control"
                                role="cell"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Button
                                      htmlType="submit"
                                      type="primary"
                                    >
                                      <Wave
                                        disabled={false}
                                      >
                                        <button
                                          className="ant-btn ant-btn-primary"
                                          onClick={[Function]}
                                          type="submit"
                                        >
                                          <LoadingIcon
                                            existIcon={false}
                                            loading={false}
                                            prefixCls="ant-btn"
                                          >
                                            <CSSMotion
                                              motionName="ant-btn-loading-icon-motion"
                                              onAppearActive={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveStart={[Function]}
                                              removeOnLeave={true}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </LoadingIcon>
                                          <span
                                            key=".0"
                                          >
                                            Submit
                                          </span>
                                        </button>
                                      </Wave>
                                    </Button>
                                  </div>
                                </div>
                                <ErrorList
                                  className="ant-form-item-explain-connected"
                                  errors={Array []}
                                  helpStatus=""
                                  warnings={Array []}
                                >
                                  <CSSMotion
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionEnter={false}
                                    motionName="ant-show-help"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </FormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </ForwardRef(InternalForm)>
          </div>
        </Item>
        <Item
          className="ant-space-item"
          direction="vertical"
          index={1}
          key="ant-space-item-1"
          marginDirection="marginRight"
          wrap={false}
        >
          <div
            className="ant-space-item"
            style={Object {}}
          >
            <List
              bordered={true}
              className="google-fact-check-search-list"
              dataSource={
                Array [
                  Object {
                    "claimDate": "2020-09-08T02:48:10Z",
                    "claimReview": Array [
                      Object {
                        "languageCode": "en",
                        "publisher": Object {
                          "name": "BOOM",
                          "site": "boomlive.in",
                        },
                        "reviewDate": "2020-09-08T02:48:10Z",
                        "textualRating": "False",
                        "title": "Video From Saudi Arabia Shared As Russian Doctors Celebrating COVID-19 Vaccine",
                        "url": "https://www.boomlive.in/world/video-from-saudi-arabia-shared-as-russian-doctors-celebrating-covid-19-vaccine-9654",
                      },
                    ],
                    "claimant": "Facebook posts",
                    "text": "Video shows Russian doctors celebrating the new COVID-19 vaccine.",
                  },
                  Object {
                    "claimDate": "2021-02-21T00:00:00Z",
                    "claimReview": Array [
                      Object {
                        "languageCode": "en",
                        "publisher": Object {
                          "name": "BOOM",
                          "site": "boomlive.in",
                        },
                        "reviewDate": "2021-02-28T21:23:54Z",
                        "textualRating": "False",
                        "title": "Fact check: False claim that Pelosi travels weekly on 200-seat ...",
                        "url": "https://www.usatoday.com/story/news/factcheck/2021/02/28/fact-check-false-claim-pelosi-travels-weekly-200-seat-plane/6860043002/",
                      },
                    ],
                    "claimant": "social media users",
                    "text": "Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel",
                  },
                ]
              }
              itemLayout="vertical"
              loadMore={
                <div
                  style={
                    Object {
                      "float": "right",
                      "paddingBlock": "10px",
                    }
                  }
                >
                  <Space
                    direction="horizontal"
                  >
                    <ForwardRef(InternalButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      Back
                    </ForwardRef(InternalButton)>
                    <ForwardRef(InternalButton)
                      disabled={false}
                      onClick={[Function]}
                    >
                      Next
                    </ForwardRef(InternalButton)>
                  </Space>
                </div>
              }
              loading={false}
              renderItem={[Function]}
            >
              <div
                className="ant-list ant-list-vertical ant-list-split ant-list-bordered ant-list-something-after-last-item google-fact-check-search-list"
              >
                <Spin
                  spinning={false}
                >
                  <Spin
                    size="default"
                    spinPrefixCls="ant-spin"
                    spinning={false}
                    wrapperClassName=""
                  >
                    <div
                      className="ant-spin-nested-loading"
                    >
                      <div
                        className="ant-spin-container"
                        key="container"
                      >
                        <ul
                          className="ant-list-items"
                        >
                          <ForwardRef(InternalItem)
                            key="Video shows Russian doctors celebrating the new COVID-19 vaccine."
                          >
                            <li
                              className="ant-list-item ant-list-item-no-flex"
                            >
                              <ForwardRef(Title)
                                level={5}
                              >
                                <ForwardRef
                                  component="h5"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h5"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h5
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Claim by Facebook posts:"
                                                width={0}
                                              >
                                                Claim by Facebook posts:
                                              </Ellipsis>
                                            </h5>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <ForwardRef(Title)
                                level={4}
                              >
                                <ForwardRef
                                  component="h4"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h4"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h4
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Video shows Russian doctors celebrating the new COVID-19 vaccine."
                                                width={0}
                                              >
                                                Video shows Russian doctors celebrating the new COVID-19 vaccine.
                                              </Ellipsis>
                                            </h4>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <Typography>
                                <article
                                  className="ant-typography"
                                >
                                  <b>
                                    BOOM
                                  </b>
                                   rating : 
                                  <b>
                                    False
                                  </b>
                                </article>
                              </Typography>
                              <a
                                href="https://www.boomlive.in/world/video-from-saudi-arabia-shared-as-russian-doctors-celebrating-covid-19-vaccine-9654"
                                target="blank"
                              >
                                Video From Saudi Arabia Shared As Russian Doctors Celebrating COVID-19 Vaccine
                              </a>
                            </li>
                          </ForwardRef(InternalItem)>
                          <ForwardRef(InternalItem)
                            key="Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel"
                          >
                            <li
                              className="ant-list-item ant-list-item-no-flex"
                            >
                              <ForwardRef(Title)
                                level={5}
                              >
                                <ForwardRef
                                  component="h5"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h5"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h5
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Claim by social media users:"
                                                width={0}
                                              >
                                                Claim by social media users:
                                              </Ellipsis>
                                            </h5>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <ForwardRef(Title)
                                level={4}
                              >
                                <ForwardRef
                                  component="h4"
                                >
                                  <ResizeObserver
                                    disabled={true}
                                    onResize={[Function]}
                                  >
                                    <SingleObserver
                                      disabled={true}
                                      key="rc-observer-key-0"
                                      onResize={[Function]}
                                    >
                                      <DomWrapper>
                                        <EllipsisTooltip
                                          enabledEllipsis={false}
                                          isEllipsis={false}
                                        >
                                          <Typography
                                            className=""
                                            component="h4"
                                            onClick={null}
                                            style={
                                              Object {
                                                "WebkitLineClamp": undefined,
                                              }
                                            }
                                          >
                                            <h4
                                              className="ant-typography"
                                              onClick={null}
                                              style={
                                                Object {
                                                  "WebkitLineClamp": undefined,
                                                }
                                              }
                                            >
                                              <Ellipsis
                                                enabledMeasure={false}
                                                onEllipsis={[Function]}
                                                rows={1}
                                                text="Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel"
                                                width={0}
                                              >
                                                Pelosi travels weekly to California on a 200-seat Boeing that costs millions annually in fuel
                                              </Ellipsis>
                                            </h4>
                                          </Typography>
                                        </EllipsisTooltip>
                                      </DomWrapper>
                                    </SingleObserver>
                                  </ResizeObserver>
                                </ForwardRef>
                              </ForwardRef(Title)>
                              <Typography>
                                <article
                                  className="ant-typography"
                                >
                                  <b>
                                    BOOM
                                  </b>
                                   rating : 
                                  <b>
                                    False
                                  </b>
                                </article>
                              </Typography>
                              <a
                                href="https://www.usatoday.com/story/news/factcheck/2021/02/28/fact-check-false-claim-pelosi-travels-weekly-200-seat-plane/6860043002/"
                                target="blank"
                              >
                                Fact check: False claim that Pelosi travels weekly on 200-seat ...
                              </a>
                            </li>
                          </ForwardRef(InternalItem)>
                        </ul>
                      </div>
                    </div>
                  </Spin>
                </Spin>
                <div
                  style={
                    Object {
                      "float": "right",
                      "paddingBlock": "10px",
                    }
                  }
                >
                  <Space
                    direction="horizontal"
                  >
                    <div
                      className="ant-space ant-space-horizontal ant-space-align-center"
                      style={Object {}}
                    >
                      <Item
                        className="ant-space-item"
                        direction="horizontal"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={
                            Object {
                              "marginRight": 8,
                            }
                          }
                        >
                          <Button
                            disabled={true}
                            onClick={[Function]}
                          >
                            <Wave
                              disabled={false}
                            >
                              <button
                                className="ant-btn ant-btn-default"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <LoadingIcon
                                  existIcon={false}
                                  loading={false}
                                  prefixCls="ant-btn"
                                >
                                  <CSSMotion
                                    motionName="ant-btn-loading-icon-motion"
                                    onAppearActive={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </LoadingIcon>
                                <span
                                  key=".0"
                                >
                                  Back
                                </span>
                              </button>
                            </Wave>
                          </Button>
                        </div>
                      </Item>
                      <Item
                        className="ant-space-item"
                        direction="horizontal"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Button
                            disabled={false}
                            onClick={[Function]}
                          >
                            <Wave
                              disabled={false}
                            >
                              <button
                                className="ant-btn ant-btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                <LoadingIcon
                                  existIcon={false}
                                  loading={false}
                                  prefixCls="ant-btn"
                                >
                                  <CSSMotion
                                    motionName="ant-btn-loading-icon-motion"
                                    onAppearActive={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </LoadingIcon>
                                <span
                                  key=".0"
                                >
                                  Next
                                </span>
                              </button>
                            </Wave>
                          </Button>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </div>
              </div>
            </List>
          </div>
        </Item>
      </div>
    </Space>
  </GoogleFactCheck>
</Provider>
`;
