// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ratings create component snapshot component should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CreateRating>
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
      title="Create Rating"
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        title="Create Rating"
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          title="Create Rating"
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <RatingForm
      onCreate={[Function]}
    >
      <ForwardRef(InternalForm)
        form={
          Object {
            "__INTERNAL__": Object {
              "itemRef": [Function],
              "name": "creat-rating",
            },
            "_init": true,
            "getFieldError": [Function],
            "getFieldInstance": [Function],
            "getFieldValue": [Function],
            "getFieldWarning": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        initialValues={Object {}}
        layout="vertical"
        name="creat-rating"
        onFinish={[Function]}
        onValuesChange={[Function]}
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-vertical"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "creat-rating",
                },
                "_init": true,
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldWarning": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="creat-rating"
            initialValues={Object {}}
            name="creat-rating"
            onFinish={[Function]}
            onFinishFailed={[Function]}
            onValuesChange={[Function]}
          >
            <form
              className="ant-form ant-form-vertical"
              id="creat-rating"
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <Row
                justify="center"
                style={
                  Object {
                    "margin": "0 auto",
                    "maxWidth": "1200px",
                    "width": "100%",
                  }
                }
              >
                <div
                  className="ant-row ant-row-center"
                  role="row"
                  style={
                    Object {
                      "margin": "0 auto",
                      "maxWidth": "1200px",
                      "width": "100%",
                    }
                  }
                >
                  <Col
                    span={24}
                  >
                    <div
                      className="ant-col ant-col-24"
                      role="cell"
                      style={Object {}}
                    >
                      <Row
                        gutter={40}
                        justify="end"
                      >
                        <div
                          className="ant-row ant-row-end"
                          role="row"
                          style={
                            Object {
                              "marginLeft": -20,
                              "marginRight": -20,
                            }
                          }
                        >
                          <FormItem>
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                role="row"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  prefixCls="ant-form"
                                  requiredMark={true}
                                />
                                <FormItemInput
                                  errors={Array []}
                                  name={Array []}
                                  prefixCls="ant-form"
                                  status=""
                                  touched={false}
                                  validating={false}
                                  warnings={Array []}
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      role="cell"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Space>
                                            <div
                                              className="ant-space ant-space-horizontal ant-space-align-center"
                                              style={Object {}}
                                            >
                                              <Item
                                                className="ant-space-item"
                                                direction="horizontal"
                                                index={0}
                                                key="ant-space-item-0"
                                                marginDirection="marginRight"
                                                wrap={false}
                                              >
                                                <div
                                                  className="ant-space-item"
                                                  style={
                                                    Object {
                                                      "marginRight": 8,
                                                    }
                                                  }
                                                >
                                                  <Button
                                                    htmlType="button"
                                                    onClick={[Function]}
                                                  >
                                                    <Wave
                                                      disabled={false}
                                                    >
                                                      <button
                                                        className="ant-btn ant-btn-default"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <CSSMotion
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Reset
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </Item>
                                              <Item
                                                className="ant-space-item"
                                                direction="horizontal"
                                                index={1}
                                                key="ant-space-item-1"
                                                marginDirection="marginRight"
                                                wrap={false}
                                              >
                                                <div
                                                  className="ant-space-item"
                                                  style={Object {}}
                                                >
                                                  <Button
                                                    disabled={true}
                                                    htmlType="submit"
                                                    type="primary"
                                                  >
                                                    <Wave
                                                      disabled={false}
                                                    >
                                                      <button
                                                        className="ant-btn ant-btn-primary"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        type="submit"
                                                      >
                                                        <LoadingIcon
                                                          existIcon={false}
                                                          loading={false}
                                                          prefixCls="ant-btn"
                                                        >
                                                          <CSSMotion
                                                            motionName="ant-btn-loading-icon-motion"
                                                            onAppearActive={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveStart={[Function]}
                                                            removeOnLeave={true}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </LoadingIcon>
                                                        <span
                                                          key=".0"
                                                        >
                                                          Submit
                                                        </span>
                                                      </button>
                                                    </Wave>
                                                  </Button>
                                                </div>
                                              </Item>
                                            </div>
                                          </Space>
                                        </div>
                                      </div>
                                      <ErrorList
                                        className="ant-form-item-explain-connected"
                                        errors={Array []}
                                        helpStatus=""
                                        warnings={Array []}
                                      >
                                        <CSSMotion
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionEnter={false}
                                          motionName="ant-show-help"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                        </div>
                      </Row>
                    </div>
                  </Col>
                  <Col
                    span={24}
                  >
                    <div
                      className="ant-col ant-col-24"
                      role="cell"
                      style={Object {}}
                    >
                      <Row
                        gutter={40}
                        justify="space-around"
                        style={
                          Object {
                            "background": "#f0f2f5",
                            "marginBottom": "1rem",
                            "padding": "1.25rem",
                          }
                        }
                      >
                        <div
                          className="ant-row ant-row-space-around"
                          role="row"
                          style={
                            Object {
                              "background": "#f0f2f5",
                              "marginBottom": "1rem",
                              "marginLeft": -20,
                              "marginRight": -20,
                              "padding": "1.25rem",
                            }
                          }
                        >
                          <Col
                            span={12}
                          >
                            <div
                              className="ant-col ant-col-12"
                              role="cell"
                              style={
                                Object {
                                  "paddingLeft": 20,
                                  "paddingRight": 20,
                                }
                              }
                            >
                              <TitleInput
                                label="Rating Name"
                                name="name"
                                onChange={[Function]}
                              >
                                <FormItem
                                  label="Rating Name"
                                  name="name"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter name!",
                                        "required": true,
                                      },
                                      Object {
                                        "max": 500,
                                        "message": "Name must be maximum 500 characters.",
                                      },
                                    ]
                                  }
                                >
                                  <WrapperField
                                    label="Rating Name"
                                    messageVariables={
                                      Object {
                                        "label": "Rating Name",
                                      }
                                    }
                                    name="name"
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter name!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 500,
                                          "message": "Name must be maximum 500 characters.",
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "creat-rating",
                                          },
                                          "_init": true,
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldWarning": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_name"
                                      label="Rating Name"
                                      messageVariables={
                                        Object {
                                          "label": "Rating Name",
                                        }
                                      }
                                      name={
                                        Array [
                                          "name",
                                        ]
                                      }
                                      onMetaChange={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please enter name!",
                                            "required": true,
                                          },
                                          Object {
                                            "max": 500,
                                            "message": "Name must be maximum 500 characters.",
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          role="row"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="creat-rating_name"
                                            label="Rating Name"
                                            name="name"
                                            prefixCls="ant-form"
                                            required={true}
                                            requiredMark={true}
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please enter name!",
                                                  "required": true,
                                                },
                                                Object {
                                                  "max": 500,
                                                  "message": "Name must be maximum 500 characters.",
                                                },
                                              ]
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-label"
                                            >
                                              <div
                                                className="ant-col ant-form-item-label"
                                                role="cell"
                                                style={Object {}}
                                              >
                                                <label
                                                  className="ant-form-item-required"
                                                  htmlFor="creat-rating_name"
                                                  title="Rating Name"
                                                >
                                                  Rating Name
                                                </label>
                                              </div>
                                            </Col>
                                          </FormItemLabel>
                                          <FormItemInput
                                            errors={Array []}
                                            label="Rating Name"
                                            name={Array []}
                                            prefixCls="ant-form"
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please enter name!",
                                                  "required": true,
                                                },
                                                Object {
                                                  "max": 500,
                                                  "message": "Name must be maximum 500 characters.",
                                                },
                                              ]
                                            }
                                            status=""
                                            touched={false}
                                            validating={false}
                                            warnings={Array []}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                role="cell"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={
                                                        <ForwardRef
                                                          onChange={[Function]}
                                                        />
                                                      }
                                                    >
                                                      <ForwardRef
                                                        id="creat-rating_name"
                                                        onChange={[Function]}
                                                      >
                                                        <ForwardRef
                                                          affixWrapperClassName=""
                                                          groupClassName=""
                                                          id="creat-rating_name"
                                                          inputClassName=""
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          prefixCls="ant-input"
                                                          wrapperClassName=""
                                                        >
                                                          <BaseInput
                                                            affixWrapperClassName=""
                                                            focused={false}
                                                            groupClassName=""
                                                            handleReset={[Function]}
                                                            id="creat-rating_name"
                                                            inputElement={
                                                              <input
                                                                className="ant-input"
                                                                id="creat-rating_name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="text"
                                                              />
                                                            }
                                                            prefixCls="ant-input"
                                                            suffix={null}
                                                            triggerFocus={[Function]}
                                                            value=""
                                                            wrapperClassName=""
                                                          >
                                                            <input
                                                              className="ant-input"
                                                              id="creat-rating_name"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                              value=""
                                                            />
                                                          </BaseInput>
                                                        </ForwardRef>
                                                      </ForwardRef>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  className="ant-form-item-explain-connected"
                                                  errors={Array []}
                                                  helpStatus=""
                                                  warnings={Array []}
                                                >
                                                  <CSSMotion
                                                    motionAppear={false}
                                                    motionDeadline={500}
                                                    motionEnter={false}
                                                    motionName="ant-show-help"
                                                    onAppearActive={[Function]}
                                                    onAppearEnd={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterEnd={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveEnd={[Function]}
                                                    onLeaveStart={[Function]}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </TitleInput>
                              <SlugInput>
                                <FormItem
                                  label="Slug"
                                  name="slug"
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please input the slug!",
                                        "required": true,
                                      },
                                      Object {
                                        "message": "Please enter valid slug!",
                                        "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                      },
                                    ]
                                  }
                                >
                                  <WrapperField
                                    label="Slug"
                                    messageVariables={
                                      Object {
                                        "label": "Slug",
                                      }
                                    }
                                    name="slug"
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please input the slug!",
                                          "required": true,
                                        },
                                        Object {
                                          "message": "Please enter valid slug!",
                                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "creat-rating",
                                          },
                                          "_init": true,
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldWarning": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_slug"
                                      label="Slug"
                                      messageVariables={
                                        Object {
                                          "label": "Slug",
                                        }
                                      }
                                      name={
                                        Array [
                                          "slug",
                                        ]
                                      }
                                      onMetaChange={[Function]}
                                      rules={
                                        Array [
                                          Object {
                                            "message": "Please input the slug!",
                                            "required": true,
                                          },
                                          Object {
                                            "message": "Please enter valid slug!",
                                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                          },
                                        ]
                                      }
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          role="row"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="creat-rating_slug"
                                            label="Slug"
                                            name="slug"
                                            prefixCls="ant-form"
                                            required={true}
                                            requiredMark={true}
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please input the slug!",
                                                  "required": true,
                                                },
                                                Object {
                                                  "message": "Please enter valid slug!",
                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                },
                                              ]
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-label"
                                            >
                                              <div
                                                className="ant-col ant-form-item-label"
                                                role="cell"
                                                style={Object {}}
                                              >
                                                <label
                                                  className="ant-form-item-required"
                                                  htmlFor="creat-rating_slug"
                                                  title="Slug"
                                                >
                                                  Slug
                                                </label>
                                              </div>
                                            </Col>
                                          </FormItemLabel>
                                          <FormItemInput
                                            errors={Array []}
                                            label="Slug"
                                            name={Array []}
                                            prefixCls="ant-form"
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please input the slug!",
                                                  "required": true,
                                                },
                                                Object {
                                                  "message": "Please enter valid slug!",
                                                  "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                                },
                                              ]
                                            }
                                            status=""
                                            touched={false}
                                            validating={false}
                                            warnings={Array []}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                role="cell"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={<ForwardRef />}
                                                    >
                                                      <ForwardRef
                                                        id="creat-rating_slug"
                                                        onChange={[Function]}
                                                      >
                                                        <ForwardRef
                                                          affixWrapperClassName=""
                                                          groupClassName=""
                                                          id="creat-rating_slug"
                                                          inputClassName=""
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          prefixCls="ant-input"
                                                          wrapperClassName=""
                                                        >
                                                          <BaseInput
                                                            affixWrapperClassName=""
                                                            focused={false}
                                                            groupClassName=""
                                                            handleReset={[Function]}
                                                            id="creat-rating_slug"
                                                            inputElement={
                                                              <input
                                                                className="ant-input"
                                                                id="creat-rating_slug"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="text"
                                                              />
                                                            }
                                                            prefixCls="ant-input"
                                                            suffix={null}
                                                            triggerFocus={[Function]}
                                                            value=""
                                                            wrapperClassName=""
                                                          >
                                                            <input
                                                              className="ant-input"
                                                              id="creat-rating_slug"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              type="text"
                                                              value=""
                                                            />
                                                          </BaseInput>
                                                        </ForwardRef>
                                                      </ForwardRef>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  className="ant-form-item-explain-connected"
                                                  errors={Array []}
                                                  helpStatus=""
                                                  warnings={Array []}
                                                >
                                                  <CSSMotion
                                                    motionAppear={false}
                                                    motionDeadline={500}
                                                    motionEnter={false}
                                                    motionName="ant-show-help"
                                                    onAppearActive={[Function]}
                                                    onAppearEnd={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterEnd={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveEnd={[Function]}
                                                    onLeaveStart={[Function]}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </SlugInput>
                              <FormItem
                                label="Numeric value"
                                name="numeric_value"
                                rules={
                                  Array [
                                    Object {
                                      "message": "Please enter the numeric value!",
                                      "required": true,
                                    },
                                  ]
                                }
                              >
                                <WrapperField
                                  label="Numeric value"
                                  messageVariables={
                                    Object {
                                      "label": "Numeric value",
                                    }
                                  }
                                  name="numeric_value"
                                  onMetaChange={[Function]}
                                  rules={
                                    Array [
                                      Object {
                                        "message": "Please enter the numeric value!",
                                        "required": true,
                                      },
                                    ]
                                  }
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "creat-rating",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_numeric_value"
                                    label="Numeric value"
                                    messageVariables={
                                      Object {
                                        "label": "Numeric value",
                                      }
                                    }
                                    name={
                                      Array [
                                        "numeric_value",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    rules={
                                      Array [
                                        Object {
                                          "message": "Please enter the numeric value!",
                                          "required": true,
                                        },
                                      ]
                                    }
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="creat-rating_numeric_value"
                                          label="Numeric value"
                                          name="numeric_value"
                                          prefixCls="ant-form"
                                          required={true}
                                          requiredMark={true}
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter the numeric value!",
                                                "required": true,
                                              },
                                            ]
                                          }
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className="ant-form-item-required"
                                                htmlFor="creat-rating_numeric_value"
                                                title="Numeric value"
                                              >
                                                Numeric value
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Numeric value"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please enter the numeric value!",
                                                "required": true,
                                              },
                                            ]
                                          }
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <ForwardRef
                                                        min={1}
                                                      />
                                                    }
                                                  >
                                                    <ForwardRef
                                                      id="creat-rating_numeric_value"
                                                      min={1}
                                                      onChange={[Function]}
                                                    >
                                                      <InputNumber
                                                        className="ant-input-number-in-form-item"
                                                        downHandler={
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-input-number-handler-down-inner"
                                                          />
                                                        }
                                                        id="creat-rating_numeric_value"
                                                        min={1}
                                                        onChange={[Function]}
                                                        prefixCls="ant-input-number"
                                                        upHandler={
                                                          <ForwardRef(UpOutlined)
                                                            className="ant-input-number-handler-up-inner"
                                                          />
                                                        }
                                                      >
                                                        <div
                                                          className="ant-input-number ant-input-number-in-form-item"
                                                          onBlur={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                        >
                                                          <StepHandler
                                                            downDisabled={false}
                                                            downNode={
                                                              <ForwardRef(DownOutlined)
                                                                className="ant-input-number-handler-down-inner"
                                                              />
                                                            }
                                                            onStep={[Function]}
                                                            prefixCls="ant-input-number"
                                                            upDisabled={false}
                                                            upNode={
                                                              <ForwardRef(UpOutlined)
                                                                className="ant-input-number-handler-up-inner"
                                                              />
                                                            }
                                                          >
                                                            <div
                                                              className="ant-input-number-handler-wrap"
                                                            >
                                                              <span
                                                                aria-disabled={false}
                                                                aria-label="Increase Value"
                                                                className="ant-input-number-handler ant-input-number-handler-up"
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                role="button"
                                                                unselectable="on"
                                                              >
                                                                <ForwardRef(UpOutlined)
                                                                  className="ant-input-number-handler-up-inner"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-input-number-handler-up-inner"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "up",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="up"
                                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "up",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          data-icon="up"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-up"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                                            key="svg-up-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(UpOutlined)>
                                                              </span>
                                                              <span
                                                                aria-disabled={false}
                                                                aria-label="Decrease Value"
                                                                className="ant-input-number-handler ant-input-number-handler-down"
                                                                onMouseDown={[Function]}
                                                                onMouseLeave={[Function]}
                                                                onMouseUp={[Function]}
                                                                role="button"
                                                                unselectable="on"
                                                              >
                                                                <ForwardRef(DownOutlined)
                                                                  className="ant-input-number-handler-down-inner"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-input-number-handler-down-inner"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "down",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="down"
                                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "down",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          data-icon="down"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-down"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                            key="svg-down-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(DownOutlined)>
                                                              </span>
                                                            </div>
                                                          </StepHandler>
                                                          <div
                                                            className="ant-input-number-input-wrap"
                                                          >
                                                            <input
                                                              aria-valuemin={1}
                                                              aria-valuenow={null}
                                                              autoComplete="off"
                                                              className="ant-input-number-input"
                                                              id="creat-rating_numeric_value"
                                                              onChange={[Function]}
                                                              role="spinbutton"
                                                              step={1}
                                                              value=""
                                                            />
                                                          </div>
                                                        </div>
                                                      </InputNumber>
                                                    </ForwardRef>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                              <FormItem
                                label="Background Colour"
                                name="background_colour"
                              >
                                <WrapperField
                                  label="Background Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Background Colour",
                                    }
                                  }
                                  name="background_colour"
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "creat-rating",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_background_colour"
                                    label="Background Colour"
                                    messageVariables={
                                      Object {
                                        "label": "Background Colour",
                                      }
                                    }
                                    name={
                                      Array [
                                        "background_colour",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="creat-rating_background_colour"
                                          label="Background Colour"
                                          name="background_colour"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="creat-rating_background_colour"
                                                title="Background Colour"
                                              >
                                                Background Colour
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Background Colour"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <div
                                                        style={
                                                          Object {
                                                            "position": "relative",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "background": "#fff",
                                                              "borderRadius": "1px",
                                                              "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                              "cursor": "pointer",
                                                              "display": "inline-block",
                                                              "padding": "5px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            style={
                                                              Object {
                                                                "background": "null",
                                                                "borderRadius": "2px",
                                                                "height": "24px",
                                                                "width": "100px",
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </div>
                                                    }
                                                  >
                                                    <div
                                                      id="creat-rating_background_colour"
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "position": "relative",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "borderRadius": "1px",
                                                            "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                            "cursor": "pointer",
                                                            "display": "inline-block",
                                                            "padding": "5px",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          style={
                                                            Object {
                                                              "background": "null",
                                                              "borderRadius": "2px",
                                                              "height": "24px",
                                                              "width": "100px",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </div>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                              <FormItem
                                label="Text Colour"
                                name="text_colour"
                              >
                                <WrapperField
                                  label="Text Colour"
                                  messageVariables={
                                    Object {
                                      "label": "Text Colour",
                                    }
                                  }
                                  name="text_colour"
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "creat-rating",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_text_colour"
                                    label="Text Colour"
                                    messageVariables={
                                      Object {
                                        "label": "Text Colour",
                                      }
                                    }
                                    name={
                                      Array [
                                        "text_colour",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="creat-rating_text_colour"
                                          label="Text Colour"
                                          name="text_colour"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="creat-rating_text_colour"
                                                title="Text Colour"
                                              >
                                                Text Colour
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Text Colour"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <div
                                                        style={
                                                          Object {
                                                            "position": "relative",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "background": "#fff",
                                                              "borderRadius": "1px",
                                                              "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                              "cursor": "pointer",
                                                              "display": "inline-block",
                                                              "padding": "5px",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            style={
                                                              Object {
                                                                "background": "null",
                                                                "borderRadius": "2px",
                                                                "height": "24px",
                                                                "width": "100px",
                                                              }
                                                            }
                                                          />
                                                        </div>
                                                      </div>
                                                    }
                                                  >
                                                    <div
                                                      id="creat-rating_text_colour"
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "position": "relative",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "borderRadius": "1px",
                                                            "boxShadow": "0 0 0 1px rgba(0,0,0,.1)",
                                                            "cursor": "pointer",
                                                            "display": "inline-block",
                                                            "padding": "5px",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          style={
                                                            Object {
                                                              "background": "null",
                                                              "borderRadius": "2px",
                                                              "height": "24px",
                                                              "width": "100px",
                                                            }
                                                          }
                                                        />
                                                      </div>
                                                    </div>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                              <FormItem
                                className="preview-container"
                                gutter={16}
                                label="Preview"
                                style={
                                  Object {
                                    "marginBottom": "1rem",
                                  }
                                }
                              >
                                <Row
                                  className="ant-form-item preview-container"
                                  gutter={16}
                                  key="row"
                                  style={
                                    Object {
                                      "marginBottom": "1rem",
                                    }
                                  }
                                >
                                  <div
                                    className="ant-row ant-form-item preview-container"
                                    role="row"
                                    style={
                                      Object {
                                        "marginBottom": "1rem",
                                        "marginLeft": -8,
                                        "marginRight": -8,
                                      }
                                    }
                                  >
                                    <FormItemLabel
                                      className="preview-container"
                                      gutter={16}
                                      label="Preview"
                                      prefixCls="ant-form"
                                      requiredMark={true}
                                      style={
                                        Object {
                                          "marginBottom": "1rem",
                                        }
                                      }
                                    >
                                      <Col
                                        className="ant-form-item-label"
                                      >
                                        <div
                                          className="ant-col ant-form-item-label"
                                          role="cell"
                                          style={
                                            Object {
                                              "paddingLeft": 8,
                                              "paddingRight": 8,
                                            }
                                          }
                                        >
                                          <label
                                            className=""
                                            title="Preview"
                                          >
                                            Preview
                                          </label>
                                        </div>
                                      </Col>
                                    </FormItemLabel>
                                    <FormItemInput
                                      className="preview-container"
                                      errors={Array []}
                                      gutter={16}
                                      label="Preview"
                                      name={Array []}
                                      prefixCls="ant-form"
                                      status=""
                                      style={
                                        Object {
                                          "marginBottom": "1rem",
                                        }
                                      }
                                      touched={false}
                                      validating={false}
                                      warnings={Array []}
                                    >
                                      <Col
                                        className="ant-form-item-control"
                                      >
                                        <div
                                          className="ant-col ant-form-item-control"
                                          role="cell"
                                          style={
                                            Object {
                                              "paddingLeft": 8,
                                              "paddingRight": 8,
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-form-item-control-input"
                                          >
                                            <div
                                              className="ant-form-item-control-input-content"
                                            >
                                              <div
                                                className="preview"
                                                style={
                                                  Object {
                                                    "background": undefined,
                                                    "border": "1px dotted black",
                                                    "color": undefined,
                                                    "fontSize": "0.75rem",
                                                    "padding": "0.5rem 1rem",
                                                    "textAlign": "center",
                                                    "width": "110px",
                                                  }
                                                }
                                              >
                                                Sample Text
                                              </div>
                                            </div>
                                          </div>
                                          <ErrorList
                                            className="ant-form-item-explain-connected"
                                            errors={Array []}
                                            helpStatus=""
                                            warnings={Array []}
                                          >
                                            <CSSMotion
                                              motionAppear={false}
                                              motionDeadline={500}
                                              motionEnter={false}
                                              motionName="ant-show-help"
                                              onAppearActive={[Function]}
                                              onAppearEnd={[Function]}
                                              onAppearStart={[Function]}
                                              onEnterActive={[Function]}
                                              onEnterEnd={[Function]}
                                              onEnterStart={[Function]}
                                              onLeaveActive={[Function]}
                                              onLeaveEnd={[Function]}
                                              onLeaveStart={[Function]}
                                              visible={false}
                                            >
                                              <DomWrapper />
                                            </CSSMotion>
                                          </ErrorList>
                                        </div>
                                      </Col>
                                    </FormItemInput>
                                  </div>
                                </Row>
                              </FormItem>
                            </div>
                          </Col>
                          <Col
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10"
                              role="cell"
                              style={
                                Object {
                                  "paddingLeft": 20,
                                  "paddingRight": 20,
                                }
                              }
                            >
                              <FormItem
                                label="Featured Image"
                                name="medium_id"
                              >
                                <WrapperField
                                  label="Featured Image"
                                  messageVariables={
                                    Object {
                                      "label": "Featured Image",
                                    }
                                  }
                                  name="medium_id"
                                  onMetaChange={[Function]}
                                  trigger="onChange"
                                  validateTrigger="onChange"
                                >
                                  <Field
                                    fieldContext={
                                      Object {
                                        "__INTERNAL__": Object {
                                          "itemRef": [Function],
                                          "name": "creat-rating",
                                        },
                                        "_init": true,
                                        "getFieldError": [Function],
                                        "getFieldInstance": [Function],
                                        "getFieldValue": [Function],
                                        "getFieldWarning": [Function],
                                        "getFieldsError": [Function],
                                        "getFieldsValue": [Function],
                                        "getInternalHooks": [Function],
                                        "isFieldTouched": [Function],
                                        "isFieldValidating": [Function],
                                        "isFieldsTouched": [Function],
                                        "isFieldsValidating": [Function],
                                        "resetFields": [Function],
                                        "scrollToField": [Function],
                                        "setFields": [Function],
                                        "setFieldsValue": [Function],
                                        "submit": [Function],
                                        "validateFields": [Function],
                                        "validateTrigger": "onChange",
                                      }
                                    }
                                    key="_medium_id"
                                    label="Featured Image"
                                    messageVariables={
                                      Object {
                                        "label": "Featured Image",
                                      }
                                    }
                                    name={
                                      Array [
                                        "medium_id",
                                      ]
                                    }
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    valuePropName="value"
                                  >
                                    <Row
                                      className="ant-form-item"
                                      key="row"
                                    >
                                      <div
                                        className="ant-row ant-form-item"
                                        role="row"
                                        style={Object {}}
                                      >
                                        <FormItemLabel
                                          htmlFor="creat-rating_medium_id"
                                          label="Featured Image"
                                          name="medium_id"
                                          prefixCls="ant-form"
                                          required={false}
                                          requiredMark={true}
                                        >
                                          <Col
                                            className="ant-form-item-label"
                                          >
                                            <div
                                              className="ant-col ant-form-item-label"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <label
                                                className=""
                                                htmlFor="creat-rating_medium_id"
                                                title="Featured Image"
                                              >
                                                Featured Image
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItemInput
                                          errors={Array []}
                                          label="Featured Image"
                                          name={Array []}
                                          prefixCls="ant-form"
                                          status=""
                                          touched={false}
                                          validating={false}
                                          warnings={Array []}
                                        >
                                          <Col
                                            className="ant-form-item-control"
                                          >
                                            <div
                                              className="ant-col ant-form-item-control"
                                              role="cell"
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-form-item-control-input"
                                              >
                                                <div
                                                  className="ant-form-item-control-input-content"
                                                >
                                                  <Component
                                                    update={
                                                      <MediaSelector
                                                        containerStyles={
                                                          Object {
                                                            "justifyContent": "start",
                                                          }
                                                        }
                                                        maxWidth="350px"
                                                      />
                                                    }
                                                  >
                                                    <MediaSelector
                                                      containerStyles={
                                                        Object {
                                                          "justifyContent": "start",
                                                        }
                                                      }
                                                      id="creat-rating_medium_id"
                                                      maxWidth="350px"
                                                      onChange={[Function]}
                                                    >
                                                      <Modal
                                                        closable={false}
                                                        confirmLoading={false}
                                                        footer={
                                                          Array [
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                            >
                                                              Cancel
                                                            </ForwardRef(InternalButton)>,
                                                            <ForwardRef(InternalButton)
                                                              onClick={[Function]}
                                                              type="primary"
                                                            >
                                                              Ok
                                                            </ForwardRef(InternalButton)>,
                                                          ]
                                                        }
                                                        okType="primary"
                                                        onCancel={[Function]}
                                                        visible={false}
                                                        width="800px"
                                                      >
                                                        <Dialog
                                                          closable={false}
                                                          closeIcon={
                                                            <span
                                                              className="ant-modal-close-x"
                                                            >
                                                              <ForwardRef(CloseOutlined)
                                                                className="ant-modal-close-icon"
                                                              />
                                                            </span>
                                                          }
                                                          confirmLoading={false}
                                                          focusTriggerAfterClose={true}
                                                          footer={
                                                            Array [
                                                              <ForwardRef(InternalButton)
                                                                onClick={[Function]}
                                                              >
                                                                Cancel
                                                              </ForwardRef(InternalButton)>,
                                                              <ForwardRef(InternalButton)
                                                                onClick={[Function]}
                                                                type="primary"
                                                              >
                                                                Ok
                                                              </ForwardRef(InternalButton)>,
                                                            ]
                                                          }
                                                          maskTransitionName="ant-fade"
                                                          okType="primary"
                                                          onCancel={[Function]}
                                                          onClose={[Function]}
                                                          prefixCls="ant-modal"
                                                          transitionName="ant-zoom"
                                                          visible={false}
                                                          width="800px"
                                                          wrapClassName=""
                                                        >
                                                          <PortalWrapper
                                                            visible={false}
                                                          />
                                                        </Dialog>
                                                      </Modal>
                                                      <Space
                                                        direction="vertical"
                                                      >
                                                        <div
                                                          className="ant-space ant-space-vertical"
                                                          style={Object {}}
                                                        >
                                                          <Item
                                                            className="ant-space-item"
                                                            direction="vertical"
                                                            index={0}
                                                            key="ant-space-item-0"
                                                            marginDirection="marginRight"
                                                            wrap={false}
                                                          >
                                                            <div
                                                              className="ant-space-item"
                                                              style={Object {}}
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "alignItems": "center",
                                                                    "display": "flex",
                                                                    "justifyContent": "start",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  style={
                                                                    Object {
                                                                      "position": "relative",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    onClick={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "background": "transparent",
                                                                        "borderStyle": "dashed",
                                                                        "display": "block",
                                                                        "height": "auto",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Wave
                                                                      disabled={false}
                                                                    >
                                                                      <button
                                                                        className="ant-btn ant-btn-default"
                                                                        onClick={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "background": "transparent",
                                                                            "borderStyle": "dashed",
                                                                            "display": "block",
                                                                            "height": "auto",
                                                                          }
                                                                        }
                                                                        type="button"
                                                                      >
                                                                        <LoadingIcon
                                                                          existIcon={false}
                                                                          loading={false}
                                                                          prefixCls="ant-btn"
                                                                        >
                                                                          <CSSMotion
                                                                            motionName="ant-btn-loading-icon-motion"
                                                                            onAppearActive={[Function]}
                                                                            onAppearStart={[Function]}
                                                                            onEnterActive={[Function]}
                                                                            onEnterStart={[Function]}
                                                                            onLeaveActive={[Function]}
                                                                            onLeaveStart={[Function]}
                                                                            removeOnLeave={true}
                                                                            visible={false}
                                                                          >
                                                                            <DomWrapper />
                                                                          </CSSMotion>
                                                                        </LoadingIcon>
                                                                        <PlaceholderImage
                                                                          height="auto"
                                                                          key=".0"
                                                                          maxWidth="350px"
                                                                          width="100%"
                                                                        >
                                                                          <img
                                                                            alt=""
                                                                            height="auto"
                                                                            src="placeholderImage.svg"
                                                                            style={
                                                                              Object {
                                                                                "maxWidth": "350px",
                                                                                "objectFit": "contain",
                                                                                "padding": "1rem",
                                                                              }
                                                                            }
                                                                            width="100%"
                                                                          />
                                                                        </PlaceholderImage>
                                                                      </button>
                                                                    </Wave>
                                                                  </Button>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </Item>
                                                        </div>
                                                      </Space>
                                                    </MediaSelector>
                                                  </Component>
                                                </div>
                                              </div>
                                              <ErrorList
                                                className="ant-form-item-explain-connected"
                                                errors={Array []}
                                                helpStatus=""
                                                warnings={Array []}
                                              >
                                                <CSSMotion
                                                  motionAppear={false}
                                                  motionDeadline={500}
                                                  motionEnter={false}
                                                  motionName="ant-show-help"
                                                  onAppearActive={[Function]}
                                                  onAppearEnd={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterEnd={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveEnd={[Function]}
                                                  onLeaveStart={[Function]}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </ErrorList>
                                            </div>
                                          </Col>
                                        </FormItemInput>
                                      </div>
                                    </Row>
                                  </Field>
                                </WrapperField>
                              </FormItem>
                            </div>
                          </Col>
                          <Col
                            span={12}
                            style={
                              Object {
                                "marginLeft": "20px",
                                "marginRight": "auto",
                              }
                            }
                          >
                            <div
                              className="ant-col ant-col-12"
                              role="cell"
                              style={
                                Object {
                                  "marginLeft": "20px",
                                  "marginRight": "auto",
                                  "paddingLeft": 20,
                                  "paddingRight": 20,
                                }
                              }
                            >
                              <DescriptionInput
                                inputProps={
                                  Object {
                                    "basic": true,
                                    "placeholder": "Enter Description...",
                                    "style": Object {
                                      "background": "#fff",
                                      "padding": "0.5rem 0.75rem",
                                      "width": "600px",
                                    },
                                  }
                                }
                                type="editor"
                              >
                                <FormItem
                                  label="Description"
                                  name="description"
                                >
                                  <WrapperField
                                    label="Description"
                                    messageVariables={
                                      Object {
                                        "label": "Description",
                                      }
                                    }
                                    name="description"
                                    onMetaChange={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "creat-rating",
                                          },
                                          "_init": true,
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldWarning": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_description"
                                      label="Description"
                                      messageVariables={
                                        Object {
                                          "label": "Description",
                                        }
                                      }
                                      name={
                                        Array [
                                          "description",
                                        ]
                                      }
                                      onMetaChange={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          role="row"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="creat-rating_description"
                                            label="Description"
                                            name="description"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          >
                                            <Col
                                              className="ant-form-item-label"
                                            >
                                              <div
                                                className="ant-col ant-form-item-label"
                                                role="cell"
                                                style={Object {}}
                                              >
                                                <label
                                                  className=""
                                                  htmlFor="creat-rating_description"
                                                  title="Description"
                                                >
                                                  Description
                                                </label>
                                              </div>
                                            </Col>
                                          </FormItemLabel>
                                          <FormItemInput
                                            errors={Array []}
                                            label="Description"
                                            name={Array []}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validating={false}
                                            warnings={Array []}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                role="cell"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={
                                                        <Editor
                                                          basic={true}
                                                          onChange={[Function]}
                                                          placeholder="Enter Description..."
                                                          style={
                                                            Object {
                                                              "background": "#fff",
                                                              "padding": "0.5rem 0.75rem",
                                                              "width": "600px",
                                                            }
                                                          }
                                                        />
                                                      }
                                                    >
                                                      <Editor
                                                        basic={true}
                                                        id="creat-rating_description"
                                                        onChange={[Function]}
                                                        placeholder="Enter Description..."
                                                        style={
                                                          Object {
                                                            "background": "#fff",
                                                            "padding": "0.5rem 0.75rem",
                                                            "width": "600px",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          style={
                                                            Object {
                                                              "background": "#fff",
                                                              "padding": "0.5rem 0.75rem",
                                                              "width": "600px",
                                                            }
                                                          }
                                                        />
                                                      </Editor>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  className="ant-form-item-explain-connected"
                                                  errors={Array []}
                                                  helpStatus=""
                                                  warnings={Array []}
                                                >
                                                  <CSSMotion
                                                    motionAppear={false}
                                                    motionDeadline={500}
                                                    motionEnter={false}
                                                    motionName="ant-show-help"
                                                    onAppearActive={[Function]}
                                                    onAppearEnd={[Function]}
                                                    onAppearStart={[Function]}
                                                    onEnterActive={[Function]}
                                                    onEnterEnd={[Function]}
                                                    onEnterStart={[Function]}
                                                    onLeaveActive={[Function]}
                                                    onLeaveEnd={[Function]}
                                                    onLeaveStart={[Function]}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </DescriptionInput>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </Col>
                  <Col
                    span={24}
                  >
                    <div
                      className="ant-col ant-col-24"
                      role="cell"
                      style={Object {}}
                    >
                      <Row
                        gutter={40}
                        style={
                          Object {
                            "background": "#f0f2f5",
                          }
                        }
                      >
                        <div
                          className="ant-row"
                          role="row"
                          style={
                            Object {
                              "background": "#f0f2f5",
                              "marginLeft": -20,
                              "marginRight": -20,
                            }
                          }
                        >
                          <MetaForm>
                            <Collapse
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <Collapse
                                accordion={false}
                                className="ant-collapse-icon-position-right"
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                expandIconPosition="right"
                                onChange={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                prefixCls="ant-collapse"
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="ant-collapse ant-collapse-icon-position-right"
                                  role={null}
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    header="Meta Data"
                                    isActive={false}
                                    key="0"
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                  >
                                    <CollapsePanel
                                      accordion={false}
                                      className=""
                                      destroyInactivePanel={false}
                                      expandIcon={[Function]}
                                      forceRender={false}
                                      header="Meta Data"
                                      headerClass=""
                                      isActive={false}
                                      onItemClick={[Function]}
                                      openMotion={
                                        Object {
                                          "leavedClassName": "ant-collapse-content-hidden",
                                          "motionAppear": false,
                                          "motionDeadline": 500,
                                          "motionName": "ant-motion-collapse",
                                          "onAppearActive": [Function],
                                          "onAppearEnd": [Function],
                                          "onAppearStart": [Function],
                                          "onEnterActive": [Function],
                                          "onEnterEnd": [Function],
                                          "onEnterStart": [Function],
                                          "onLeaveActive": [Function],
                                          "onLeaveEnd": [Function],
                                          "onLeaveStart": [Function],
                                        }
                                      }
                                      panelKey="0"
                                      prefixCls="ant-collapse"
                                      showArrow={true}
                                    >
                                      <div
                                        className="ant-collapse-item"
                                      >
                                        <div
                                          aria-expanded={false}
                                          className="ant-collapse-header"
                                          onClick={[Function]}
                                          onKeyPress={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <div>
                                            <Button
                                              className="ant-collapse-arrow"
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-default ant-collapse-arrow"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Expand
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                          Meta Data
                                        </div>
                                        <CSSMotion
                                          forceRender={false}
                                          leavedClassName="ant-collapse-content-hidden"
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionName="ant-motion-collapse"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={false}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </div>
                                    </CollapsePanel>
                                  </CollapsePanel>
                                  <CollapsePanel
                                    accordion={false}
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    header="Code Injection"
                                    isActive={false}
                                    key="1"
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="1"
                                    prefixCls="ant-collapse"
                                  >
                                    <CollapsePanel
                                      accordion={false}
                                      className=""
                                      destroyInactivePanel={false}
                                      expandIcon={[Function]}
                                      forceRender={false}
                                      header="Code Injection"
                                      headerClass=""
                                      isActive={false}
                                      onItemClick={[Function]}
                                      openMotion={
                                        Object {
                                          "leavedClassName": "ant-collapse-content-hidden",
                                          "motionAppear": false,
                                          "motionDeadline": 500,
                                          "motionName": "ant-motion-collapse",
                                          "onAppearActive": [Function],
                                          "onAppearEnd": [Function],
                                          "onAppearStart": [Function],
                                          "onEnterActive": [Function],
                                          "onEnterEnd": [Function],
                                          "onEnterStart": [Function],
                                          "onLeaveActive": [Function],
                                          "onLeaveEnd": [Function],
                                          "onLeaveStart": [Function],
                                        }
                                      }
                                      panelKey="1"
                                      prefixCls="ant-collapse"
                                      showArrow={true}
                                    >
                                      <div
                                        className="ant-collapse-item"
                                      >
                                        <div
                                          aria-expanded={false}
                                          className="ant-collapse-header"
                                          onClick={[Function]}
                                          onKeyPress={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <div>
                                            <Button
                                              className="ant-collapse-arrow"
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-default ant-collapse-arrow"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Expand
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                          Code Injection
                                        </div>
                                        <CSSMotion
                                          forceRender={false}
                                          leavedClassName="ant-collapse-content-hidden"
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionName="ant-motion-collapse"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={false}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </div>
                                    </CollapsePanel>
                                  </CollapsePanel>
                                </div>
                              </Collapse>
                            </Collapse>
                            <Collapse
                              expandIcon={[Function]}
                              expandIconPosition="right"
                              style={
                                Object {
                                  "width": "100%",
                                }
                              }
                            >
                              <Collapse
                                accordion={false}
                                className="ant-collapse-icon-position-right"
                                destroyInactivePanel={false}
                                expandIcon={[Function]}
                                expandIconPosition="right"
                                onChange={[Function]}
                                openMotion={
                                  Object {
                                    "leavedClassName": "ant-collapse-content-hidden",
                                    "motionAppear": false,
                                    "motionDeadline": 500,
                                    "motionName": "ant-motion-collapse",
                                    "onAppearActive": [Function],
                                    "onAppearEnd": [Function],
                                    "onAppearStart": [Function],
                                    "onEnterActive": [Function],
                                    "onEnterEnd": [Function],
                                    "onEnterStart": [Function],
                                    "onLeaveActive": [Function],
                                    "onLeaveEnd": [Function],
                                    "onLeaveStart": [Function],
                                  }
                                }
                                prefixCls="ant-collapse"
                                style={
                                  Object {
                                    "width": "100%",
                                  }
                                }
                              >
                                <div
                                  className="ant-collapse ant-collapse-icon-position-right"
                                  role={null}
                                  style={
                                    Object {
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <CollapsePanel
                                    accordion={false}
                                    destroyInactivePanel={false}
                                    expandIcon={[Function]}
                                    header="Meta Fields"
                                    isActive={false}
                                    key="0"
                                    onItemClick={[Function]}
                                    openMotion={
                                      Object {
                                        "leavedClassName": "ant-collapse-content-hidden",
                                        "motionAppear": false,
                                        "motionDeadline": 500,
                                        "motionName": "ant-motion-collapse",
                                        "onAppearActive": [Function],
                                        "onAppearEnd": [Function],
                                        "onAppearStart": [Function],
                                        "onEnterActive": [Function],
                                        "onEnterEnd": [Function],
                                        "onEnterStart": [Function],
                                        "onLeaveActive": [Function],
                                        "onLeaveEnd": [Function],
                                        "onLeaveStart": [Function],
                                      }
                                    }
                                    panelKey="0"
                                    prefixCls="ant-collapse"
                                  >
                                    <CollapsePanel
                                      accordion={false}
                                      className=""
                                      destroyInactivePanel={false}
                                      expandIcon={[Function]}
                                      forceRender={false}
                                      header="Meta Fields"
                                      headerClass=""
                                      isActive={false}
                                      onItemClick={[Function]}
                                      openMotion={
                                        Object {
                                          "leavedClassName": "ant-collapse-content-hidden",
                                          "motionAppear": false,
                                          "motionDeadline": 500,
                                          "motionName": "ant-motion-collapse",
                                          "onAppearActive": [Function],
                                          "onAppearEnd": [Function],
                                          "onAppearStart": [Function],
                                          "onEnterActive": [Function],
                                          "onEnterEnd": [Function],
                                          "onEnterStart": [Function],
                                          "onLeaveActive": [Function],
                                          "onLeaveEnd": [Function],
                                          "onLeaveStart": [Function],
                                        }
                                      }
                                      panelKey="0"
                                      prefixCls="ant-collapse"
                                      showArrow={true}
                                    >
                                      <div
                                        className="ant-collapse-item"
                                      >
                                        <div
                                          aria-expanded={false}
                                          className="ant-collapse-header"
                                          onClick={[Function]}
                                          onKeyPress={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <div>
                                            <Button
                                              className="ant-collapse-arrow"
                                            >
                                              <Wave
                                                disabled={false}
                                              >
                                                <button
                                                  className="ant-btn ant-btn-default ant-collapse-arrow"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <LoadingIcon
                                                    existIcon={false}
                                                    loading={false}
                                                    prefixCls="ant-btn"
                                                  >
                                                    <CSSMotion
                                                      motionName="ant-btn-loading-icon-motion"
                                                      onAppearActive={[Function]}
                                                      onAppearStart={[Function]}
                                                      onEnterActive={[Function]}
                                                      onEnterStart={[Function]}
                                                      onLeaveActive={[Function]}
                                                      onLeaveStart={[Function]}
                                                      removeOnLeave={true}
                                                      visible={false}
                                                    >
                                                      <DomWrapper />
                                                    </CSSMotion>
                                                  </LoadingIcon>
                                                  <span
                                                    key=".0"
                                                  >
                                                    Expand
                                                  </span>
                                                </button>
                                              </Wave>
                                            </Button>
                                          </div>
                                          Meta Fields
                                        </div>
                                        <CSSMotion
                                          forceRender={false}
                                          leavedClassName="ant-collapse-content-hidden"
                                          motionAppear={false}
                                          motionDeadline={500}
                                          motionName="ant-motion-collapse"
                                          onAppearActive={[Function]}
                                          onAppearEnd={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterEnd={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveEnd={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={false}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </div>
                                    </CollapsePanel>
                                  </CollapsePanel>
                                </div>
                              </Collapse>
                            </Collapse>
                          </MetaForm>
                        </div>
                      </Row>
                    </div>
                  </Col>
                </div>
              </Row>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </RatingForm>
  </CreateRating>
</Provider>
`;
