// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Space Request create component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CreateSpaceRequest>
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
      title="Create Space Request"
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        title="Create Space Request"
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          title="Create Space Request"
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <RequestForm
      onCreate={[Function]}
    >
      <ForwardRef(InternalForm)
        form={
          Object {
            "__INTERNAL__": Object {
              "itemRef": [Function],
              "name": "create-category",
            },
            "_init": true,
            "getFieldError": [Function],
            "getFieldInstance": [Function],
            "getFieldValue": [Function],
            "getFieldWarning": [Function],
            "getFieldsError": [Function],
            "getFieldsValue": [Function],
            "getInternalHooks": [Function],
            "isFieldTouched": [Function],
            "isFieldValidating": [Function],
            "isFieldsTouched": [Function],
            "isFieldsValidating": [Function],
            "resetFields": [Function],
            "scrollToField": [Function],
            "setFields": [Function],
            "setFieldsValue": [Function],
            "submit": [Function],
            "validateFields": [Function],
          }
        }
        initialValues={Object {}}
        labelCol={
          Object {
            "span": 10,
          }
        }
        name="create-category"
        onFinish={[Function]}
        wrapperCol={
          Object {
            "span": 8,
          }
        }
      >
        <SizeContextProvider>
          <ForwardRef(Form)
            className="ant-form ant-form-horizontal"
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "create-category",
                },
                "_init": true,
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldWarning": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            id="create-category"
            initialValues={Object {}}
            name="create-category"
            onFinish={[Function]}
            onFinishFailed={[Function]}
          >
            <form
              className="ant-form ant-form-horizontal"
              id="create-category"
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <TitleInput>
                <FormItem
                  label="Title"
                  name="title"
                  rules={
                    Array [
                      Object {
                        "message": "Please enter title!",
                        "required": true,
                      },
                      Object {
                        "max": 500,
                        "message": "Name must be maximum 500 characters.",
                      },
                    ]
                  }
                >
                  <WrapperField
                    label="Title"
                    messageVariables={
                      Object {
                        "label": "Title",
                      }
                    }
                    name="title"
                    onMetaChange={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter title!",
                          "required": true,
                        },
                        Object {
                          "max": 500,
                          "message": "Name must be maximum 500 characters.",
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                  >
                    <Field
                      fieldContext={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": "create-category",
                          },
                          "_init": true,
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldWarning": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                          "validateTrigger": "onChange",
                        }
                      }
                      key="_title"
                      label="Title"
                      messageVariables={
                        Object {
                          "label": "Title",
                        }
                      }
                      name={
                        Array [
                          "title",
                        ]
                      }
                      onMetaChange={[Function]}
                      rules={
                        Array [
                          Object {
                            "message": "Please enter title!",
                            "required": true,
                          },
                          Object {
                            "max": 500,
                            "message": "Name must be maximum 500 characters.",
                          },
                        ]
                      }
                      trigger="onChange"
                      validateTrigger="onChange"
                      valuePropName="value"
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          role="row"
                          style={Object {}}
                        >
                          <FormItemLabel
                            htmlFor="create-category_title"
                            label="Title"
                            name="title"
                            prefixCls="ant-form"
                            required={true}
                            requiredMark={true}
                            rules={
                              Array [
                                Object {
                                  "message": "Please enter title!",
                                  "required": true,
                                },
                                Object {
                                  "max": 500,
                                  "message": "Name must be maximum 500 characters.",
                                },
                              ]
                            }
                          >
                            <Col
                              className="ant-form-item-label"
                              span={10}
                            >
                              <div
                                className="ant-col ant-col-10 ant-form-item-label"
                                role="cell"
                                style={Object {}}
                              >
                                <label
                                  className="ant-form-item-required"
                                  htmlFor="create-category_title"
                                  title="Title"
                                >
                                  Title
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="Title"
                            name={Array []}
                            prefixCls="ant-form"
                            rules={
                              Array [
                                Object {
                                  "message": "Please enter title!",
                                  "required": true,
                                },
                                Object {
                                  "max": 500,
                                  "message": "Name must be maximum 500 characters.",
                                },
                              ]
                            }
                            status=""
                            touched={false}
                            validating={false}
                            warnings={Array []}
                          >
                            <Col
                              className="ant-form-item-control"
                              span={8}
                            >
                              <div
                                className="ant-col ant-col-8 ant-form-item-control"
                                role="cell"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Component
                                      update={<ForwardRef />}
                                    >
                                      <ForwardRef
                                        id="create-category_title"
                                        onChange={[Function]}
                                      >
                                        <ForwardRef
                                          affixWrapperClassName=""
                                          groupClassName=""
                                          id="create-category_title"
                                          inputClassName=""
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          prefixCls="ant-input"
                                          wrapperClassName=""
                                        >
                                          <BaseInput
                                            affixWrapperClassName=""
                                            focused={false}
                                            groupClassName=""
                                            handleReset={[Function]}
                                            id="create-category_title"
                                            inputElement={
                                              <input
                                                className="ant-input"
                                                id="create-category_title"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                type="text"
                                              />
                                            }
                                            prefixCls="ant-input"
                                            suffix={null}
                                            triggerFocus={[Function]}
                                            value=""
                                            wrapperClassName=""
                                          >
                                            <input
                                              className="ant-input"
                                              id="create-category_title"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </BaseInput>
                                        </ForwardRef>
                                      </ForwardRef>
                                    </Component>
                                  </div>
                                </div>
                                <ErrorList
                                  className="ant-form-item-explain-connected"
                                  errors={Array []}
                                  helpStatus=""
                                  warnings={Array []}
                                >
                                  <CSSMotion
                                    motionAppear={false}
                                    motionDeadline={500}
                                    motionEnter={false}
                                    motionName="ant-show-help"
                                    onAppearActive={[Function]}
                                    onAppearEnd={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterEnd={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveEnd={[Function]}
                                    onLeaveStart={[Function]}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </Field>
                  </WrapperField>
                </FormItem>
              </TitleInput>
              <FormItem
                label="Space"
                name="space_id"
                rules={
                  Array [
                    Object {
                      "message": "Please select a space",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Space"
                  messageVariables={
                    Object {
                      "label": "Space",
                    }
                  }
                  name="space_id"
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please select a space",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_space_id"
                    label="Space"
                    messageVariables={
                      Object {
                        "label": "Space",
                      }
                    }
                    name={
                      Array [
                        "space_id",
                      ]
                    }
                    onMetaChange={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please select a space",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_space_id"
                          label="Space"
                          name="space_id"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please select a space",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="create-category_space_id"
                                title="Space"
                              >
                                Space
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Space"
                          name={Array []}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please select a space",
                                "required": true,
                              },
                            ]
                          }
                          status=""
                          touched={false}
                          validating={false}
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={
                                      <ForwardRef(InternalSelect)
                                        allowClear={true}
                                        bordered={true}
                                        defaultValue={Array []}
                                        filterOption={[Function]}
                                        listHeight={128}
                                        loading={true}
                                      />
                                    }
                                  >
                                    <ForwardRef(InternalSelect)
                                      allowClear={true}
                                      bordered={true}
                                      defaultValue={Array []}
                                      filterOption={[Function]}
                                      id="create-category_space_id"
                                      listHeight={128}
                                      loading={true}
                                      onChange={[Function]}
                                    >
                                      <Select
                                        allowClear={true}
                                        className="ant-select-in-form-item"
                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                        defaultValue={Array []}
                                        dropdownClassName=""
                                        filterOption={[Function]}
                                        id="create-category_space_id"
                                        inputIcon={
                                          <React.Fragment>
                                            <ForwardRef(LoadingOutlined)
                                              spin={true}
                                            />
                                          </React.Fragment>
                                        }
                                        listHeight={128}
                                        listItemHeight={24}
                                        loading={true}
                                        menuItemSelectedIcon={null}
                                        notFoundContent={
                                          <Context.Consumer>
                                            [Function]
                                          </Context.Consumer>
                                        }
                                        onChange={[Function]}
                                        placement="bottomLeft"
                                        prefixCls="ant-select"
                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                        transitionName="ant-slide-up"
                                      >
                                        <BaseSelect
                                          OptionList={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "displayName": "OptionList",
                                              "render": [Function],
                                            }
                                          }
                                          activeDescendantId="create-category_space_id_list_0"
                                          activeValue={null}
                                          allowClear={true}
                                          className="ant-select-in-form-item"
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          displayValues={Array []}
                                          dropdownClassName=""
                                          dropdownMatchSelectWidth={true}
                                          emptyOptions={true}
                                          id="create-category_space_id"
                                          inputIcon={
                                            <React.Fragment>
                                              <ForwardRef(LoadingOutlined)
                                                spin={true}
                                              />
                                            </React.Fragment>
                                          }
                                          loading={true}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          omitDomProps={
                                            Array [
                                              "inputValue",
                                            ]
                                          }
                                          onDisplayValuesChange={[Function]}
                                          onSearch={[Function]}
                                          onSearchSplit={[Function]}
                                          placement="bottomLeft"
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          searchValue=""
                                          transitionName="ant-slide-up"
                                        >
                                          <div
                                            className="ant-select ant-select-in-form-item ant-select-single ant-select-allow-clear ant-select-show-arrow ant-select-loading"
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                          >
                                            <SelectTrigger
                                              containerWidth={null}
                                              dropdownClassName=""
                                              dropdownMatchSelectWidth={true}
                                              empty={true}
                                              getTriggerDOMNode={[Function]}
                                              onPopupMouseEnter={[Function]}
                                              placement="bottomLeft"
                                              popupElement={<ForwardRef(OptionList) />}
                                              prefixCls="ant-select"
                                              transitionName="ant-slide-up"
                                            >
                                              <Trigger
                                                action={Array []}
                                                afterPopupVisibleChange={[Function]}
                                                autoDestroy={false}
                                                blurDelay={0.15}
                                                builtinPlacements={
                                                  Object {
                                                    "bottomLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tl",
                                                        "bl",
                                                      ],
                                                    },
                                                    "bottomRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "tr",
                                                        "br",
                                                      ],
                                                    },
                                                    "topLeft": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "bl",
                                                        "tl",
                                                      ],
                                                    },
                                                    "topRight": Object {
                                                      "offset": Array [
                                                        0,
                                                        -4,
                                                      ],
                                                      "overflow": Object {
                                                        "adjustX": 0,
                                                        "adjustY": 1,
                                                      },
                                                      "points": Array [
                                                        "br",
                                                        "tr",
                                                      ],
                                                    },
                                                  }
                                                }
                                                defaultPopupVisible={false}
                                                destroyPopupOnHide={false}
                                                focusDelay={0}
                                                getDocument={[Function]}
                                                getPopupClassNameFromAlign={[Function]}
                                                getTriggerDOMNode={[Function]}
                                                hideAction={Array []}
                                                mask={false}
                                                maskClosable={true}
                                                mouseEnterDelay={0}
                                                mouseLeaveDelay={0.1}
                                                onPopupAlign={[Function]}
                                                onPopupVisibleChange={[Function]}
                                                popup={
                                                  <div
                                                    onMouseEnter={[Function]}
                                                  >
                                                    <ForwardRef(OptionList) />
                                                  </div>
                                                }
                                                popupAlign={Object {}}
                                                popupClassName="ant-select-dropdown-empty"
                                                popupPlacement="bottomLeft"
                                                popupStyle={
                                                  Object {
                                                    "minWidth": null,
                                                    "width": null,
                                                  }
                                                }
                                                popupTransitionName="ant-slide-up"
                                                prefixCls="ant-select-dropdown"
                                                showAction={Array []}
                                              >
                                                <Selector
                                                  OptionList={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "OptionList",
                                                      "render": [Function],
                                                    }
                                                  }
                                                  activeDescendantId="create-category_space_id_list_0"
                                                  activeValue={null}
                                                  allowClear={true}
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  displayValues={Array []}
                                                  domRef={
                                                    Object {
                                                      "current": <div
                                                        class="ant-select-selector"
                                                      >
                                                        <span
                                                          class="ant-select-selection-search"
                                                        >
                                                          <input
                                                            aria-activedescendant="create-category_space_id_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="create-category_space_id_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="create-category_space_id_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="create-category_space_id"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </span>
                                                        <span
                                                          class="ant-select-selection-placeholder"
                                                        />
                                                      </div>,
                                                    }
                                                  }
                                                  dropdownClassName=""
                                                  dropdownMatchSelectWidth={true}
                                                  emptyOptions={true}
                                                  id="create-category_space_id"
                                                  inputElement={null}
                                                  inputIcon={
                                                    <React.Fragment>
                                                      <ForwardRef(LoadingOutlined)
                                                        spin={true}
                                                      />
                                                    </React.Fragment>
                                                  }
                                                  key="trigger"
                                                  loading={true}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  omitDomProps={
                                                    Array [
                                                      "inputValue",
                                                    ]
                                                  }
                                                  onDisplayValuesChange={[Function]}
                                                  onRemove={[Function]}
                                                  onSearch={[Function]}
                                                  onSearchSplit={[Function]}
                                                  onSearchSubmit={[Function]}
                                                  onToggleOpen={[Function]}
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  searchValue=""
                                                  showSearch={false}
                                                  tokenWithEnter={false}
                                                  transitionName="ant-slide-up"
                                                  values={Array []}
                                                >
                                                  <div
                                                    className="ant-select-selector"
                                                    onClick={[Function]}
                                                    onMouseDown={[Function]}
                                                  >
                                                    <SingleSelector
                                                      OptionList={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "OptionList",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      activeDescendantId="create-category_space_id_list_0"
                                                      activeValue={null}
                                                      allowClear={true}
                                                      className="ant-select-in-form-item"
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      displayValues={Array []}
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <span
                                                              class="ant-select-selection-search"
                                                            >
                                                              <input
                                                                aria-activedescendant="create-category_space_id_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="create-category_space_id_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="create-category_space_id_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="create-category_space_id"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />
                                                            </span>
                                                            <span
                                                              class="ant-select-selection-placeholder"
                                                            />
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      dropdownMatchSelectWidth={true}
                                                      emptyOptions={true}
                                                      id="create-category_space_id"
                                                      inputElement={null}
                                                      inputIcon={
                                                        <React.Fragment>
                                                          <ForwardRef(LoadingOutlined)
                                                            spin={true}
                                                          />
                                                        </React.Fragment>
                                                      }
                                                      inputRef={
                                                        Object {
                                                          "current": <input
                                                            aria-activedescendant="create-category_space_id_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="create-category_space_id_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="create-category_space_id_list"
                                                            autocomplete="off"
                                                            class="ant-select-selection-search-input"
                                                            id="create-category_space_id"
                                                            readonly=""
                                                            role="combobox"
                                                            style="opacity: 0;"
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />,
                                                        }
                                                      }
                                                      loading={true}
                                                      notFoundContent={
                                                        <Context.Consumer>
                                                          [Function]
                                                        </Context.Consumer>
                                                      }
                                                      omitDomProps={
                                                        Array [
                                                          "inputValue",
                                                        ]
                                                      }
                                                      onDisplayValuesChange={[Function]}
                                                      onInputChange={[Function]}
                                                      onInputCompositionEnd={[Function]}
                                                      onInputCompositionStart={[Function]}
                                                      onInputKeyDown={[Function]}
                                                      onInputMouseDown={[Function]}
                                                      onInputPaste={[Function]}
                                                      onRemove={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSplit={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placement="bottomLeft"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={false}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      values={Array []}
                                                    >
                                                      <span
                                                        className="ant-select-selection-search"
                                                      >
                                                        <Input
                                                          activeDescendantId="create-category_space_id_list_0"
                                                          attrs={Object {}}
                                                          editable={false}
                                                          id="create-category_space_id"
                                                          inputElement={null}
                                                          onChange={[Function]}
                                                          onCompositionEnd={[Function]}
                                                          onCompositionStart={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onPaste={[Function]}
                                                          prefixCls="ant-select"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-activedescendant="create-category_space_id_list_0"
                                                            aria-autocomplete="list"
                                                            aria-controls="create-category_space_id_list"
                                                            aria-haspopup="listbox"
                                                            aria-owns="create-category_space_id_list"
                                                            autoComplete="off"
                                                            className="ant-select-selection-search-input"
                                                            id="create-category_space_id"
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            readOnly={true}
                                                            role="combobox"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                              }
                                                            }
                                                            type="search"
                                                            unselectable="on"
                                                            value=""
                                                          />
                                                        </Input>
                                                      </span>
                                                      <span
                                                        className="ant-select-selection-placeholder"
                                                      />
                                                    </SingleSelector>
                                                  </div>
                                                </Selector>
                                              </Trigger>
                                            </SelectTrigger>
                                            <TransBtn
                                              className="ant-select-arrow ant-select-arrow-loading"
                                              customizeIcon={
                                                <React.Fragment>
                                                  <ForwardRef(LoadingOutlined)
                                                    spin={true}
                                                  />
                                                </React.Fragment>
                                              }
                                              customizeIconProps={
                                                Object {
                                                  "focused": false,
                                                  "loading": true,
                                                  "open": undefined,
                                                  "searchValue": "",
                                                  "showSearch": false,
                                                }
                                              }
                                            >
                                              <span
                                                aria-hidden={true}
                                                className="ant-select-arrow ant-select-arrow-loading"
                                                onMouseDown={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitUserSelect": "none",
                                                    "userSelect": "none",
                                                  }
                                                }
                                                unselectable="on"
                                              >
                                                <ForwardRef(LoadingOutlined)
                                                  spin={true}
                                                >
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "0 0 1024 1024",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "loading",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                    spin={true}
                                                  >
                                                    <span
                                                      aria-label="loading"
                                                      className="anticon anticon-loading anticon-spin"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "0 0 1024 1024",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "loading",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="loading"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-loading"
                                                          viewBox="0 0 1024 1024"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"
                                                            key="svg-loading-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(LoadingOutlined)>
                                              </span>
                                            </TransBtn>
                                          </div>
                                        </BaseSelect>
                                      </Select>
                                    </ForwardRef(InternalSelect)>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Posts"
                name="posts"
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Posts"
                  messageVariables={
                    Object {
                      "label": "Posts",
                    }
                  }
                  name="posts"
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_posts"
                    label="Posts"
                    messageVariables={
                      Object {
                        "label": "Posts",
                      }
                    }
                    name={
                      Array [
                        "posts",
                      ]
                    }
                    onMetaChange={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter the numeric value!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_posts"
                          label="Posts"
                          name="posts"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter the numeric value!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="create-category_posts"
                                title="Posts"
                              >
                                Posts
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Posts"
                          name={Array []}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter the numeric value!",
                                "required": true,
                              },
                            ]
                          }
                          status=""
                          touched={false}
                          validating={false}
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={
                                      <ForwardRef
                                        min={-1}
                                      />
                                    }
                                  >
                                    <ForwardRef
                                      id="create-category_posts"
                                      min={-1}
                                      onChange={[Function]}
                                    >
                                      <InputNumber
                                        className="ant-input-number-in-form-item"
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        id="create-category_posts"
                                        min={-1}
                                        onChange={[Function]}
                                        prefixCls="ant-input-number"
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                      >
                                        <div
                                          className="ant-input-number ant-input-number-in-form-item"
                                          onBlur={[Function]}
                                          onCompositionEnd={[Function]}
                                          onCompositionStart={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                        >
                                          <StepHandler
                                            downDisabled={false}
                                            downNode={
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              />
                                            }
                                            onStep={[Function]}
                                            prefixCls="ant-input-number"
                                            upDisabled={false}
                                            upNode={
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              />
                                            }
                                          >
                                            <div
                                              className="ant-input-number-handler-wrap"
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Increase Value"
                                                className="ant-input-number-handler ant-input-number-handler-up"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                role="button"
                                                unselectable="on"
                                              >
                                                <ForwardRef(UpOutlined)
                                                  className="ant-input-number-handler-up-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-up-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "up",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="up"
                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "up",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="up"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-up"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                            key="svg-up-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(UpOutlined)>
                                              </span>
                                              <span
                                                aria-disabled={false}
                                                aria-label="Decrease Value"
                                                className="ant-input-number-handler ant-input-number-handler-down"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                role="button"
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-input-number-handler-down-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-down-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </div>
                                          </StepHandler>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemin={-1}
                                              aria-valuenow={null}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="create-category_posts"
                                              onChange={[Function]}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Episodes"
                name="episodes"
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Episodes"
                  messageVariables={
                    Object {
                      "label": "Episodes",
                    }
                  }
                  name="episodes"
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_episodes"
                    label="Episodes"
                    messageVariables={
                      Object {
                        "label": "Episodes",
                      }
                    }
                    name={
                      Array [
                        "episodes",
                      ]
                    }
                    onMetaChange={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter the numeric value!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_episodes"
                          label="Episodes"
                          name="episodes"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter the numeric value!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="create-category_episodes"
                                title="Episodes"
                              >
                                Episodes
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Episodes"
                          name={Array []}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter the numeric value!",
                                "required": true,
                              },
                            ]
                          }
                          status=""
                          touched={false}
                          validating={false}
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={
                                      <ForwardRef
                                        min={-1}
                                      />
                                    }
                                  >
                                    <ForwardRef
                                      id="create-category_episodes"
                                      min={-1}
                                      onChange={[Function]}
                                    >
                                      <InputNumber
                                        className="ant-input-number-in-form-item"
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        id="create-category_episodes"
                                        min={-1}
                                        onChange={[Function]}
                                        prefixCls="ant-input-number"
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                      >
                                        <div
                                          className="ant-input-number ant-input-number-in-form-item"
                                          onBlur={[Function]}
                                          onCompositionEnd={[Function]}
                                          onCompositionStart={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                        >
                                          <StepHandler
                                            downDisabled={false}
                                            downNode={
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              />
                                            }
                                            onStep={[Function]}
                                            prefixCls="ant-input-number"
                                            upDisabled={false}
                                            upNode={
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              />
                                            }
                                          >
                                            <div
                                              className="ant-input-number-handler-wrap"
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Increase Value"
                                                className="ant-input-number-handler ant-input-number-handler-up"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                role="button"
                                                unselectable="on"
                                              >
                                                <ForwardRef(UpOutlined)
                                                  className="ant-input-number-handler-up-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-up-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "up",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="up"
                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "up",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="up"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-up"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                            key="svg-up-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(UpOutlined)>
                                              </span>
                                              <span
                                                aria-disabled={false}
                                                aria-label="Decrease Value"
                                                className="ant-input-number-handler ant-input-number-handler-down"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                role="button"
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-input-number-handler-down-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-down-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </div>
                                          </StepHandler>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemin={-1}
                                              aria-valuenow={null}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="create-category_episodes"
                                              onChange={[Function]}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Media"
                name="media"
                rules={
                  Array [
                    Object {
                      "message": "Please enter the numeric value!",
                      "required": true,
                    },
                  ]
                }
              >
                <WrapperField
                  label="Media"
                  messageVariables={
                    Object {
                      "label": "Media",
                    }
                  }
                  name="media"
                  onMetaChange={[Function]}
                  rules={
                    Array [
                      Object {
                        "message": "Please enter the numeric value!",
                        "required": true,
                      },
                    ]
                  }
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_media"
                    label="Media"
                    messageVariables={
                      Object {
                        "label": "Media",
                      }
                    }
                    name={
                      Array [
                        "media",
                      ]
                    }
                    onMetaChange={[Function]}
                    rules={
                      Array [
                        Object {
                          "message": "Please enter the numeric value!",
                          "required": true,
                        },
                      ]
                    }
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_media"
                          label="Media"
                          name="media"
                          prefixCls="ant-form"
                          required={true}
                          requiredMark={true}
                          rules={
                            Array [
                              Object {
                                "message": "Please enter the numeric value!",
                                "required": true,
                              },
                            ]
                          }
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className="ant-form-item-required"
                                htmlFor="create-category_media"
                                title="Media"
                              >
                                Media
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Media"
                          name={Array []}
                          prefixCls="ant-form"
                          rules={
                            Array [
                              Object {
                                "message": "Please enter the numeric value!",
                                "required": true,
                              },
                            ]
                          }
                          status=""
                          touched={false}
                          validating={false}
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={
                                      <ForwardRef
                                        min={-1}
                                      />
                                    }
                                  >
                                    <ForwardRef
                                      id="create-category_media"
                                      min={-1}
                                      onChange={[Function]}
                                    >
                                      <InputNumber
                                        className="ant-input-number-in-form-item"
                                        downHandler={
                                          <ForwardRef(DownOutlined)
                                            className="ant-input-number-handler-down-inner"
                                          />
                                        }
                                        id="create-category_media"
                                        min={-1}
                                        onChange={[Function]}
                                        prefixCls="ant-input-number"
                                        upHandler={
                                          <ForwardRef(UpOutlined)
                                            className="ant-input-number-handler-up-inner"
                                          />
                                        }
                                      >
                                        <div
                                          className="ant-input-number ant-input-number-in-form-item"
                                          onBlur={[Function]}
                                          onCompositionEnd={[Function]}
                                          onCompositionStart={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                        >
                                          <StepHandler
                                            downDisabled={false}
                                            downNode={
                                              <ForwardRef(DownOutlined)
                                                className="ant-input-number-handler-down-inner"
                                              />
                                            }
                                            onStep={[Function]}
                                            prefixCls="ant-input-number"
                                            upDisabled={false}
                                            upNode={
                                              <ForwardRef(UpOutlined)
                                                className="ant-input-number-handler-up-inner"
                                              />
                                            }
                                          >
                                            <div
                                              className="ant-input-number-handler-wrap"
                                            >
                                              <span
                                                aria-disabled={false}
                                                aria-label="Increase Value"
                                                className="ant-input-number-handler ant-input-number-handler-up"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                role="button"
                                                unselectable="on"
                                              >
                                                <ForwardRef(UpOutlined)
                                                  className="ant-input-number-handler-up-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-up-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "up",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="up"
                                                      className="anticon anticon-up ant-input-number-handler-up-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "up",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="up"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-up"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                                                            key="svg-up-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(UpOutlined)>
                                              </span>
                                              <span
                                                aria-disabled={false}
                                                aria-label="Decrease Value"
                                                className="ant-input-number-handler ant-input-number-handler-down"
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                role="button"
                                                unselectable="on"
                                              >
                                                <ForwardRef(DownOutlined)
                                                  className="ant-input-number-handler-down-inner"
                                                >
                                                  <AntdIcon
                                                    className="ant-input-number-handler-down-inner"
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "down",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="down"
                                                      className="anticon anticon-down ant-input-number-handler-down-inner"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "down",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="down"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-down"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                            key="svg-down-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DownOutlined)>
                                              </span>
                                            </div>
                                          </StepHandler>
                                          <div
                                            className="ant-input-number-input-wrap"
                                          >
                                            <input
                                              aria-valuemin={-1}
                                              aria-valuenow={null}
                                              autoComplete="off"
                                              className="ant-input-number-input"
                                              id="create-category_media"
                                              onChange={[Function]}
                                              role="spinbutton"
                                              step={1}
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </InputNumber>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Fact Check"
                name="fact_check"
                valuePropName="checked"
              >
                <WrapperField
                  label="Fact Check"
                  messageVariables={
                    Object {
                      "label": "Fact Check",
                    }
                  }
                  name="fact_check"
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_fact_check"
                    label="Fact Check"
                    messageVariables={
                      Object {
                        "label": "Fact Check",
                      }
                    }
                    name={
                      Array [
                        "fact_check",
                      ]
                    }
                    onMetaChange={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="checked"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_fact_check"
                          label="Fact Check"
                          name="fact_check"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                          valuePropName="checked"
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="create-category_fact_check"
                                title="Fact Check"
                              >
                                Fact Check
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Fact Check"
                          name={Array []}
                          prefixCls="ant-form"
                          status=""
                          touched={false}
                          validating={false}
                          valuePropName="checked"
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={<ForwardRef />}
                                  >
                                    <Switch
                                      id="create-category_fact_check"
                                      onChange={[Function]}
                                    >
                                      <Wave
                                        insertExtraNode={true}
                                      >
                                        <Switch
                                          className=""
                                          id="create-category_fact_check"
                                          loadingIcon={
                                            <div
                                              className="ant-switch-handle"
                                            />
                                          }
                                          onChange={[Function]}
                                          prefixCls="ant-switch"
                                        >
                                          <button
                                            aria-checked={false}
                                            className="ant-switch"
                                            id="create-category_fact_check"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="switch"
                                            type="button"
                                          >
                                            <div
                                              className="ant-switch-handle"
                                            />
                                            <span
                                              className="ant-switch-inner"
                                            />
                                          </button>
                                        </Switch>
                                      </Wave>
                                    </Switch>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Podcast"
                name="podcast"
                valuePropName="checked"
              >
                <WrapperField
                  label="Podcast"
                  messageVariables={
                    Object {
                      "label": "Podcast",
                    }
                  }
                  name="podcast"
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                  valuePropName="checked"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_podcast"
                    label="Podcast"
                    messageVariables={
                      Object {
                        "label": "Podcast",
                      }
                    }
                    name={
                      Array [
                        "podcast",
                      ]
                    }
                    onMetaChange={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="checked"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_podcast"
                          label="Podcast"
                          name="podcast"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                          valuePropName="checked"
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="create-category_podcast"
                                title="Podcast"
                              >
                                Podcast
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Podcast"
                          name={Array []}
                          prefixCls="ant-form"
                          status=""
                          touched={false}
                          validating={false}
                          valuePropName="checked"
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={<ForwardRef />}
                                  >
                                    <Switch
                                      id="create-category_podcast"
                                      onChange={[Function]}
                                    >
                                      <Wave
                                        insertExtraNode={true}
                                      >
                                        <Switch
                                          className=""
                                          id="create-category_podcast"
                                          loadingIcon={
                                            <div
                                              className="ant-switch-handle"
                                            />
                                          }
                                          onChange={[Function]}
                                          prefixCls="ant-switch"
                                        >
                                          <button
                                            aria-checked={false}
                                            className="ant-switch"
                                            id="create-category_podcast"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            role="switch"
                                            type="button"
                                          >
                                            <div
                                              className="ant-switch-handle"
                                            />
                                            <span
                                              className="ant-switch-inner"
                                            />
                                          </button>
                                        </Switch>
                                      </Wave>
                                    </Switch>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                label="Description"
                name="description"
              >
                <WrapperField
                  label="Description"
                  messageVariables={
                    Object {
                      "label": "Description",
                    }
                  }
                  name="description"
                  onMetaChange={[Function]}
                  trigger="onChange"
                  validateTrigger="onChange"
                >
                  <Field
                    fieldContext={
                      Object {
                        "__INTERNAL__": Object {
                          "itemRef": [Function],
                          "name": "create-category",
                        },
                        "_init": true,
                        "getFieldError": [Function],
                        "getFieldInstance": [Function],
                        "getFieldValue": [Function],
                        "getFieldWarning": [Function],
                        "getFieldsError": [Function],
                        "getFieldsValue": [Function],
                        "getInternalHooks": [Function],
                        "isFieldTouched": [Function],
                        "isFieldValidating": [Function],
                        "isFieldsTouched": [Function],
                        "isFieldsValidating": [Function],
                        "resetFields": [Function],
                        "scrollToField": [Function],
                        "setFields": [Function],
                        "setFieldsValue": [Function],
                        "submit": [Function],
                        "validateFields": [Function],
                        "validateTrigger": "onChange",
                      }
                    }
                    key="_description"
                    label="Description"
                    messageVariables={
                      Object {
                        "label": "Description",
                      }
                    }
                    name={
                      Array [
                        "description",
                      ]
                    }
                    onMetaChange={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                    valuePropName="value"
                  >
                    <Row
                      className="ant-form-item"
                      key="row"
                    >
                      <div
                        className="ant-row ant-form-item"
                        role="row"
                        style={Object {}}
                      >
                        <FormItemLabel
                          htmlFor="create-category_description"
                          label="Description"
                          name="description"
                          prefixCls="ant-form"
                          required={false}
                          requiredMark={true}
                        >
                          <Col
                            className="ant-form-item-label"
                            span={10}
                          >
                            <div
                              className="ant-col ant-col-10 ant-form-item-label"
                              role="cell"
                              style={Object {}}
                            >
                              <label
                                className=""
                                htmlFor="create-category_description"
                                title="Description"
                              >
                                Description
                              </label>
                            </div>
                          </Col>
                        </FormItemLabel>
                        <FormItemInput
                          errors={Array []}
                          label="Description"
                          name={Array []}
                          prefixCls="ant-form"
                          status=""
                          touched={false}
                          validating={false}
                          warnings={Array []}
                        >
                          <Col
                            className="ant-form-item-control"
                            span={8}
                          >
                            <div
                              className="ant-col ant-col-8 ant-form-item-control"
                              role="cell"
                              style={Object {}}
                            >
                              <div
                                className="ant-form-item-control-input"
                              >
                                <div
                                  className="ant-form-item-control-input-content"
                                >
                                  <Component
                                    update={<ForwardRef />}
                                  >
                                    <ForwardRef
                                      id="create-category_description"
                                      onChange={[Function]}
                                    >
                                      <ClearableLabeledInput
                                        bordered={true}
                                        element={
                                          <TextArea
                                            className=""
                                            id="create-category_description"
                                            onChange={[Function]}
                                            onCompositionEnd={[Function]}
                                            onCompositionStart={[Function]}
                                            prefixCls="ant-input"
                                          />
                                        }
                                        handleReset={[Function]}
                                        id="create-category_description"
                                        inputType="text"
                                        prefixCls="ant-input"
                                        value=""
                                      >
                                        <TextArea
                                          className=""
                                          id="create-category_description"
                                          onChange={[Function]}
                                          onCompositionEnd={[Function]}
                                          onCompositionStart={[Function]}
                                          prefixCls="ant-input"
                                          value=""
                                        >
                                          <ResizableTextArea
                                            className=""
                                            id="create-category_description"
                                            onChange={[Function]}
                                            onCompositionEnd={[Function]}
                                            onCompositionStart={[Function]}
                                            onKeyDown={[Function]}
                                            prefixCls="ant-input"
                                            value=""
                                          >
                                            <ResizeObserver
                                              disabled={true}
                                              onResize={[Function]}
                                            >
                                              <SingleObserver
                                                disabled={true}
                                                key="rc-observer-key-0"
                                                onResize={[Function]}
                                              >
                                                <DomWrapper>
                                                  <textarea
                                                    className="ant-input"
                                                    id="create-category_description"
                                                    onChange={[Function]}
                                                    onCompositionEnd={[Function]}
                                                    onCompositionStart={[Function]}
                                                    onKeyDown={[Function]}
                                                    style={Object {}}
                                                    value=""
                                                  />
                                                </DomWrapper>
                                              </SingleObserver>
                                            </ResizeObserver>
                                          </ResizableTextArea>
                                        </TextArea>
                                      </ClearableLabeledInput>
                                    </ForwardRef>
                                  </Component>
                                </div>
                              </div>
                              <ErrorList
                                className="ant-form-item-explain-connected"
                                errors={Array []}
                                helpStatus=""
                                warnings={Array []}
                              >
                                <CSSMotion
                                  motionAppear={false}
                                  motionDeadline={500}
                                  motionEnter={false}
                                  motionName="ant-show-help"
                                  onAppearActive={[Function]}
                                  onAppearEnd={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterEnd={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveEnd={[Function]}
                                  onLeaveStart={[Function]}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </ErrorList>
                            </div>
                          </Col>
                        </FormItemInput>
                      </div>
                    </Row>
                  </Field>
                </WrapperField>
              </FormItem>
              <FormItem
                wrapperCol={
                  Object {
                    "offset": 10,
                    "span": 14,
                  }
                }
              >
                <Row
                  className="ant-form-item"
                  key="row"
                >
                  <div
                    className="ant-row ant-form-item"
                    role="row"
                    style={Object {}}
                  >
                    <FormItemLabel
                      prefixCls="ant-form"
                      requiredMark={true}
                      wrapperCol={
                        Object {
                          "offset": 10,
                          "span": 14,
                        }
                      }
                    />
                    <FormItemInput
                      errors={Array []}
                      name={Array []}
                      prefixCls="ant-form"
                      status=""
                      touched={false}
                      validating={false}
                      warnings={Array []}
                      wrapperCol={
                        Object {
                          "offset": 10,
                          "span": 14,
                        }
                      }
                    >
                      <Col
                        className="ant-form-item-control"
                        offset={10}
                        span={14}
                      >
                        <div
                          className="ant-col ant-col-14 ant-col-offset-10 ant-form-item-control"
                          role="cell"
                          style={Object {}}
                        >
                          <div
                            className="ant-form-item-control-input"
                          >
                            <div
                              className="ant-form-item-control-input-content"
                            >
                              <Space>
                                <div
                                  className="ant-space ant-space-horizontal ant-space-align-center"
                                  style={Object {}}
                                >
                                  <Item
                                    className="ant-space-item"
                                    direction="horizontal"
                                    index={0}
                                    key="ant-space-item-0"
                                    marginDirection="marginRight"
                                    wrap={false}
                                  >
                                    <div
                                      className="ant-space-item"
                                      style={
                                        Object {
                                          "marginRight": 8,
                                        }
                                      }
                                    >
                                      <Button
                                        htmlType="submit"
                                        type="primary"
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-primary"
                                            onClick={[Function]}
                                            type="submit"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Submit
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                  </Item>
                                  <Item
                                    className="ant-space-item"
                                    direction="horizontal"
                                    index={1}
                                    key="ant-space-item-1"
                                    marginDirection="marginRight"
                                    wrap={false}
                                  >
                                    <div
                                      className="ant-space-item"
                                      style={Object {}}
                                    >
                                      <Button
                                        htmlType="button"
                                        onClick={[Function]}
                                      >
                                        <Wave
                                          disabled={false}
                                        >
                                          <button
                                            className="ant-btn ant-btn-default"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              Reset
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </div>
                                  </Item>
                                </div>
                              </Space>
                            </div>
                          </div>
                          <ErrorList
                            className="ant-form-item-explain-connected"
                            errors={Array []}
                            helpStatus=""
                            warnings={Array []}
                          >
                            <CSSMotion
                              motionAppear={false}
                              motionDeadline={500}
                              motionEnter={false}
                              motionName="ant-show-help"
                              onAppearActive={[Function]}
                              onAppearEnd={[Function]}
                              onAppearStart={[Function]}
                              onEnterActive={[Function]}
                              onEnterEnd={[Function]}
                              onEnterStart={[Function]}
                              onLeaveActive={[Function]}
                              onLeaveEnd={[Function]}
                              onLeaveStart={[Function]}
                              visible={false}
                            >
                              <DomWrapper />
                            </CSSMotion>
                          </ErrorList>
                        </div>
                      </Col>
                    </FormItemInput>
                  </div>
                </Row>
              </FormItem>
            </form>
          </ForwardRef(Form)>
        </SizeContextProvider>
      </ForwardRef(InternalForm)>
    </RequestForm>
  </CreateSpaceRequest>
</Provider>
`;
