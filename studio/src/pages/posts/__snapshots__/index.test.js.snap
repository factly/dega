// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Posts List component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Posts
        formats={
          Object {
            "article": Object {
              "id": 1,
              "name": "article",
              "slug": "article",
            },
            "factcheck": Object {
              "id": 2,
              "name": "factcheck",
              "slug": "fact-check",
            },
            "loading": false,
          }
        }
        permission={
          Object {
            "actions": Array [
              "create",
            ],
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
            style={Object {}}
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <HelmetWrapper
                  defer={true}
                  encodeSpecialCharacters={true}
                  title="Posts"
                >
                  <SideEffect(NullComponent)
                    defer={true}
                    encodeSpecialCharacters={true}
                    title="Posts"
                  >
                    <NullComponent
                      defer={true}
                      encodeSpecialCharacters={true}
                      title="Posts"
                    />
                  </SideEffect(NullComponent)>
                </HelmetWrapper>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Template
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                      "slug": "article",
                    }
                  }
                >
                  <Spin
                    size="default"
                    spinning={true}
                    style={
                      Object {
                        "marginLeft": "50%",
                      }
                    }
                    wrapperClassName=""
                  >
                    <div
                      className="ant-spin ant-spin-spinning"
                      style={
                        Object {
                          "marginLeft": "50%",
                        }
                      }
                    >
                      <span
                        className="ant-spin-dot ant-spin-dot-spin"
                      >
                        <i
                          className="ant-spin-dot-item"
                        />
                        <i
                          className="ant-spin-dot-item"
                        />
                        <i
                          className="ant-spin-dot-item"
                        />
                        <i
                          className="ant-spin-dot-item"
                        />
                      </span>
                    </div>
                  </Spin>
                </Template>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={2}
              key="ant-space-item-2"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <ForwardRef(InternalForm)
                  className="ant-advanced-search-form"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  initialValues={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 10,
                      "page": 1,
                      "sort": "desc",
                    }
                  }
                  name="filters"
                  onFinish={[Function]}
                  onValuesChange={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <SizeContextProvider>
                    <ForwardRef(Form)
                      className="ant-form ant-form-horizontal ant-advanced-search-form"
                      form={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": "filters",
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                        }
                      }
                      id="filters"
                      initialValues={
                        Object {
                          "format": Array [
                            1,
                          ],
                          "limit": 10,
                          "page": 1,
                          "sort": "desc",
                        }
                      }
                      name="filters"
                      onFinish={[Function]}
                      onFinishFailed={[Function]}
                      onValuesChange={[Function]}
                      style={
                        Object {
                          "maxWidth": "100%",
                        }
                      }
                    >
                      <form
                        className="ant-form ant-form-horizontal ant-advanced-search-form"
                        id="filters"
                        onReset={[Function]}
                        onSubmit={[Function]}
                        style={
                          Object {
                            "maxWidth": "100%",
                          }
                        }
                      >
                        <Row
                          gutter={16}
                          justify="end"
                          style={
                            Object {
                              "marginBottom": "1rem",
                            }
                          }
                        >
                          <div
                            className="ant-row ant-row-end"
                            style={
                              Object {
                                "marginBottom": "1rem",
                                "marginLeft": -8,
                                "marginRight": -8,
                              }
                            }
                          >
                            <Col
                              key="2"
                              style={
                                Object {
                                  "display": "flex",
                                  "justifyContent": "end",
                                }
                              }
                            >
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "display": "flex",
                                    "justifyContent": "end",
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <FormItem
                                  name="q"
                                >
                                  <WrapperField
                                    messageVariables={
                                      Object {
                                        "label": "q",
                                      }
                                    }
                                    name="q"
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "filters",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_q"
                                      messageVariables={
                                        Object {
                                          "label": "q",
                                        }
                                      }
                                      name={
                                        Array [
                                          "q",
                                        ]
                                      }
                                      onReset={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="filters_q"
                                            name="q"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          />
                                          <FormItemInput
                                            errors={Array []}
                                            name={
                                              Array [
                                                "q",
                                              ]
                                            }
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                    >
                                                      <Input
                                                        id="filters_q"
                                                        onChange={[Function]}
                                                        placeholder="Search posts"
                                                        type="text"
                                                      >
                                                        <ClearableLabeledInput
                                                          bordered={true}
                                                          element={
                                                            <input
                                                              className="ant-input"
                                                              id="filters_q"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="Search posts"
                                                              type="text"
                                                            />
                                                          }
                                                          focused={false}
                                                          handleReset={[Function]}
                                                          id="filters_q"
                                                          inputType="input"
                                                          onChange={[Function]}
                                                          placeholder="Search posts"
                                                          prefixCls="ant-input"
                                                          triggerFocus={[Function]}
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="filters_q"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            placeholder="Search posts"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </ClearableLabeledInput>
                                                      </Input>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                                <FormItem>
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        prefixCls="ant-form"
                                        requiredMark={true}
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        validateStatus=""
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Button
                                                  htmlType="submit"
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn"
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Search
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </FormItem>
                              </div>
                            </Col>
                            <Col
                              key="4"
                            >
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <FormItem
                                  name="status"
                                >
                                  <WrapperField
                                    messageVariables={
                                      Object {
                                        "label": "status",
                                      }
                                    }
                                    name="status"
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "filters",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_status"
                                      messageVariables={
                                        Object {
                                          "label": "status",
                                        }
                                      }
                                      name={
                                        Array [
                                          "status",
                                        ]
                                      }
                                      onReset={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="filters_status"
                                            name="status"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          />
                                          <FormItemInput
                                            errors={Array []}
                                            name={
                                              Array [
                                                "status",
                                              ]
                                            }
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                    >
                                                      <ForwardRef(InternalSelect)
                                                        defaultValue="all"
                                                        id="filters_status"
                                                        onChange={[Function]}
                                                      >
                                                        <Select
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue="all"
                                                          dropdownClassName=""
                                                          id="filters_status"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          transitionName="ant-slide-up"
                                                        >
                                                          <ForwardRef(Select)
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="all"
                                                            dropdownClassName=""
                                                            id="filters_status"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            transitionName="ant-slide-up"
                                                          >
                                                            <div
                                                              className="ant-select ant-select-single ant-select-show-arrow"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SelectTrigger
                                                                containerWidth={null}
                                                                dropdownClassName=""
                                                                empty={false}
                                                                getTriggerDOMNode={[Function]}
                                                                popupElement={
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={
                                                                      Array [
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: All",
                                                                            "key": "all",
                                                                            "value": "all",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "all",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: Draft",
                                                                            "key": "draft",
                                                                            "value": "draft",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "draft",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: Publish",
                                                                            "key": "publish",
                                                                            "value": "publish",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "publish",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: Ready to Publish",
                                                                            "key": "ready",
                                                                            "value": "ready",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "ready",
                                                                        },
                                                                      ]
                                                                    }
                                                                    height={256}
                                                                    id="filters_status"
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "children": "Status: All",
                                                                          "key": "all",
                                                                          "value": "all",
                                                                        },
                                                                        Object {
                                                                          "children": "Status: Draft",
                                                                          "key": "draft",
                                                                          "value": "draft",
                                                                        },
                                                                        Object {
                                                                          "children": "Status: Publish",
                                                                          "key": "publish",
                                                                          "value": "publish",
                                                                        },
                                                                        Object {
                                                                          "children": "Status: Ready to Publish",
                                                                          "key": "ready",
                                                                          "value": "ready",
                                                                        },
                                                                      ]
                                                                    }
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        "all",
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                }
                                                                prefixCls="ant-select"
                                                                transitionName="ant-slide-up"
                                                              >
                                                                <Trigger
                                                                  action={Array []}
                                                                  afterPopupVisibleChange={[Function]}
                                                                  autoDestroy={false}
                                                                  blurDelay={0.15}
                                                                  builtinPlacements={
                                                                    Object {
                                                                      "bottomLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tl",
                                                                          "bl",
                                                                        ],
                                                                      },
                                                                      "bottomRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tr",
                                                                          "br",
                                                                        ],
                                                                      },
                                                                      "topLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "bl",
                                                                          "tl",
                                                                        ],
                                                                      },
                                                                      "topRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "br",
                                                                          "tr",
                                                                        ],
                                                                      },
                                                                    }
                                                                  }
                                                                  defaultPopupVisible={false}
                                                                  destroyPopupOnHide={false}
                                                                  focusDelay={0}
                                                                  getDocument={[Function]}
                                                                  getPopupClassNameFromAlign={[Function]}
                                                                  getTriggerDOMNode={[Function]}
                                                                  hideAction={Array []}
                                                                  mask={false}
                                                                  maskClosable={true}
                                                                  mouseEnterDelay={0}
                                                                  mouseLeaveDelay={0.1}
                                                                  onPopupAlign={[Function]}
                                                                  onPopupVisibleChange={[Function]}
                                                                  popup={
                                                                    <div>
                                                                      <ForwardRef(OptionList)
                                                                        childrenAsData={true}
                                                                        defaultActiveFirstOption={true}
                                                                        flattenOptions={
                                                                          Array [
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: All",
                                                                                "key": "all",
                                                                                "value": "all",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "all",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: Draft",
                                                                                "key": "draft",
                                                                                "value": "draft",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "draft",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: Publish",
                                                                                "key": "publish",
                                                                                "value": "publish",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "publish",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: Ready to Publish",
                                                                                "key": "ready",
                                                                                "value": "ready",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "ready",
                                                                            },
                                                                          ]
                                                                        }
                                                                        height={256}
                                                                        id="filters_status"
                                                                        itemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onActiveValue={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        options={
                                                                          Array [
                                                                            Object {
                                                                              "children": "Status: All",
                                                                              "key": "all",
                                                                              "value": "all",
                                                                            },
                                                                            Object {
                                                                              "children": "Status: Draft",
                                                                              "key": "draft",
                                                                              "value": "draft",
                                                                            },
                                                                            Object {
                                                                              "children": "Status: Publish",
                                                                              "key": "publish",
                                                                              "value": "publish",
                                                                            },
                                                                            Object {
                                                                              "children": "Status: Ready to Publish",
                                                                              "key": "ready",
                                                                              "value": "ready",
                                                                            },
                                                                          ]
                                                                        }
                                                                        prefixCls="ant-select"
                                                                        searchValue=""
                                                                        values={
                                                                          Set {
                                                                            "all",
                                                                          }
                                                                        }
                                                                        virtual={true}
                                                                      />
                                                                    </div>
                                                                  }
                                                                  popupAlign={Object {}}
                                                                  popupClassName=""
                                                                  popupPlacement="bottomLeft"
                                                                  popupStyle={
                                                                    Object {
                                                                      "minWidth": null,
                                                                      "width": null,
                                                                    }
                                                                  }
                                                                  popupTransitionName="ant-slide-up"
                                                                  prefixCls="ant-select-dropdown"
                                                                  showAction={Array []}
                                                                >
                                                                  <Selector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue="all"
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_status_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_status_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_status_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_status"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                            title="Status: All"
                                                                          >
                                                                            Status: All
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    id="filters_status"
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    key="trigger"
                                                                    listHeight={256}
                                                                    listItemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={false}
                                                                    tokenWithEnter={false}
                                                                    transitionName="ant-slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": "all",
                                                                          "label": "Status: All",
                                                                          "value": "all",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="ant-select-selector"
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <SingleSelector
                                                                        accessibilityIndex={0}
                                                                        activeValue={null}
                                                                        className=""
                                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                        defaultValue="all"
                                                                        domRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="ant-select-selector"
                                                                            >
                                                                              <span
                                                                                class="ant-select-selection-search"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="filters_status_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="filters_status_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="filters_status_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="filters_status"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                              </span>
                                                                              <span
                                                                                class="ant-select-selection-item"
                                                                                title="Status: All"
                                                                              >
                                                                                Status: All
                                                                              </span>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                        dropdownClassName=""
                                                                        id="filters_status"
                                                                        inputElement={null}
                                                                        inputIcon={[Function]}
                                                                        inputRef={
                                                                          Object {
                                                                            "current": <input
                                                                              aria-activedescendant="filters_status_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_status_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_status_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_status"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />,
                                                                          }
                                                                        }
                                                                        listHeight={256}
                                                                        listItemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onChange={[Function]}
                                                                        onInputChange={[Function]}
                                                                        onInputCompositionEnd={[Function]}
                                                                        onInputCompositionStart={[Function]}
                                                                        onInputKeyDown={[Function]}
                                                                        onInputMouseDown={[Function]}
                                                                        onInputPaste={[Function]}
                                                                        onSearch={[Function]}
                                                                        onSearchSubmit={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        prefixCls="ant-select"
                                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                                        searchValue=""
                                                                        showSearch={false}
                                                                        tokenWithEnter={false}
                                                                        transitionName="ant-slide-up"
                                                                        values={
                                                                          Array [
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "all",
                                                                              "label": "Status: All",
                                                                              "value": "all",
                                                                            },
                                                                          ]
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="ant-select-selection-search"
                                                                        >
                                                                          <Input
                                                                            accessibilityIndex={0}
                                                                            attrs={Object {}}
                                                                            editable={false}
                                                                            id="filters_status"
                                                                            inputElement={null}
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            prefixCls="ant-select"
                                                                            value=""
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_status_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_status_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_status_list"
                                                                              autoComplete="off"
                                                                              className="ant-select-selection-search-input"
                                                                              id="filters_status"
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              readOnly={true}
                                                                              role="combobox"
                                                                              style={
                                                                                Object {
                                                                                  "opacity": 0,
                                                                                }
                                                                              }
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </Input>
                                                                        </span>
                                                                        <span
                                                                          className="ant-select-selection-item"
                                                                          title="Status: All"
                                                                        >
                                                                          Status: All
                                                                        </span>
                                                                      </SingleSelector>
                                                                    </div>
                                                                  </Selector>
                                                                </Trigger>
                                                              </SelectTrigger>
                                                              <TransBtn
                                                                className="ant-select-arrow"
                                                                customizeIcon={[Function]}
                                                                customizeIconProps={
                                                                  Object {
                                                                    "focused": false,
                                                                    "loading": undefined,
                                                                    "open": undefined,
                                                                    "searchValue": "",
                                                                    "showSearch": false,
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-arrow"
                                                                  onMouseDown={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "WebkitUserSelect": "none",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                  unselectable="on"
                                                                >
                                                                  <ForwardRef(DownOutlined)
                                                                    className="ant-select-suffix"
                                                                  >
                                                                    <AntdIcon
                                                                      className="ant-select-suffix"
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "down",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-label="down"
                                                                        className="anticon anticon-down ant-select-suffix"
                                                                        role="img"
                                                                      >
                                                                        <IconReact
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "down",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="down"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            key="svg-down"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                              key="svg-down-svg-0"
                                                                            />
                                                                          </svg>
                                                                        </IconReact>
                                                                      </span>
                                                                    </AntdIcon>
                                                                  </ForwardRef(DownOutlined)>
                                                                </span>
                                                              </TransBtn>
                                                            </div>
                                                          </ForwardRef(Select)>
                                                        </Select>
                                                      </ForwardRef(InternalSelect)>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                            <Col>
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <FormItem
                                  name="sort"
                                >
                                  <WrapperField
                                    messageVariables={
                                      Object {
                                        "label": "sort",
                                      }
                                    }
                                    name="sort"
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "filters",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_sort"
                                      messageVariables={
                                        Object {
                                          "label": "sort",
                                        }
                                      }
                                      name={
                                        Array [
                                          "sort",
                                        ]
                                      }
                                      onReset={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="filters_sort"
                                            name="sort"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          />
                                          <FormItemInput
                                            errors={Array []}
                                            name={
                                              Array [
                                                "sort",
                                              ]
                                            }
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                      value="desc"
                                                    >
                                                      <ForwardRef(InternalSelect)
                                                        defaultValue="desc"
                                                        id="filters_sort"
                                                        onChange={[Function]}
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value="desc"
                                                      >
                                                        <Select
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue="desc"
                                                          dropdownClassName=""
                                                          id="filters_sort"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          transitionName="ant-slide-up"
                                                          value="desc"
                                                        >
                                                          <ForwardRef(Select)
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="desc"
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            transitionName="ant-slide-up"
                                                            value="desc"
                                                          >
                                                            <div
                                                              className="ant-select ant-select-single ant-select-show-arrow"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                            >
                                                              <SelectTrigger
                                                                containerWidth={null}
                                                                dropdownClassName=""
                                                                empty={false}
                                                                getTriggerDOMNode={[Function]}
                                                                popupElement={
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={
                                                                      Array [
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Sort By: Latest",
                                                                            "key": "desc",
                                                                            "value": "desc",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "desc",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Sort By: Old",
                                                                            "key": "asc",
                                                                            "value": "asc",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "asc",
                                                                        },
                                                                      ]
                                                                    }
                                                                    height={256}
                                                                    id="filters_sort"
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "children": "Sort By: Latest",
                                                                          "key": "desc",
                                                                          "value": "desc",
                                                                        },
                                                                        Object {
                                                                          "children": "Sort By: Old",
                                                                          "key": "asc",
                                                                          "value": "asc",
                                                                        },
                                                                      ]
                                                                    }
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        "desc",
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                }
                                                                prefixCls="ant-select"
                                                                transitionName="ant-slide-up"
                                                              >
                                                                <Trigger
                                                                  action={Array []}
                                                                  afterPopupVisibleChange={[Function]}
                                                                  autoDestroy={false}
                                                                  blurDelay={0.15}
                                                                  builtinPlacements={
                                                                    Object {
                                                                      "bottomLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tl",
                                                                          "bl",
                                                                        ],
                                                                      },
                                                                      "bottomRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tr",
                                                                          "br",
                                                                        ],
                                                                      },
                                                                      "topLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "bl",
                                                                          "tl",
                                                                        ],
                                                                      },
                                                                      "topRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "br",
                                                                          "tr",
                                                                        ],
                                                                      },
                                                                    }
                                                                  }
                                                                  defaultPopupVisible={false}
                                                                  destroyPopupOnHide={false}
                                                                  focusDelay={0}
                                                                  getDocument={[Function]}
                                                                  getPopupClassNameFromAlign={[Function]}
                                                                  getTriggerDOMNode={[Function]}
                                                                  hideAction={Array []}
                                                                  mask={false}
                                                                  maskClosable={true}
                                                                  mouseEnterDelay={0}
                                                                  mouseLeaveDelay={0.1}
                                                                  onPopupAlign={[Function]}
                                                                  onPopupVisibleChange={[Function]}
                                                                  popup={
                                                                    <div>
                                                                      <ForwardRef(OptionList)
                                                                        childrenAsData={true}
                                                                        defaultActiveFirstOption={true}
                                                                        flattenOptions={
                                                                          Array [
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Sort By: Latest",
                                                                                "key": "desc",
                                                                                "value": "desc",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "desc",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Sort By: Old",
                                                                                "key": "asc",
                                                                                "value": "asc",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "asc",
                                                                            },
                                                                          ]
                                                                        }
                                                                        height={256}
                                                                        id="filters_sort"
                                                                        itemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onActiveValue={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        options={
                                                                          Array [
                                                                            Object {
                                                                              "children": "Sort By: Latest",
                                                                              "key": "desc",
                                                                              "value": "desc",
                                                                            },
                                                                            Object {
                                                                              "children": "Sort By: Old",
                                                                              "key": "asc",
                                                                              "value": "asc",
                                                                            },
                                                                          ]
                                                                        }
                                                                        prefixCls="ant-select"
                                                                        searchValue=""
                                                                        values={
                                                                          Set {
                                                                            "desc",
                                                                          }
                                                                        }
                                                                        virtual={true}
                                                                      />
                                                                    </div>
                                                                  }
                                                                  popupAlign={Object {}}
                                                                  popupClassName=""
                                                                  popupPlacement="bottomLeft"
                                                                  popupStyle={
                                                                    Object {
                                                                      "minWidth": null,
                                                                      "width": null,
                                                                    }
                                                                  }
                                                                  popupTransitionName="ant-slide-up"
                                                                  prefixCls="ant-select-dropdown"
                                                                  showAction={Array []}
                                                                >
                                                                  <Selector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue="desc"
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_sort_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_sort_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_sort_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_sort"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                            title="Sort By: Latest"
                                                                          >
                                                                            Sort By: Latest
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    id="filters_sort"
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    key="trigger"
                                                                    listHeight={256}
                                                                    listItemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={false}
                                                                    style={
                                                                      Object {
                                                                        "width": "100%",
                                                                      }
                                                                    }
                                                                    tokenWithEnter={false}
                                                                    transitionName="ant-slide-up"
                                                                    value="desc"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": "desc",
                                                                          "label": "Sort By: Latest",
                                                                          "value": "desc",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="ant-select-selector"
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <SingleSelector
                                                                        accessibilityIndex={0}
                                                                        activeValue={null}
                                                                        className=""
                                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                        defaultValue="desc"
                                                                        domRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="ant-select-selector"
                                                                            >
                                                                              <span
                                                                                class="ant-select-selection-search"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="filters_sort_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="filters_sort_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="filters_sort_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="filters_sort"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                              </span>
                                                                              <span
                                                                                class="ant-select-selection-item"
                                                                                title="Sort By: Latest"
                                                                              >
                                                                                Sort By: Latest
                                                                              </span>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                        dropdownClassName=""
                                                                        id="filters_sort"
                                                                        inputElement={null}
                                                                        inputIcon={[Function]}
                                                                        inputRef={
                                                                          Object {
                                                                            "current": <input
                                                                              aria-activedescendant="filters_sort_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_sort_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_sort_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_sort"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />,
                                                                          }
                                                                        }
                                                                        listHeight={256}
                                                                        listItemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onChange={[Function]}
                                                                        onInputChange={[Function]}
                                                                        onInputCompositionEnd={[Function]}
                                                                        onInputCompositionStart={[Function]}
                                                                        onInputKeyDown={[Function]}
                                                                        onInputMouseDown={[Function]}
                                                                        onInputPaste={[Function]}
                                                                        onSearch={[Function]}
                                                                        onSearchSubmit={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        prefixCls="ant-select"
                                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                                        searchValue=""
                                                                        showSearch={false}
                                                                        style={
                                                                          Object {
                                                                            "width": "100%",
                                                                          }
                                                                        }
                                                                        tokenWithEnter={false}
                                                                        transitionName="ant-slide-up"
                                                                        value="desc"
                                                                        values={
                                                                          Array [
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "desc",
                                                                              "label": "Sort By: Latest",
                                                                              "value": "desc",
                                                                            },
                                                                          ]
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="ant-select-selection-search"
                                                                        >
                                                                          <Input
                                                                            accessibilityIndex={0}
                                                                            attrs={Object {}}
                                                                            editable={false}
                                                                            id="filters_sort"
                                                                            inputElement={null}
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            prefixCls="ant-select"
                                                                            value=""
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_sort_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_sort_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_sort_list"
                                                                              autoComplete="off"
                                                                              className="ant-select-selection-search-input"
                                                                              id="filters_sort"
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              readOnly={true}
                                                                              role="combobox"
                                                                              style={
                                                                                Object {
                                                                                  "opacity": 0,
                                                                                }
                                                                              }
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </Input>
                                                                        </span>
                                                                        <span
                                                                          className="ant-select-selection-item"
                                                                          title="Sort By: Latest"
                                                                        >
                                                                          Sort By: Latest
                                                                        </span>
                                                                      </SingleSelector>
                                                                    </div>
                                                                  </Selector>
                                                                </Trigger>
                                                              </SelectTrigger>
                                                              <TransBtn
                                                                className="ant-select-arrow"
                                                                customizeIcon={[Function]}
                                                                customizeIconProps={
                                                                  Object {
                                                                    "focused": false,
                                                                    "loading": undefined,
                                                                    "open": undefined,
                                                                    "searchValue": "",
                                                                    "showSearch": false,
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-arrow"
                                                                  onMouseDown={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "WebkitUserSelect": "none",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                  unselectable="on"
                                                                >
                                                                  <ForwardRef(DownOutlined)
                                                                    className="ant-select-suffix"
                                                                  >
                                                                    <AntdIcon
                                                                      className="ant-select-suffix"
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "down",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-label="down"
                                                                        className="anticon anticon-down ant-select-suffix"
                                                                        role="img"
                                                                      >
                                                                        <IconReact
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "down",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="down"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            key="svg-down"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                              key="svg-down-svg-0"
                                                                            />
                                                                          </svg>
                                                                        </IconReact>
                                                                      </span>
                                                                    </AntdIcon>
                                                                  </ForwardRef(DownOutlined)>
                                                                </span>
                                                              </TransBtn>
                                                            </div>
                                                          </ForwardRef(Select)>
                                                        </Select>
                                                      </ForwardRef(InternalSelect)>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                            <Button
                              onClick={[Function]}
                              type="link"
                            >
                              <button
                                className="ant-btn ant-btn-link"
                                onClick={[Function]}
                                type="button"
                              >
                                <LoadingIcon
                                  existIcon={false}
                                  loading={false}
                                  prefixCls="ant-btn"
                                >
                                  <CSSMotion
                                    motionName="ant-btn-loading-icon-motion"
                                    onAppearActive={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </LoadingIcon>
                                <span
                                  key=".0"
                                >
                                  More Filters 
                                  <ForwardRef(DownOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "down",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="down"
                                        className="anticon anticon-down"
                                        role="img"
                                      >
                                        <IconReact
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "down",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            data-icon="down"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-down"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                              key="svg-down-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(DownOutlined)>
                                </span>
                              </button>
                            </Button>
                            <Col
                              key="1"
                            >
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <Link
                                  to="/posts/create"
                                >
                                  <LinkAnchor
                                    href="/posts/create"
                                    navigate={[Function]}
                                  >
                                    <a
                                      href="/posts/create"
                                      onClick={[Function]}
                                    >
                                      <Button
                                        disabled={true}
                                        type="primary"
                                      >
                                        <Wave>
                                          <button
                                            className="ant-btn ant-btn-primary"
                                            disabled={true}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              New Post
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          gutter={16}
                        >
                          <div
                            className="ant-row"
                            style={
                              Object {
                                "marginLeft": -8,
                                "marginRight": -8,
                              }
                            }
                          />
                        </Row>
                      </form>
                    </ForwardRef(Form)>
                  </SizeContextProvider>
                </ForwardRef(InternalForm)>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={3}
              key="ant-space-item-3"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <PostList
                  actions={Array []}
                  data={
                    Object {
                      "authors": Object {},
                      "categories": Object {},
                      "loading": true,
                      "posts": Array [],
                      "tags": Object {},
                      "total": 0,
                    }
                  }
                  fetchPosts={[Function]}
                  filters={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 10,
                      "page": 1,
                      "sort": "desc",
                    }
                  }
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                      "slug": "article",
                    }
                  }
                  onPagination={[Function]}
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                      style={Object {}}
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Table
                            columns={
                              Array [
                                Object {
                                  "dataIndex": "title",
                                  "key": "title",
                                  "render": [Function],
                                  "title": "Title",
                                  "width": 400,
                                },
                                Object {
                                  "dataIndex": "categories",
                                  "ellipsis": true,
                                  "key": "categories",
                                  "render": [Function],
                                  "title": "Categories",
                                },
                                Object {
                                  "dataIndex": "tags",
                                  "ellipsis": true,
                                  "key": "tags",
                                  "render": [Function],
                                  "title": "Tags",
                                },
                                Object {
                                  "dataIndex": "status",
                                  "key": "status",
                                  "render": [Function],
                                  "title": "Status",
                                  "width": 200,
                                },
                                Object {
                                  "align": "center",
                                  "dataIndex": "actions",
                                  "fixed": "right",
                                  "render": [Function],
                                  "title": "Actions",
                                  "width": 240,
                                },
                              ]
                            }
                            dataSource={Array []}
                            expandable={
                              Object {
                                "expandIcon": [Function],
                                "expandIconColumnIndex": -1,
                                "expandedRowKeys": Array [
                                  0,
                                ],
                                "expandedRowRender": [Function],
                                "onExpand": [Function],
                              }
                            }
                            pagination={
                              Object {
                                "current": 1,
                                "onChange": [Function],
                                "pageSize": 10,
                                "pageSizeOptions": Array [
                                  "10",
                                  "15",
                                  "20",
                                ],
                                "total": 0,
                              }
                            }
                            rowKey={[Function]}
                          >
                            <div
                              className="ant-table-wrapper"
                            >
                              <Spin
                                size="default"
                                spinning={false}
                                wrapperClassName=""
                              >
                                <div
                                  className="ant-spin-nested-loading"
                                >
                                  <div
                                    className="ant-spin-container"
                                    key="container"
                                  >
                                    <Table
                                      className="ant-table-empty"
                                      columns={
                                        Array [
                                          Object {
                                            "dataIndex": "title",
                                            "key": "title",
                                            "render": [Function],
                                            "title": "Title",
                                            "width": 400,
                                          },
                                          Object {
                                            "dataIndex": "categories",
                                            "ellipsis": true,
                                            "key": "categories",
                                            "render": [Function],
                                            "title": "Categories",
                                          },
                                          Object {
                                            "dataIndex": "tags",
                                            "ellipsis": true,
                                            "key": "tags",
                                            "render": [Function],
                                            "title": "Tags",
                                          },
                                          Object {
                                            "dataIndex": "status",
                                            "key": "status",
                                            "render": [Function],
                                            "title": "Status",
                                            "width": 200,
                                          },
                                          Object {
                                            "align": "center",
                                            "dataIndex": "actions",
                                            "fixed": "right",
                                            "render": [Function],
                                            "title": "Actions",
                                            "width": 240,
                                          },
                                        ]
                                      }
                                      data={Array []}
                                      dataSource={Array []}
                                      emptyText={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      expandable={
                                        Object {
                                          "__PARENT_RENDER_ICON__": [Function],
                                          "childrenColumnName": undefined,
                                          "expandIcon": [Function],
                                          "expandIconColumnIndex": -1,
                                          "expandedRowKeys": Array [
                                            0,
                                          ],
                                          "expandedRowRender": [Function],
                                          "indentSize": 15,
                                          "onExpand": [Function],
                                        }
                                      }
                                      internalHooks="rc-table-internal-hook"
                                      internalRefs={
                                        Object {
                                          "body": Object {
                                            "current": <div
                                              class="ant-table-content"
                                            >
                                              <table
                                                style="table-layout: fixed;"
                                              >
                                                <colgroup>
                                                  <col
                                                    style="width: 400px;"
                                                  />
                                                  <col />
                                                  <col />
                                                  <col
                                                    style="width: 200px;"
                                                  />
                                                  <col
                                                    style="width: 240px;"
                                                  />
                                                </colgroup>
                                                <thead
                                                  class="ant-table-thead"
                                                >
                                                  <tr>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Title
                                                    </th>
                                                    <th
                                                      class="ant-table-cell ant-table-cell-ellipsis"
                                                      title="Categories"
                                                    >
                                                      Categories
                                                    </th>
                                                    <th
                                                      class="ant-table-cell ant-table-cell-ellipsis"
                                                      title="Tags"
                                                    >
                                                      Tags
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Status
                                                    </th>
                                                    <th
                                                      class="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                                      style="text-align: center; position: sticky; right: 0px;"
                                                    >
                                                      Actions
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  class="ant-table-tbody"
                                                >
                                                  <tr
                                                    class="ant-table-placeholder"
                                                  >
                                                    <td
                                                      class="ant-table-cell"
                                                      colspan="5"
                                                    >
                                                      <div
                                                        class="ant-empty ant-empty-normal"
                                                      >
                                                        <div
                                                          class="ant-empty-image"
                                                        >
                                                          <svg
                                                            class="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fill-rule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                class="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                class="ant-empty-img-simple-g"
                                                                fill-rule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  class="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </div>
                                                        <div
                                                          class="ant-empty-description"
                                                        >
                                                          No Data
                                                        </div>
                                                      </div>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>,
                                          },
                                        }
                                      }
                                      pagination={
                                        Object {
                                          "current": 1,
                                          "onChange": [Function],
                                          "pageSize": 10,
                                          "pageSizeOptions": Array [
                                            "10",
                                            "15",
                                            "20",
                                          ],
                                          "total": 0,
                                        }
                                      }
                                      prefixCls="ant-table"
                                      rowClassName={[Function]}
                                      rowKey={[Function]}
                                      transformColumns={[Function]}
                                    >
                                      <div
                                        className="ant-table ant-table-empty ant-table-has-fix-right"
                                      >
                                        <Component
                                          pingLeft={false}
                                          pingRight={false}
                                          props={
                                            Object {
                                              "className": "ant-table-empty",
                                              "columns": Array [
                                                Object {
                                                  "dataIndex": "title",
                                                  "key": "title",
                                                  "render": [Function],
                                                  "title": "Title",
                                                  "width": 400,
                                                },
                                                Object {
                                                  "dataIndex": "categories",
                                                  "ellipsis": true,
                                                  "key": "categories",
                                                  "render": [Function],
                                                  "title": "Categories",
                                                },
                                                Object {
                                                  "dataIndex": "tags",
                                                  "ellipsis": true,
                                                  "key": "tags",
                                                  "render": [Function],
                                                  "title": "Tags",
                                                },
                                                Object {
                                                  "dataIndex": "status",
                                                  "key": "status",
                                                  "render": [Function],
                                                  "title": "Status",
                                                  "width": 200,
                                                },
                                                Object {
                                                  "align": "center",
                                                  "dataIndex": "actions",
                                                  "fixed": "right",
                                                  "render": [Function],
                                                  "title": "Actions",
                                                  "width": 240,
                                                },
                                              ],
                                              "data": Array [],
                                              "dataSource": Array [],
                                              "direction": undefined,
                                              "emptyText": <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>,
                                              "expandable": Object {
                                                "__PARENT_RENDER_ICON__": [Function],
                                                "childrenColumnName": undefined,
                                                "expandIcon": [Function],
                                                "expandIconColumnIndex": -1,
                                                "expandedRowKeys": Array [
                                                  0,
                                                ],
                                                "expandedRowRender": [Function],
                                                "indentSize": 15,
                                                "onExpand": [Function],
                                              },
                                              "internalHooks": "rc-table-internal-hook",
                                              "internalRefs": Object {
                                                "body": Object {
                                                  "current": <div
                                                    class="ant-table-content"
                                                  >
                                                    <table
                                                      style="table-layout: fixed;"
                                                    >
                                                      <colgroup>
                                                        <col
                                                          style="width: 400px;"
                                                        />
                                                        <col />
                                                        <col />
                                                        <col
                                                          style="width: 200px;"
                                                        />
                                                        <col
                                                          style="width: 240px;"
                                                        />
                                                      </colgroup>
                                                      <thead
                                                        class="ant-table-thead"
                                                      >
                                                        <tr>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Title
                                                          </th>
                                                          <th
                                                            class="ant-table-cell ant-table-cell-ellipsis"
                                                            title="Categories"
                                                          >
                                                            Categories
                                                          </th>
                                                          <th
                                                            class="ant-table-cell ant-table-cell-ellipsis"
                                                            title="Tags"
                                                          >
                                                            Tags
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Status
                                                          </th>
                                                          <th
                                                            class="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                                            style="text-align: center; position: sticky; right: 0px;"
                                                          >
                                                            Actions
                                                          </th>
                                                        </tr>
                                                      </thead>
                                                      <tbody
                                                        class="ant-table-tbody"
                                                      >
                                                        <tr
                                                          class="ant-table-placeholder"
                                                        >
                                                          <td
                                                            class="ant-table-cell"
                                                            colspan="5"
                                                          >
                                                            <div
                                                              class="ant-empty ant-empty-normal"
                                                            >
                                                              <div
                                                                class="ant-empty-image"
                                                              >
                                                                <svg
                                                                  class="ant-empty-img-simple"
                                                                  height="41"
                                                                  viewBox="0 0 64 41"
                                                                  width="64"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <g
                                                                    fill="none"
                                                                    fill-rule="evenodd"
                                                                    transform="translate(0 1)"
                                                                  >
                                                                    <ellipse
                                                                      class="ant-empty-img-simple-ellipse"
                                                                      cx="32"
                                                                      cy="33"
                                                                      rx="32"
                                                                      ry="7"
                                                                    />
                                                                    <g
                                                                      class="ant-empty-img-simple-g"
                                                                      fill-rule="nonzero"
                                                                    >
                                                                      <path
                                                                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                      />
                                                                      <path
                                                                        class="ant-empty-img-simple-path"
                                                                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                      />
                                                                    </g>
                                                                  </g>
                                                                </svg>
                                                              </div>
                                                              <div
                                                                class="ant-empty-description"
                                                              >
                                                                No Data
                                                              </div>
                                                            </div>
                                                          </td>
                                                        </tr>
                                                      </tbody>
                                                    </table>
                                                  </div>,
                                                },
                                              },
                                              "mergedExpandedKeys": Set {
                                                0,
                                              },
                                              "pagination": Object {
                                                "current": 1,
                                                "onChange": [Function],
                                                "pageSize": 10,
                                                "pageSizeOptions": Array [
                                                  "10",
                                                  "15",
                                                  "20",
                                                ],
                                                "total": 0,
                                              },
                                              "prefixCls": "ant-table",
                                              "rowClassName": [Function],
                                              "rowKey": [Function],
                                              "stickyOffsets": Object {
                                                "left": Array [
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                                "right": Array [
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "transformColumns": [Function],
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-table-container"
                                          >
                                            <div
                                              className="ant-table-content"
                                              onScroll={[Function]}
                                              style={Object {}}
                                            >
                                              <table
                                                style={
                                                  Object {
                                                    "tableLayout": "fixed",
                                                  }
                                                }
                                              >
                                                <ColGroup
                                                  colWidths={
                                                    Array [
                                                      400,
                                                      undefined,
                                                      undefined,
                                                      200,
                                                      240,
                                                    ]
                                                  }
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "fixed": undefined,
                                                        "key": "title",
                                                        "render": [Function],
                                                        "title": "Title",
                                                        "width": 400,
                                                      },
                                                      Object {
                                                        "dataIndex": "categories",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "categories",
                                                        "render": [Function],
                                                        "title": "Categories",
                                                      },
                                                      Object {
                                                        "dataIndex": "tags",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "tags",
                                                        "render": [Function],
                                                        "title": "Tags",
                                                      },
                                                      Object {
                                                        "dataIndex": "status",
                                                        "fixed": undefined,
                                                        "key": "status",
                                                        "render": [Function],
                                                        "title": "Status",
                                                        "width": 200,
                                                      },
                                                      Object {
                                                        "align": "center",
                                                        "dataIndex": "actions",
                                                        "fixed": "right",
                                                        "render": [Function],
                                                        "title": "Actions",
                                                        "width": 240,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <colgroup>
                                                    <col
                                                      key="0"
                                                      style={
                                                        Object {
                                                          "width": 400,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="1"
                                                      style={
                                                        Object {
                                                          "width": undefined,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="2"
                                                      style={
                                                        Object {
                                                          "width": undefined,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="3"
                                                      style={
                                                        Object {
                                                          "width": 200,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="4"
                                                      style={
                                                        Object {
                                                          "width": 240,
                                                        }
                                                      }
                                                    />
                                                  </colgroup>
                                                </ColGroup>
                                                <Header
                                                  colWidths={
                                                    Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ]
                                                  }
                                                  columCount={5}
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "key": "title",
                                                        "render": [Function],
                                                        "title": "Title",
                                                        "width": 400,
                                                      },
                                                      Object {
                                                        "dataIndex": "categories",
                                                        "ellipsis": true,
                                                        "key": "categories",
                                                        "render": [Function],
                                                        "title": "Categories",
                                                      },
                                                      Object {
                                                        "dataIndex": "tags",
                                                        "ellipsis": true,
                                                        "key": "tags",
                                                        "render": [Function],
                                                        "title": "Tags",
                                                      },
                                                      Object {
                                                        "dataIndex": "status",
                                                        "key": "status",
                                                        "render": [Function],
                                                        "title": "Status",
                                                        "width": 200,
                                                      },
                                                      Object {
                                                        "align": "center",
                                                        "dataIndex": "actions",
                                                        "fixed": "right",
                                                        "render": [Function],
                                                        "title": "Actions",
                                                        "width": 240,
                                                      },
                                                    ]
                                                  }
                                                  flattenColumns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "fixed": undefined,
                                                        "key": "title",
                                                        "render": [Function],
                                                        "title": "Title",
                                                        "width": 400,
                                                      },
                                                      Object {
                                                        "dataIndex": "categories",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "categories",
                                                        "render": [Function],
                                                        "title": "Categories",
                                                      },
                                                      Object {
                                                        "dataIndex": "tags",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "tags",
                                                        "render": [Function],
                                                        "title": "Tags",
                                                      },
                                                      Object {
                                                        "dataIndex": "status",
                                                        "fixed": undefined,
                                                        "key": "status",
                                                        "render": [Function],
                                                        "title": "Status",
                                                        "width": 200,
                                                      },
                                                      Object {
                                                        "align": "center",
                                                        "dataIndex": "actions",
                                                        "fixed": "right",
                                                        "render": [Function],
                                                        "title": "Actions",
                                                        "width": 240,
                                                      },
                                                    ]
                                                  }
                                                  stickyOffsets={
                                                    Object {
                                                      "left": Array [
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                      "right": Array [
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="ant-table-thead"
                                                  >
                                                    <HeaderRow
                                                      cellComponent="th"
                                                      cells={
                                                        Array [
                                                          Object {
                                                            "children": "Title",
                                                            "className": "",
                                                            "colEnd": 0,
                                                            "colSpan": 1,
                                                            "colStart": 0,
                                                            "column": Object {
                                                              "dataIndex": "title",
                                                              "key": "title",
                                                              "render": [Function],
                                                              "title": "Title",
                                                              "width": 400,
                                                            },
                                                            "key": "title",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Categories",
                                                            "className": "",
                                                            "colEnd": 1,
                                                            "colSpan": 1,
                                                            "colStart": 1,
                                                            "column": Object {
                                                              "dataIndex": "categories",
                                                              "ellipsis": true,
                                                              "key": "categories",
                                                              "render": [Function],
                                                              "title": "Categories",
                                                            },
                                                            "key": "categories",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Tags",
                                                            "className": "",
                                                            "colEnd": 2,
                                                            "colSpan": 1,
                                                            "colStart": 2,
                                                            "column": Object {
                                                              "dataIndex": "tags",
                                                              "ellipsis": true,
                                                              "key": "tags",
                                                              "render": [Function],
                                                              "title": "Tags",
                                                            },
                                                            "key": "tags",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Status",
                                                            "className": "",
                                                            "colEnd": 3,
                                                            "colSpan": 1,
                                                            "colStart": 3,
                                                            "column": Object {
                                                              "dataIndex": "status",
                                                              "key": "status",
                                                              "render": [Function],
                                                              "title": "Status",
                                                              "width": 200,
                                                            },
                                                            "key": "status",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Actions",
                                                            "className": "",
                                                            "colEnd": 4,
                                                            "colSpan": 1,
                                                            "colStart": 4,
                                                            "column": Object {
                                                              "align": "center",
                                                              "dataIndex": "actions",
                                                              "fixed": "right",
                                                              "render": [Function],
                                                              "title": "Actions",
                                                              "width": 240,
                                                            },
                                                            "key": undefined,
                                                            "rowSpan": 1,
                                                          },
                                                        ]
                                                      }
                                                      flattenColumns={
                                                        Array [
                                                          Object {
                                                            "dataIndex": "title",
                                                            "fixed": undefined,
                                                            "key": "title",
                                                            "render": [Function],
                                                            "title": "Title",
                                                            "width": 400,
                                                          },
                                                          Object {
                                                            "dataIndex": "categories",
                                                            "ellipsis": true,
                                                            "fixed": undefined,
                                                            "key": "categories",
                                                            "render": [Function],
                                                            "title": "Categories",
                                                          },
                                                          Object {
                                                            "dataIndex": "tags",
                                                            "ellipsis": true,
                                                            "fixed": undefined,
                                                            "key": "tags",
                                                            "render": [Function],
                                                            "title": "Tags",
                                                          },
                                                          Object {
                                                            "dataIndex": "status",
                                                            "fixed": undefined,
                                                            "key": "status",
                                                            "render": [Function],
                                                            "title": "Status",
                                                            "width": 200,
                                                          },
                                                          Object {
                                                            "align": "center",
                                                            "dataIndex": "actions",
                                                            "fixed": "right",
                                                            "render": [Function],
                                                            "title": "Actions",
                                                            "width": 240,
                                                          },
                                                        ]
                                                      }
                                                      index={0}
                                                      key="0"
                                                      rowComponent="tr"
                                                      stickyOffsets={
                                                        Object {
                                                          "left": Array [
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                          "right": Array [
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <tr>
                                                        <Cell
                                                          className=""
                                                          colEnd={0}
                                                          colSpan={1}
                                                          colStart={0}
                                                          column={
                                                            Object {
                                                              "dataIndex": "title",
                                                              "key": "title",
                                                              "render": [Function],
                                                              "title": "Title",
                                                              "width": 400,
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="title"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Title
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={1}
                                                          colSpan={1}
                                                          colStart={1}
                                                          column={
                                                            Object {
                                                              "dataIndex": "categories",
                                                              "ellipsis": true,
                                                              "key": "categories",
                                                              "render": [Function],
                                                              "title": "Categories",
                                                            }
                                                          }
                                                          component="th"
                                                          ellipsis={true}
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="categories"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell ant-table-cell-ellipsis"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                            title="Categories"
                                                          >
                                                            Categories
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={2}
                                                          colSpan={1}
                                                          colStart={2}
                                                          column={
                                                            Object {
                                                              "dataIndex": "tags",
                                                              "ellipsis": true,
                                                              "key": "tags",
                                                              "render": [Function],
                                                              "title": "Tags",
                                                            }
                                                          }
                                                          component="th"
                                                          ellipsis={true}
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="tags"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell ant-table-cell-ellipsis"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                            title="Tags"
                                                          >
                                                            Tags
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={3}
                                                          colSpan={1}
                                                          colStart={3}
                                                          column={
                                                            Object {
                                                              "dataIndex": "status",
                                                              "key": "status",
                                                              "render": [Function],
                                                              "title": "Status",
                                                              "width": 200,
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="status"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Status
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          align="center"
                                                          className=""
                                                          colEnd={4}
                                                          colSpan={1}
                                                          colStart={4}
                                                          column={
                                                            Object {
                                                              "align": "center",
                                                              "dataIndex": "actions",
                                                              "fixed": "right",
                                                              "render": [Function],
                                                              "title": "Actions",
                                                              "width": 240,
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={true}
                                                          fixRight={0}
                                                          key="actions"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={
                                                              Object {
                                                                "position": "sticky",
                                                                "right": 0,
                                                                "textAlign": "center",
                                                              }
                                                            }
                                                          >
                                                            Actions
                                                          </th>
                                                        </Cell>
                                                      </tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </Header>
                                                <Body
                                                  childrenColumnName="children"
                                                  data={Array []}
                                                  emptyNode={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  expandedKeys={
                                                    Set {
                                                      0,
                                                    }
                                                  }
                                                  getRowKey={[Function]}
                                                  measureColumnWidth={false}
                                                >
                                                  <tbody
                                                    className="ant-table-tbody"
                                                  >
                                                    <ExpandedRow
                                                      cellComponent="td"
                                                      className="ant-table-placeholder"
                                                      colSpan={5}
                                                      component="tr"
                                                      componentWidth={0}
                                                      expanded={true}
                                                      fixColumn={false}
                                                      horizonScroll={false}
                                                      prefixCls="ant-table"
                                                    >
                                                      <tr
                                                        className="ant-table-placeholder"
                                                        style={
                                                          Object {
                                                            "display": null,
                                                          }
                                                        }
                                                      >
                                                        <Cell
                                                          colSpan={5}
                                                          component="td"
                                                          prefixCls="ant-table"
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={5}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            <Empty
                                                              image={<Simple />}
                                                            >
                                                              <LocaleReceiver
                                                                componentName="Empty"
                                                              >
                                                                <div
                                                                  className="ant-empty ant-empty-normal"
                                                                >
                                                                  <div
                                                                    className="ant-empty-image"
                                                                  >
                                                                    <Simple>
                                                                      <svg
                                                                        className="ant-empty-img-simple"
                                                                        height="41"
                                                                        viewBox="0 0 64 41"
                                                                        width="64"
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <g
                                                                          fill="none"
                                                                          fillRule="evenodd"
                                                                          transform="translate(0 1)"
                                                                        >
                                                                          <ellipse
                                                                            className="ant-empty-img-simple-ellipse"
                                                                            cx="32"
                                                                            cy="33"
                                                                            rx="32"
                                                                            ry="7"
                                                                          />
                                                                          <g
                                                                            className="ant-empty-img-simple-g"
                                                                            fillRule="nonzero"
                                                                          >
                                                                            <path
                                                                              d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                            />
                                                                            <path
                                                                              className="ant-empty-img-simple-path"
                                                                              d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                            />
                                                                          </g>
                                                                        </g>
                                                                      </svg>
                                                                    </Simple>
                                                                  </div>
                                                                  <div
                                                                    className="ant-empty-description"
                                                                  >
                                                                    No Data
                                                                  </div>
                                                                </div>
                                                              </LocaleReceiver>
                                                            </Empty>
                                                          </td>
                                                        </Cell>
                                                      </tr>
                                                    </ExpandedRow>
                                                  </tbody>
                                                </Body>
                                              </table>
                                            </div>
                                          </div>
                                        </Component>
                                      </div>
                                    </Table>
                                  </div>
                                </div>
                              </Spin>
                            </div>
                          </Table>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </PostList>
              </div>
            </Item>
          </div>
        </Space>
      </Posts>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Posts List component snapshot testing should render the component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Posts
        formats={
          Object {
            "article": Object {
              "id": 1,
              "name": "article",
              "slug": "article",
            },
            "factcheck": Object {
              "id": 2,
              "name": "factcheck",
              "slug": "fact-check",
            },
            "loading": false,
          }
        }
        permission={
          Object {
            "actions": Array [
              "create",
            ],
          }
        }
      >
        <Space
          direction="vertical"
        >
          <div
            className="ant-space ant-space-vertical"
            style={Object {}}
          >
            <Item
              className="ant-space-item"
              direction="vertical"
              index={0}
              key="ant-space-item-0"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <HelmetWrapper
                  defer={true}
                  encodeSpecialCharacters={true}
                  title="Posts"
                >
                  <SideEffect(NullComponent)
                    defer={true}
                    encodeSpecialCharacters={true}
                    title="Posts"
                  >
                    <NullComponent
                      defer={true}
                      encodeSpecialCharacters={true}
                      title="Posts"
                    />
                  </SideEffect(NullComponent)>
                </HelmetWrapper>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={1}
              key="ant-space-item-1"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <Template
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                      "slug": "article",
                    }
                  }
                />
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={2}
              key="ant-space-item-2"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={
                  Object {
                    "marginBottom": 8,
                  }
                }
              >
                <ForwardRef(InternalForm)
                  className="ant-advanced-search-form"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  initialValues={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 10,
                      "page": 1,
                      "sort": "desc",
                    }
                  }
                  name="filters"
                  onFinish={[Function]}
                  onValuesChange={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <SizeContextProvider>
                    <ForwardRef(Form)
                      className="ant-form ant-form-horizontal ant-advanced-search-form"
                      form={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": "filters",
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                        }
                      }
                      id="filters"
                      initialValues={
                        Object {
                          "format": Array [
                            1,
                          ],
                          "limit": 10,
                          "page": 1,
                          "sort": "desc",
                        }
                      }
                      name="filters"
                      onFinish={[Function]}
                      onFinishFailed={[Function]}
                      onValuesChange={[Function]}
                      style={
                        Object {
                          "maxWidth": "100%",
                        }
                      }
                    >
                      <form
                        className="ant-form ant-form-horizontal ant-advanced-search-form"
                        id="filters"
                        onReset={[Function]}
                        onSubmit={[Function]}
                        style={
                          Object {
                            "maxWidth": "100%",
                          }
                        }
                      >
                        <Row
                          gutter={16}
                          justify="end"
                          style={
                            Object {
                              "marginBottom": "1rem",
                            }
                          }
                        >
                          <div
                            className="ant-row ant-row-end"
                            style={
                              Object {
                                "marginBottom": "1rem",
                                "marginLeft": -8,
                                "marginRight": -8,
                              }
                            }
                          >
                            <Col
                              key="2"
                              style={
                                Object {
                                  "display": "flex",
                                  "justifyContent": "end",
                                }
                              }
                            >
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "display": "flex",
                                    "justifyContent": "end",
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <FormItem
                                  name="q"
                                >
                                  <WrapperField
                                    messageVariables={
                                      Object {
                                        "label": "q",
                                      }
                                    }
                                    name="q"
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "filters",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_q"
                                      messageVariables={
                                        Object {
                                          "label": "q",
                                        }
                                      }
                                      name={
                                        Array [
                                          "q",
                                        ]
                                      }
                                      onReset={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="filters_q"
                                            name="q"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          />
                                          <FormItemInput
                                            errors={Array []}
                                            name={
                                              Array [
                                                "q",
                                              ]
                                            }
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                    >
                                                      <Input
                                                        id="filters_q"
                                                        onChange={[Function]}
                                                        placeholder="Search posts"
                                                        type="text"
                                                      >
                                                        <ClearableLabeledInput
                                                          bordered={true}
                                                          element={
                                                            <input
                                                              className="ant-input"
                                                              id="filters_q"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              placeholder="Search posts"
                                                              type="text"
                                                            />
                                                          }
                                                          focused={false}
                                                          handleReset={[Function]}
                                                          id="filters_q"
                                                          inputType="input"
                                                          onChange={[Function]}
                                                          placeholder="Search posts"
                                                          prefixCls="ant-input"
                                                          triggerFocus={[Function]}
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="ant-input"
                                                            id="filters_q"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            placeholder="Search posts"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </ClearableLabeledInput>
                                                      </Input>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                                <FormItem>
                                  <Row
                                    className="ant-form-item"
                                    key="row"
                                  >
                                    <div
                                      className="ant-row ant-form-item"
                                      style={Object {}}
                                    >
                                      <FormItemLabel
                                        prefixCls="ant-form"
                                        requiredMark={true}
                                      />
                                      <FormItemInput
                                        errors={Array []}
                                        onDomErrorVisibleChange={[Function]}
                                        prefixCls="ant-form"
                                        status=""
                                        validateStatus=""
                                      >
                                        <Col
                                          className="ant-form-item-control"
                                        >
                                          <div
                                            className="ant-col ant-form-item-control"
                                            style={Object {}}
                                          >
                                            <div
                                              className="ant-form-item-control-input"
                                            >
                                              <div
                                                className="ant-form-item-control-input-content"
                                              >
                                                <Button
                                                  htmlType="submit"
                                                >
                                                  <Wave>
                                                    <button
                                                      className="ant-btn"
                                                      onClick={[Function]}
                                                      type="submit"
                                                    >
                                                      <LoadingIcon
                                                        existIcon={false}
                                                        loading={false}
                                                        prefixCls="ant-btn"
                                                      >
                                                        <CSSMotion
                                                          motionName="ant-btn-loading-icon-motion"
                                                          onAppearActive={[Function]}
                                                          onAppearStart={[Function]}
                                                          onEnterActive={[Function]}
                                                          onEnterStart={[Function]}
                                                          onLeaveActive={[Function]}
                                                          onLeaveStart={[Function]}
                                                          removeOnLeave={true}
                                                          visible={false}
                                                        >
                                                          <DomWrapper />
                                                        </CSSMotion>
                                                      </LoadingIcon>
                                                      <span
                                                        key=".0"
                                                      >
                                                        Search
                                                      </span>
                                                    </button>
                                                  </Wave>
                                                </Button>
                                              </div>
                                            </div>
                                            <ErrorList
                                              errors={Array []}
                                              onDomErrorVisibleChange={[Function]}
                                            >
                                              <CSSMotion
                                                motionAppear={true}
                                                motionDeadline={500}
                                                motionName="ant-show-help"
                                                onLeaveEnd={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </ErrorList>
                                          </div>
                                        </Col>
                                      </FormItemInput>
                                    </div>
                                  </Row>
                                </FormItem>
                              </div>
                            </Col>
                            <Col
                              key="4"
                            >
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <FormItem
                                  name="status"
                                >
                                  <WrapperField
                                    messageVariables={
                                      Object {
                                        "label": "status",
                                      }
                                    }
                                    name="status"
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "filters",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_status"
                                      messageVariables={
                                        Object {
                                          "label": "status",
                                        }
                                      }
                                      name={
                                        Array [
                                          "status",
                                        ]
                                      }
                                      onReset={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="filters_status"
                                            name="status"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          />
                                          <FormItemInput
                                            errors={Array []}
                                            name={
                                              Array [
                                                "status",
                                              ]
                                            }
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                    >
                                                      <ForwardRef(InternalSelect)
                                                        defaultValue="all"
                                                        id="filters_status"
                                                        onChange={[Function]}
                                                      >
                                                        <Select
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue="all"
                                                          dropdownClassName=""
                                                          id="filters_status"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          transitionName="ant-slide-up"
                                                        >
                                                          <ForwardRef(Select)
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="all"
                                                            dropdownClassName=""
                                                            id="filters_status"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            transitionName="ant-slide-up"
                                                          >
                                                            <div
                                                              className="ant-select ant-select-single ant-select-show-arrow"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SelectTrigger
                                                                containerWidth={null}
                                                                dropdownClassName=""
                                                                empty={false}
                                                                getTriggerDOMNode={[Function]}
                                                                popupElement={
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={
                                                                      Array [
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: All",
                                                                            "key": "all",
                                                                            "value": "all",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "all",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: Draft",
                                                                            "key": "draft",
                                                                            "value": "draft",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "draft",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: Publish",
                                                                            "key": "publish",
                                                                            "value": "publish",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "publish",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Status: Ready to Publish",
                                                                            "key": "ready",
                                                                            "value": "ready",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "ready",
                                                                        },
                                                                      ]
                                                                    }
                                                                    height={256}
                                                                    id="filters_status"
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "children": "Status: All",
                                                                          "key": "all",
                                                                          "value": "all",
                                                                        },
                                                                        Object {
                                                                          "children": "Status: Draft",
                                                                          "key": "draft",
                                                                          "value": "draft",
                                                                        },
                                                                        Object {
                                                                          "children": "Status: Publish",
                                                                          "key": "publish",
                                                                          "value": "publish",
                                                                        },
                                                                        Object {
                                                                          "children": "Status: Ready to Publish",
                                                                          "key": "ready",
                                                                          "value": "ready",
                                                                        },
                                                                      ]
                                                                    }
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        "all",
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                }
                                                                prefixCls="ant-select"
                                                                transitionName="ant-slide-up"
                                                              >
                                                                <Trigger
                                                                  action={Array []}
                                                                  afterPopupVisibleChange={[Function]}
                                                                  autoDestroy={false}
                                                                  blurDelay={0.15}
                                                                  builtinPlacements={
                                                                    Object {
                                                                      "bottomLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tl",
                                                                          "bl",
                                                                        ],
                                                                      },
                                                                      "bottomRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tr",
                                                                          "br",
                                                                        ],
                                                                      },
                                                                      "topLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "bl",
                                                                          "tl",
                                                                        ],
                                                                      },
                                                                      "topRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "br",
                                                                          "tr",
                                                                        ],
                                                                      },
                                                                    }
                                                                  }
                                                                  defaultPopupVisible={false}
                                                                  destroyPopupOnHide={false}
                                                                  focusDelay={0}
                                                                  getDocument={[Function]}
                                                                  getPopupClassNameFromAlign={[Function]}
                                                                  getTriggerDOMNode={[Function]}
                                                                  hideAction={Array []}
                                                                  mask={false}
                                                                  maskClosable={true}
                                                                  mouseEnterDelay={0}
                                                                  mouseLeaveDelay={0.1}
                                                                  onPopupAlign={[Function]}
                                                                  onPopupVisibleChange={[Function]}
                                                                  popup={
                                                                    <div>
                                                                      <ForwardRef(OptionList)
                                                                        childrenAsData={true}
                                                                        defaultActiveFirstOption={true}
                                                                        flattenOptions={
                                                                          Array [
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: All",
                                                                                "key": "all",
                                                                                "value": "all",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "all",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: Draft",
                                                                                "key": "draft",
                                                                                "value": "draft",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "draft",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: Publish",
                                                                                "key": "publish",
                                                                                "value": "publish",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "publish",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Status: Ready to Publish",
                                                                                "key": "ready",
                                                                                "value": "ready",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "ready",
                                                                            },
                                                                          ]
                                                                        }
                                                                        height={256}
                                                                        id="filters_status"
                                                                        itemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onActiveValue={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        options={
                                                                          Array [
                                                                            Object {
                                                                              "children": "Status: All",
                                                                              "key": "all",
                                                                              "value": "all",
                                                                            },
                                                                            Object {
                                                                              "children": "Status: Draft",
                                                                              "key": "draft",
                                                                              "value": "draft",
                                                                            },
                                                                            Object {
                                                                              "children": "Status: Publish",
                                                                              "key": "publish",
                                                                              "value": "publish",
                                                                            },
                                                                            Object {
                                                                              "children": "Status: Ready to Publish",
                                                                              "key": "ready",
                                                                              "value": "ready",
                                                                            },
                                                                          ]
                                                                        }
                                                                        prefixCls="ant-select"
                                                                        searchValue=""
                                                                        values={
                                                                          Set {
                                                                            "all",
                                                                          }
                                                                        }
                                                                        virtual={true}
                                                                      />
                                                                    </div>
                                                                  }
                                                                  popupAlign={Object {}}
                                                                  popupClassName=""
                                                                  popupPlacement="bottomLeft"
                                                                  popupStyle={
                                                                    Object {
                                                                      "minWidth": null,
                                                                      "width": null,
                                                                    }
                                                                  }
                                                                  popupTransitionName="ant-slide-up"
                                                                  prefixCls="ant-select-dropdown"
                                                                  showAction={Array []}
                                                                >
                                                                  <Selector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue="all"
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_status_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_status_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_status_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_status"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                            title="Status: All"
                                                                          >
                                                                            Status: All
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    id="filters_status"
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    key="trigger"
                                                                    listHeight={256}
                                                                    listItemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={false}
                                                                    tokenWithEnter={false}
                                                                    transitionName="ant-slide-up"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": "all",
                                                                          "label": "Status: All",
                                                                          "value": "all",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="ant-select-selector"
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <SingleSelector
                                                                        accessibilityIndex={0}
                                                                        activeValue={null}
                                                                        className=""
                                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                        defaultValue="all"
                                                                        domRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="ant-select-selector"
                                                                            >
                                                                              <span
                                                                                class="ant-select-selection-search"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="filters_status_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="filters_status_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="filters_status_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="filters_status"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                              </span>
                                                                              <span
                                                                                class="ant-select-selection-item"
                                                                                title="Status: All"
                                                                              >
                                                                                Status: All
                                                                              </span>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                        dropdownClassName=""
                                                                        id="filters_status"
                                                                        inputElement={null}
                                                                        inputIcon={[Function]}
                                                                        inputRef={
                                                                          Object {
                                                                            "current": <input
                                                                              aria-activedescendant="filters_status_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_status_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_status_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_status"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />,
                                                                          }
                                                                        }
                                                                        listHeight={256}
                                                                        listItemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onChange={[Function]}
                                                                        onInputChange={[Function]}
                                                                        onInputCompositionEnd={[Function]}
                                                                        onInputCompositionStart={[Function]}
                                                                        onInputKeyDown={[Function]}
                                                                        onInputMouseDown={[Function]}
                                                                        onInputPaste={[Function]}
                                                                        onSearch={[Function]}
                                                                        onSearchSubmit={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        prefixCls="ant-select"
                                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                                        searchValue=""
                                                                        showSearch={false}
                                                                        tokenWithEnter={false}
                                                                        transitionName="ant-slide-up"
                                                                        values={
                                                                          Array [
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "all",
                                                                              "label": "Status: All",
                                                                              "value": "all",
                                                                            },
                                                                          ]
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="ant-select-selection-search"
                                                                        >
                                                                          <Input
                                                                            accessibilityIndex={0}
                                                                            attrs={Object {}}
                                                                            editable={false}
                                                                            id="filters_status"
                                                                            inputElement={null}
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            prefixCls="ant-select"
                                                                            value=""
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_status_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_status_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_status_list"
                                                                              autoComplete="off"
                                                                              className="ant-select-selection-search-input"
                                                                              id="filters_status"
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              readOnly={true}
                                                                              role="combobox"
                                                                              style={
                                                                                Object {
                                                                                  "opacity": 0,
                                                                                }
                                                                              }
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </Input>
                                                                        </span>
                                                                        <span
                                                                          className="ant-select-selection-item"
                                                                          title="Status: All"
                                                                        >
                                                                          Status: All
                                                                        </span>
                                                                      </SingleSelector>
                                                                    </div>
                                                                  </Selector>
                                                                </Trigger>
                                                              </SelectTrigger>
                                                              <TransBtn
                                                                className="ant-select-arrow"
                                                                customizeIcon={[Function]}
                                                                customizeIconProps={
                                                                  Object {
                                                                    "focused": false,
                                                                    "loading": undefined,
                                                                    "open": undefined,
                                                                    "searchValue": "",
                                                                    "showSearch": false,
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-arrow"
                                                                  onMouseDown={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "WebkitUserSelect": "none",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                  unselectable="on"
                                                                >
                                                                  <ForwardRef(DownOutlined)
                                                                    className="ant-select-suffix"
                                                                  >
                                                                    <AntdIcon
                                                                      className="ant-select-suffix"
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "down",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-label="down"
                                                                        className="anticon anticon-down ant-select-suffix"
                                                                        role="img"
                                                                      >
                                                                        <IconReact
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "down",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="down"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            key="svg-down"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                              key="svg-down-svg-0"
                                                                            />
                                                                          </svg>
                                                                        </IconReact>
                                                                      </span>
                                                                    </AntdIcon>
                                                                  </ForwardRef(DownOutlined)>
                                                                </span>
                                                              </TransBtn>
                                                            </div>
                                                          </ForwardRef(Select)>
                                                        </Select>
                                                      </ForwardRef(InternalSelect)>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                            <Col>
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <FormItem
                                  name="sort"
                                >
                                  <WrapperField
                                    messageVariables={
                                      Object {
                                        "label": "sort",
                                      }
                                    }
                                    name="sort"
                                    onReset={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                  >
                                    <Field
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "filters",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_sort"
                                      messageVariables={
                                        Object {
                                          "label": "sort",
                                        }
                                      }
                                      name={
                                        Array [
                                          "sort",
                                        ]
                                      }
                                      onReset={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                    >
                                      <Row
                                        className="ant-form-item"
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item"
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            htmlFor="filters_sort"
                                            name="sort"
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                          />
                                          <FormItemInput
                                            errors={Array []}
                                            name={
                                              Array [
                                                "sort",
                                              ]
                                            }
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                            >
                                              <div
                                                className="ant-col ant-form-item-control"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                      value="desc"
                                                    >
                                                      <ForwardRef(InternalSelect)
                                                        defaultValue="desc"
                                                        id="filters_sort"
                                                        onChange={[Function]}
                                                        style={
                                                          Object {
                                                            "width": "100%",
                                                          }
                                                        }
                                                        value="desc"
                                                      >
                                                        <Select
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue="desc"
                                                          dropdownClassName=""
                                                          id="filters_sort"
                                                          inputIcon={[Function]}
                                                          listHeight={256}
                                                          listItemHeight={24}
                                                          menuItemSelectedIcon={null}
                                                          notFoundContent={
                                                            <Context.Consumer>
                                                              [Function]
                                                            </Context.Consumer>
                                                          }
                                                          onChange={[Function]}
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          style={
                                                            Object {
                                                              "width": "100%",
                                                            }
                                                          }
                                                          transitionName="ant-slide-up"
                                                          value="desc"
                                                        >
                                                          <ForwardRef(Select)
                                                            className=""
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            defaultValue="desc"
                                                            dropdownClassName=""
                                                            id="filters_sort"
                                                            inputIcon={[Function]}
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            onChange={[Function]}
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            style={
                                                              Object {
                                                                "width": "100%",
                                                              }
                                                            }
                                                            transitionName="ant-slide-up"
                                                            value="desc"
                                                          >
                                                            <div
                                                              className="ant-select ant-select-single ant-select-show-arrow"
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              style={
                                                                Object {
                                                                  "width": "100%",
                                                                }
                                                              }
                                                            >
                                                              <SelectTrigger
                                                                containerWidth={null}
                                                                dropdownClassName=""
                                                                empty={false}
                                                                getTriggerDOMNode={[Function]}
                                                                popupElement={
                                                                  <ForwardRef(OptionList)
                                                                    childrenAsData={true}
                                                                    defaultActiveFirstOption={true}
                                                                    flattenOptions={
                                                                      Array [
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Sort By: Latest",
                                                                            "key": "desc",
                                                                            "value": "desc",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "desc",
                                                                        },
                                                                        Object {
                                                                          "data": Object {
                                                                            "children": "Sort By: Old",
                                                                            "key": "asc",
                                                                            "value": "asc",
                                                                          },
                                                                          "groupOption": false,
                                                                          "key": "asc",
                                                                        },
                                                                      ]
                                                                    }
                                                                    height={256}
                                                                    id="filters_sort"
                                                                    itemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onActiveValue={[Function]}
                                                                    onMouseEnter={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "children": "Sort By: Latest",
                                                                          "key": "desc",
                                                                          "value": "desc",
                                                                        },
                                                                        Object {
                                                                          "children": "Sort By: Old",
                                                                          "key": "asc",
                                                                          "value": "asc",
                                                                        },
                                                                      ]
                                                                    }
                                                                    prefixCls="ant-select"
                                                                    searchValue=""
                                                                    values={
                                                                      Set {
                                                                        "desc",
                                                                      }
                                                                    }
                                                                    virtual={true}
                                                                  />
                                                                }
                                                                prefixCls="ant-select"
                                                                transitionName="ant-slide-up"
                                                              >
                                                                <Trigger
                                                                  action={Array []}
                                                                  afterPopupVisibleChange={[Function]}
                                                                  autoDestroy={false}
                                                                  blurDelay={0.15}
                                                                  builtinPlacements={
                                                                    Object {
                                                                      "bottomLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tl",
                                                                          "bl",
                                                                        ],
                                                                      },
                                                                      "bottomRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "tr",
                                                                          "br",
                                                                        ],
                                                                      },
                                                                      "topLeft": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "bl",
                                                                          "tl",
                                                                        ],
                                                                      },
                                                                      "topRight": Object {
                                                                        "offset": Array [
                                                                          0,
                                                                          -4,
                                                                        ],
                                                                        "overflow": Object {
                                                                          "adjustX": 0,
                                                                          "adjustY": 1,
                                                                        },
                                                                        "points": Array [
                                                                          "br",
                                                                          "tr",
                                                                        ],
                                                                      },
                                                                    }
                                                                  }
                                                                  defaultPopupVisible={false}
                                                                  destroyPopupOnHide={false}
                                                                  focusDelay={0}
                                                                  getDocument={[Function]}
                                                                  getPopupClassNameFromAlign={[Function]}
                                                                  getTriggerDOMNode={[Function]}
                                                                  hideAction={Array []}
                                                                  mask={false}
                                                                  maskClosable={true}
                                                                  mouseEnterDelay={0}
                                                                  mouseLeaveDelay={0.1}
                                                                  onPopupAlign={[Function]}
                                                                  onPopupVisibleChange={[Function]}
                                                                  popup={
                                                                    <div>
                                                                      <ForwardRef(OptionList)
                                                                        childrenAsData={true}
                                                                        defaultActiveFirstOption={true}
                                                                        flattenOptions={
                                                                          Array [
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Sort By: Latest",
                                                                                "key": "desc",
                                                                                "value": "desc",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "desc",
                                                                            },
                                                                            Object {
                                                                              "data": Object {
                                                                                "children": "Sort By: Old",
                                                                                "key": "asc",
                                                                                "value": "asc",
                                                                              },
                                                                              "groupOption": false,
                                                                              "key": "asc",
                                                                            },
                                                                          ]
                                                                        }
                                                                        height={256}
                                                                        id="filters_sort"
                                                                        itemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onActiveValue={[Function]}
                                                                        onMouseEnter={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        options={
                                                                          Array [
                                                                            Object {
                                                                              "children": "Sort By: Latest",
                                                                              "key": "desc",
                                                                              "value": "desc",
                                                                            },
                                                                            Object {
                                                                              "children": "Sort By: Old",
                                                                              "key": "asc",
                                                                              "value": "asc",
                                                                            },
                                                                          ]
                                                                        }
                                                                        prefixCls="ant-select"
                                                                        searchValue=""
                                                                        values={
                                                                          Set {
                                                                            "desc",
                                                                          }
                                                                        }
                                                                        virtual={true}
                                                                      />
                                                                    </div>
                                                                  }
                                                                  popupAlign={Object {}}
                                                                  popupClassName=""
                                                                  popupPlacement="bottomLeft"
                                                                  popupStyle={
                                                                    Object {
                                                                      "minWidth": null,
                                                                      "width": null,
                                                                    }
                                                                  }
                                                                  popupTransitionName="ant-slide-up"
                                                                  prefixCls="ant-select-dropdown"
                                                                  showAction={Array []}
                                                                >
                                                                  <Selector
                                                                    accessibilityIndex={0}
                                                                    activeValue={null}
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    defaultValue="desc"
                                                                    domRef={
                                                                      Object {
                                                                        "current": <div
                                                                          class="ant-select-selector"
                                                                        >
                                                                          <span
                                                                            class="ant-select-selection-search"
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_sort_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_sort_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_sort_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_sort"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </span>
                                                                          <span
                                                                            class="ant-select-selection-item"
                                                                            title="Sort By: Latest"
                                                                          >
                                                                            Sort By: Latest
                                                                          </span>
                                                                        </div>,
                                                                      }
                                                                    }
                                                                    dropdownClassName=""
                                                                    id="filters_sort"
                                                                    inputElement={null}
                                                                    inputIcon={[Function]}
                                                                    key="trigger"
                                                                    listHeight={256}
                                                                    listItemHeight={24}
                                                                    menuItemSelectedIcon={null}
                                                                    multiple={false}
                                                                    notFoundContent={
                                                                      <Context.Consumer>
                                                                        [Function]
                                                                      </Context.Consumer>
                                                                    }
                                                                    onChange={[Function]}
                                                                    onSearch={[Function]}
                                                                    onSearchSubmit={[Function]}
                                                                    onSelect={[Function]}
                                                                    onToggleOpen={[Function]}
                                                                    prefixCls="ant-select"
                                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                                    searchValue=""
                                                                    showSearch={false}
                                                                    style={
                                                                      Object {
                                                                        "width": "100%",
                                                                      }
                                                                    }
                                                                    tokenWithEnter={false}
                                                                    transitionName="ant-slide-up"
                                                                    value="desc"
                                                                    values={
                                                                      Array [
                                                                        Object {
                                                                          "disabled": undefined,
                                                                          "key": "desc",
                                                                          "label": "Sort By: Latest",
                                                                          "value": "desc",
                                                                        },
                                                                      ]
                                                                    }
                                                                  >
                                                                    <div
                                                                      className="ant-select-selector"
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <SingleSelector
                                                                        accessibilityIndex={0}
                                                                        activeValue={null}
                                                                        className=""
                                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                        defaultValue="desc"
                                                                        domRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="ant-select-selector"
                                                                            >
                                                                              <span
                                                                                class="ant-select-selection-search"
                                                                              >
                                                                                <input
                                                                                  aria-activedescendant="filters_sort_list_0"
                                                                                  aria-autocomplete="list"
                                                                                  aria-controls="filters_sort_list"
                                                                                  aria-haspopup="listbox"
                                                                                  aria-owns="filters_sort_list"
                                                                                  autocomplete="off"
                                                                                  class="ant-select-selection-search-input"
                                                                                  id="filters_sort"
                                                                                  readonly=""
                                                                                  role="combobox"
                                                                                  style="opacity: 0;"
                                                                                  type="search"
                                                                                  unselectable="on"
                                                                                  value=""
                                                                                />
                                                                              </span>
                                                                              <span
                                                                                class="ant-select-selection-item"
                                                                                title="Sort By: Latest"
                                                                              >
                                                                                Sort By: Latest
                                                                              </span>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                        dropdownClassName=""
                                                                        id="filters_sort"
                                                                        inputElement={null}
                                                                        inputIcon={[Function]}
                                                                        inputRef={
                                                                          Object {
                                                                            "current": <input
                                                                              aria-activedescendant="filters_sort_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_sort_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_sort_list"
                                                                              autocomplete="off"
                                                                              class="ant-select-selection-search-input"
                                                                              id="filters_sort"
                                                                              readonly=""
                                                                              role="combobox"
                                                                              style="opacity: 0;"
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />,
                                                                          }
                                                                        }
                                                                        listHeight={256}
                                                                        listItemHeight={24}
                                                                        menuItemSelectedIcon={null}
                                                                        multiple={false}
                                                                        notFoundContent={
                                                                          <Context.Consumer>
                                                                            [Function]
                                                                          </Context.Consumer>
                                                                        }
                                                                        onChange={[Function]}
                                                                        onInputChange={[Function]}
                                                                        onInputCompositionEnd={[Function]}
                                                                        onInputCompositionStart={[Function]}
                                                                        onInputKeyDown={[Function]}
                                                                        onInputMouseDown={[Function]}
                                                                        onInputPaste={[Function]}
                                                                        onSearch={[Function]}
                                                                        onSearchSubmit={[Function]}
                                                                        onSelect={[Function]}
                                                                        onToggleOpen={[Function]}
                                                                        prefixCls="ant-select"
                                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                                        searchValue=""
                                                                        showSearch={false}
                                                                        style={
                                                                          Object {
                                                                            "width": "100%",
                                                                          }
                                                                        }
                                                                        tokenWithEnter={false}
                                                                        transitionName="ant-slide-up"
                                                                        value="desc"
                                                                        values={
                                                                          Array [
                                                                            Object {
                                                                              "disabled": undefined,
                                                                              "key": "desc",
                                                                              "label": "Sort By: Latest",
                                                                              "value": "desc",
                                                                            },
                                                                          ]
                                                                        }
                                                                      >
                                                                        <span
                                                                          className="ant-select-selection-search"
                                                                        >
                                                                          <Input
                                                                            accessibilityIndex={0}
                                                                            attrs={Object {}}
                                                                            editable={false}
                                                                            id="filters_sort"
                                                                            inputElement={null}
                                                                            onChange={[Function]}
                                                                            onCompositionEnd={[Function]}
                                                                            onCompositionStart={[Function]}
                                                                            onKeyDown={[Function]}
                                                                            onMouseDown={[Function]}
                                                                            onPaste={[Function]}
                                                                            prefixCls="ant-select"
                                                                            value=""
                                                                          >
                                                                            <input
                                                                              aria-activedescendant="filters_sort_list_0"
                                                                              aria-autocomplete="list"
                                                                              aria-controls="filters_sort_list"
                                                                              aria-haspopup="listbox"
                                                                              aria-owns="filters_sort_list"
                                                                              autoComplete="off"
                                                                              className="ant-select-selection-search-input"
                                                                              id="filters_sort"
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onPaste={[Function]}
                                                                              readOnly={true}
                                                                              role="combobox"
                                                                              style={
                                                                                Object {
                                                                                  "opacity": 0,
                                                                                }
                                                                              }
                                                                              type="search"
                                                                              unselectable="on"
                                                                              value=""
                                                                            />
                                                                          </Input>
                                                                        </span>
                                                                        <span
                                                                          className="ant-select-selection-item"
                                                                          title="Sort By: Latest"
                                                                        >
                                                                          Sort By: Latest
                                                                        </span>
                                                                      </SingleSelector>
                                                                    </div>
                                                                  </Selector>
                                                                </Trigger>
                                                              </SelectTrigger>
                                                              <TransBtn
                                                                className="ant-select-arrow"
                                                                customizeIcon={[Function]}
                                                                customizeIconProps={
                                                                  Object {
                                                                    "focused": false,
                                                                    "loading": undefined,
                                                                    "open": undefined,
                                                                    "searchValue": "",
                                                                    "showSearch": false,
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-arrow"
                                                                  onMouseDown={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "WebkitUserSelect": "none",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                  unselectable="on"
                                                                >
                                                                  <ForwardRef(DownOutlined)
                                                                    className="ant-select-suffix"
                                                                  >
                                                                    <AntdIcon
                                                                      className="ant-select-suffix"
                                                                      icon={
                                                                        Object {
                                                                          "icon": Object {
                                                                            "attrs": Object {
                                                                              "focusable": "false",
                                                                              "viewBox": "64 64 896 896",
                                                                            },
                                                                            "children": Array [
                                                                              Object {
                                                                                "attrs": Object {
                                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                },
                                                                                "tag": "path",
                                                                              },
                                                                            ],
                                                                            "tag": "svg",
                                                                          },
                                                                          "name": "down",
                                                                          "theme": "outlined",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-label="down"
                                                                        className="anticon anticon-down ant-select-suffix"
                                                                        role="img"
                                                                      >
                                                                        <IconReact
                                                                          icon={
                                                                            Object {
                                                                              "icon": Object {
                                                                                "attrs": Object {
                                                                                  "focusable": "false",
                                                                                  "viewBox": "64 64 896 896",
                                                                                },
                                                                                "children": Array [
                                                                                  Object {
                                                                                    "attrs": Object {
                                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                    },
                                                                                    "tag": "path",
                                                                                  },
                                                                                ],
                                                                                "tag": "svg",
                                                                              },
                                                                              "name": "down",
                                                                              "theme": "outlined",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="down"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            key="svg-down"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                              key="svg-down-svg-0"
                                                                            />
                                                                          </svg>
                                                                        </IconReact>
                                                                      </span>
                                                                    </AntdIcon>
                                                                  </ForwardRef(DownOutlined)>
                                                                </span>
                                                              </TransBtn>
                                                            </div>
                                                          </ForwardRef(Select)>
                                                        </Select>
                                                      </ForwardRef(InternalSelect)>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                            <Button
                              onClick={[Function]}
                              type="link"
                            >
                              <button
                                className="ant-btn ant-btn-link"
                                onClick={[Function]}
                                type="button"
                              >
                                <LoadingIcon
                                  existIcon={false}
                                  loading={false}
                                  prefixCls="ant-btn"
                                >
                                  <CSSMotion
                                    motionName="ant-btn-loading-icon-motion"
                                    onAppearActive={[Function]}
                                    onAppearStart={[Function]}
                                    onEnterActive={[Function]}
                                    onEnterStart={[Function]}
                                    onLeaveActive={[Function]}
                                    onLeaveStart={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </LoadingIcon>
                                <span
                                  key=".0"
                                >
                                  More Filters 
                                  <ForwardRef(DownOutlined)>
                                    <AntdIcon
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "down",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="down"
                                        className="anticon anticon-down"
                                        role="img"
                                      >
                                        <IconReact
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "down",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            data-icon="down"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-down"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                              key="svg-down-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(DownOutlined)>
                                </span>
                              </button>
                            </Button>
                            <Col
                              key="1"
                            >
                              <div
                                className="ant-col"
                                style={
                                  Object {
                                    "paddingLeft": 8,
                                    "paddingRight": 8,
                                  }
                                }
                              >
                                <Link
                                  to="/posts/create"
                                >
                                  <LinkAnchor
                                    href="/posts/create"
                                    navigate={[Function]}
                                  >
                                    <a
                                      href="/posts/create"
                                      onClick={[Function]}
                                    >
                                      <Button
                                        disabled={true}
                                        type="primary"
                                      >
                                        <Wave>
                                          <button
                                            className="ant-btn ant-btn-primary"
                                            disabled={true}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <LoadingIcon
                                              existIcon={false}
                                              loading={false}
                                              prefixCls="ant-btn"
                                            >
                                              <CSSMotion
                                                motionName="ant-btn-loading-icon-motion"
                                                onAppearActive={[Function]}
                                                onAppearStart={[Function]}
                                                onEnterActive={[Function]}
                                                onEnterStart={[Function]}
                                                onLeaveActive={[Function]}
                                                onLeaveStart={[Function]}
                                                removeOnLeave={true}
                                                visible={false}
                                              >
                                                <DomWrapper />
                                              </CSSMotion>
                                            </LoadingIcon>
                                            <span
                                              key=".0"
                                            >
                                              New Post
                                            </span>
                                          </button>
                                        </Wave>
                                      </Button>
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          gutter={16}
                        >
                          <div
                            className="ant-row"
                            style={
                              Object {
                                "marginLeft": -8,
                                "marginRight": -8,
                              }
                            }
                          />
                        </Row>
                      </form>
                    </ForwardRef(Form)>
                  </SizeContextProvider>
                </ForwardRef(InternalForm)>
              </div>
            </Item>
            <Item
              className="ant-space-item"
              direction="vertical"
              index={3}
              key="ant-space-item-3"
              marginDirection="marginRight"
              wrap={false}
            >
              <div
                className="ant-space-item"
                style={Object {}}
              >
                <PostList
                  actions={Array []}
                  data={
                    Object {
                      "authors": Object {},
                      "categories": Object {},
                      "loading": false,
                      "posts": Array [],
                      "tags": Object {},
                      "total": 0,
                    }
                  }
                  fetchPosts={[Function]}
                  filters={
                    Object {
                      "format": Array [
                        1,
                      ],
                      "limit": 10,
                      "page": 1,
                      "sort": "desc",
                    }
                  }
                  format={
                    Object {
                      "id": 1,
                      "name": "article",
                      "slug": "article",
                    }
                  }
                  onPagination={[Function]}
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                      style={Object {}}
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <Table
                            columns={
                              Array [
                                Object {
                                  "dataIndex": "title",
                                  "key": "title",
                                  "render": [Function],
                                  "title": "Title",
                                  "width": 400,
                                },
                                Object {
                                  "dataIndex": "categories",
                                  "ellipsis": true,
                                  "key": "categories",
                                  "render": [Function],
                                  "title": "Categories",
                                },
                                Object {
                                  "dataIndex": "tags",
                                  "ellipsis": true,
                                  "key": "tags",
                                  "render": [Function],
                                  "title": "Tags",
                                },
                                Object {
                                  "dataIndex": "status",
                                  "key": "status",
                                  "render": [Function],
                                  "title": "Status",
                                  "width": 200,
                                },
                                Object {
                                  "align": "center",
                                  "dataIndex": "actions",
                                  "fixed": "right",
                                  "render": [Function],
                                  "title": "Actions",
                                  "width": 240,
                                },
                              ]
                            }
                            dataSource={Array []}
                            expandable={
                              Object {
                                "expandIcon": [Function],
                                "expandIconColumnIndex": -1,
                                "expandedRowKeys": Array [
                                  0,
                                ],
                                "expandedRowRender": [Function],
                                "onExpand": [Function],
                              }
                            }
                            pagination={
                              Object {
                                "current": 1,
                                "onChange": [Function],
                                "pageSize": 10,
                                "pageSizeOptions": Array [
                                  "10",
                                  "15",
                                  "20",
                                ],
                                "total": 0,
                              }
                            }
                            rowKey={[Function]}
                          >
                            <div
                              className="ant-table-wrapper"
                            >
                              <Spin
                                size="default"
                                spinning={false}
                                wrapperClassName=""
                              >
                                <div
                                  className="ant-spin-nested-loading"
                                >
                                  <div
                                    className="ant-spin-container"
                                    key="container"
                                  >
                                    <Table
                                      className="ant-table-empty"
                                      columns={
                                        Array [
                                          Object {
                                            "dataIndex": "title",
                                            "key": "title",
                                            "render": [Function],
                                            "title": "Title",
                                            "width": 400,
                                          },
                                          Object {
                                            "dataIndex": "categories",
                                            "ellipsis": true,
                                            "key": "categories",
                                            "render": [Function],
                                            "title": "Categories",
                                          },
                                          Object {
                                            "dataIndex": "tags",
                                            "ellipsis": true,
                                            "key": "tags",
                                            "render": [Function],
                                            "title": "Tags",
                                          },
                                          Object {
                                            "dataIndex": "status",
                                            "key": "status",
                                            "render": [Function],
                                            "title": "Status",
                                            "width": 200,
                                          },
                                          Object {
                                            "align": "center",
                                            "dataIndex": "actions",
                                            "fixed": "right",
                                            "render": [Function],
                                            "title": "Actions",
                                            "width": 240,
                                          },
                                        ]
                                      }
                                      data={Array []}
                                      dataSource={Array []}
                                      emptyText={
                                        <Context.Consumer>
                                          [Function]
                                        </Context.Consumer>
                                      }
                                      expandable={
                                        Object {
                                          "__PARENT_RENDER_ICON__": [Function],
                                          "childrenColumnName": undefined,
                                          "expandIcon": [Function],
                                          "expandIconColumnIndex": -1,
                                          "expandedRowKeys": Array [
                                            0,
                                          ],
                                          "expandedRowRender": [Function],
                                          "indentSize": 15,
                                          "onExpand": [Function],
                                        }
                                      }
                                      internalHooks="rc-table-internal-hook"
                                      internalRefs={
                                        Object {
                                          "body": Object {
                                            "current": <div
                                              class="ant-table-content"
                                            >
                                              <table
                                                style="table-layout: fixed;"
                                              >
                                                <colgroup>
                                                  <col
                                                    style="width: 400px;"
                                                  />
                                                  <col />
                                                  <col />
                                                  <col
                                                    style="width: 200px;"
                                                  />
                                                  <col
                                                    style="width: 240px;"
                                                  />
                                                </colgroup>
                                                <thead
                                                  class="ant-table-thead"
                                                >
                                                  <tr>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Title
                                                    </th>
                                                    <th
                                                      class="ant-table-cell ant-table-cell-ellipsis"
                                                      title="Categories"
                                                    >
                                                      Categories
                                                    </th>
                                                    <th
                                                      class="ant-table-cell ant-table-cell-ellipsis"
                                                      title="Tags"
                                                    >
                                                      Tags
                                                    </th>
                                                    <th
                                                      class="ant-table-cell"
                                                    >
                                                      Status
                                                    </th>
                                                    <th
                                                      class="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                                      style="text-align: center; position: sticky; right: 0px;"
                                                    >
                                                      Actions
                                                    </th>
                                                  </tr>
                                                </thead>
                                                <tbody
                                                  class="ant-table-tbody"
                                                >
                                                  <tr
                                                    class="ant-table-placeholder"
                                                  >
                                                    <td
                                                      class="ant-table-cell"
                                                      colspan="5"
                                                    >
                                                      <div
                                                        class="ant-empty ant-empty-normal"
                                                      >
                                                        <div
                                                          class="ant-empty-image"
                                                        >
                                                          <svg
                                                            class="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fill-rule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                class="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                class="ant-empty-img-simple-g"
                                                                fill-rule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  class="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </div>
                                                        <div
                                                          class="ant-empty-description"
                                                        >
                                                          No Data
                                                        </div>
                                                      </div>
                                                    </td>
                                                  </tr>
                                                </tbody>
                                              </table>
                                            </div>,
                                          },
                                        }
                                      }
                                      pagination={
                                        Object {
                                          "current": 1,
                                          "onChange": [Function],
                                          "pageSize": 10,
                                          "pageSizeOptions": Array [
                                            "10",
                                            "15",
                                            "20",
                                          ],
                                          "total": 0,
                                        }
                                      }
                                      prefixCls="ant-table"
                                      rowClassName={[Function]}
                                      rowKey={[Function]}
                                      transformColumns={[Function]}
                                    >
                                      <div
                                        className="ant-table ant-table-empty ant-table-has-fix-right"
                                      >
                                        <Component
                                          pingLeft={false}
                                          pingRight={false}
                                          props={
                                            Object {
                                              "className": "ant-table-empty",
                                              "columns": Array [
                                                Object {
                                                  "dataIndex": "title",
                                                  "key": "title",
                                                  "render": [Function],
                                                  "title": "Title",
                                                  "width": 400,
                                                },
                                                Object {
                                                  "dataIndex": "categories",
                                                  "ellipsis": true,
                                                  "key": "categories",
                                                  "render": [Function],
                                                  "title": "Categories",
                                                },
                                                Object {
                                                  "dataIndex": "tags",
                                                  "ellipsis": true,
                                                  "key": "tags",
                                                  "render": [Function],
                                                  "title": "Tags",
                                                },
                                                Object {
                                                  "dataIndex": "status",
                                                  "key": "status",
                                                  "render": [Function],
                                                  "title": "Status",
                                                  "width": 200,
                                                },
                                                Object {
                                                  "align": "center",
                                                  "dataIndex": "actions",
                                                  "fixed": "right",
                                                  "render": [Function],
                                                  "title": "Actions",
                                                  "width": 240,
                                                },
                                              ],
                                              "data": Array [],
                                              "dataSource": Array [],
                                              "direction": undefined,
                                              "emptyText": <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>,
                                              "expandable": Object {
                                                "__PARENT_RENDER_ICON__": [Function],
                                                "childrenColumnName": undefined,
                                                "expandIcon": [Function],
                                                "expandIconColumnIndex": -1,
                                                "expandedRowKeys": Array [
                                                  0,
                                                ],
                                                "expandedRowRender": [Function],
                                                "indentSize": 15,
                                                "onExpand": [Function],
                                              },
                                              "internalHooks": "rc-table-internal-hook",
                                              "internalRefs": Object {
                                                "body": Object {
                                                  "current": <div
                                                    class="ant-table-content"
                                                  >
                                                    <table
                                                      style="table-layout: fixed;"
                                                    >
                                                      <colgroup>
                                                        <col
                                                          style="width: 400px;"
                                                        />
                                                        <col />
                                                        <col />
                                                        <col
                                                          style="width: 200px;"
                                                        />
                                                        <col
                                                          style="width: 240px;"
                                                        />
                                                      </colgroup>
                                                      <thead
                                                        class="ant-table-thead"
                                                      >
                                                        <tr>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Title
                                                          </th>
                                                          <th
                                                            class="ant-table-cell ant-table-cell-ellipsis"
                                                            title="Categories"
                                                          >
                                                            Categories
                                                          </th>
                                                          <th
                                                            class="ant-table-cell ant-table-cell-ellipsis"
                                                            title="Tags"
                                                          >
                                                            Tags
                                                          </th>
                                                          <th
                                                            class="ant-table-cell"
                                                          >
                                                            Status
                                                          </th>
                                                          <th
                                                            class="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                                            style="text-align: center; position: sticky; right: 0px;"
                                                          >
                                                            Actions
                                                          </th>
                                                        </tr>
                                                      </thead>
                                                      <tbody
                                                        class="ant-table-tbody"
                                                      >
                                                        <tr
                                                          class="ant-table-placeholder"
                                                        >
                                                          <td
                                                            class="ant-table-cell"
                                                            colspan="5"
                                                          >
                                                            <div
                                                              class="ant-empty ant-empty-normal"
                                                            >
                                                              <div
                                                                class="ant-empty-image"
                                                              >
                                                                <svg
                                                                  class="ant-empty-img-simple"
                                                                  height="41"
                                                                  viewBox="0 0 64 41"
                                                                  width="64"
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                >
                                                                  <g
                                                                    fill="none"
                                                                    fill-rule="evenodd"
                                                                    transform="translate(0 1)"
                                                                  >
                                                                    <ellipse
                                                                      class="ant-empty-img-simple-ellipse"
                                                                      cx="32"
                                                                      cy="33"
                                                                      rx="32"
                                                                      ry="7"
                                                                    />
                                                                    <g
                                                                      class="ant-empty-img-simple-g"
                                                                      fill-rule="nonzero"
                                                                    >
                                                                      <path
                                                                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                      />
                                                                      <path
                                                                        class="ant-empty-img-simple-path"
                                                                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                      />
                                                                    </g>
                                                                  </g>
                                                                </svg>
                                                              </div>
                                                              <div
                                                                class="ant-empty-description"
                                                              >
                                                                No Data
                                                              </div>
                                                            </div>
                                                          </td>
                                                        </tr>
                                                      </tbody>
                                                    </table>
                                                  </div>,
                                                },
                                              },
                                              "mergedExpandedKeys": Set {
                                                0,
                                              },
                                              "pagination": Object {
                                                "current": 1,
                                                "onChange": [Function],
                                                "pageSize": 10,
                                                "pageSizeOptions": Array [
                                                  "10",
                                                  "15",
                                                  "20",
                                                ],
                                                "total": 0,
                                              },
                                              "prefixCls": "ant-table",
                                              "rowClassName": [Function],
                                              "rowKey": [Function],
                                              "stickyOffsets": Object {
                                                "left": Array [
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                                "right": Array [
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                  0,
                                                ],
                                              },
                                              "transformColumns": [Function],
                                            }
                                          }
                                        >
                                          <div
                                            className="ant-table-container"
                                          >
                                            <div
                                              className="ant-table-content"
                                              onScroll={[Function]}
                                              style={Object {}}
                                            >
                                              <table
                                                style={
                                                  Object {
                                                    "tableLayout": "fixed",
                                                  }
                                                }
                                              >
                                                <ColGroup
                                                  colWidths={
                                                    Array [
                                                      400,
                                                      undefined,
                                                      undefined,
                                                      200,
                                                      240,
                                                    ]
                                                  }
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "fixed": undefined,
                                                        "key": "title",
                                                        "render": [Function],
                                                        "title": "Title",
                                                        "width": 400,
                                                      },
                                                      Object {
                                                        "dataIndex": "categories",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "categories",
                                                        "render": [Function],
                                                        "title": "Categories",
                                                      },
                                                      Object {
                                                        "dataIndex": "tags",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "tags",
                                                        "render": [Function],
                                                        "title": "Tags",
                                                      },
                                                      Object {
                                                        "dataIndex": "status",
                                                        "fixed": undefined,
                                                        "key": "status",
                                                        "render": [Function],
                                                        "title": "Status",
                                                        "width": 200,
                                                      },
                                                      Object {
                                                        "align": "center",
                                                        "dataIndex": "actions",
                                                        "fixed": "right",
                                                        "render": [Function],
                                                        "title": "Actions",
                                                        "width": 240,
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <colgroup>
                                                    <col
                                                      key="0"
                                                      style={
                                                        Object {
                                                          "width": 400,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="1"
                                                      style={
                                                        Object {
                                                          "width": undefined,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="2"
                                                      style={
                                                        Object {
                                                          "width": undefined,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="3"
                                                      style={
                                                        Object {
                                                          "width": 200,
                                                        }
                                                      }
                                                    />
                                                    <col
                                                      key="4"
                                                      style={
                                                        Object {
                                                          "width": 240,
                                                        }
                                                      }
                                                    />
                                                  </colgroup>
                                                </ColGroup>
                                                <Header
                                                  colWidths={
                                                    Array [
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                    ]
                                                  }
                                                  columCount={5}
                                                  columns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "key": "title",
                                                        "render": [Function],
                                                        "title": "Title",
                                                        "width": 400,
                                                      },
                                                      Object {
                                                        "dataIndex": "categories",
                                                        "ellipsis": true,
                                                        "key": "categories",
                                                        "render": [Function],
                                                        "title": "Categories",
                                                      },
                                                      Object {
                                                        "dataIndex": "tags",
                                                        "ellipsis": true,
                                                        "key": "tags",
                                                        "render": [Function],
                                                        "title": "Tags",
                                                      },
                                                      Object {
                                                        "dataIndex": "status",
                                                        "key": "status",
                                                        "render": [Function],
                                                        "title": "Status",
                                                        "width": 200,
                                                      },
                                                      Object {
                                                        "align": "center",
                                                        "dataIndex": "actions",
                                                        "fixed": "right",
                                                        "render": [Function],
                                                        "title": "Actions",
                                                        "width": 240,
                                                      },
                                                    ]
                                                  }
                                                  flattenColumns={
                                                    Array [
                                                      Object {
                                                        "dataIndex": "title",
                                                        "fixed": undefined,
                                                        "key": "title",
                                                        "render": [Function],
                                                        "title": "Title",
                                                        "width": 400,
                                                      },
                                                      Object {
                                                        "dataIndex": "categories",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "categories",
                                                        "render": [Function],
                                                        "title": "Categories",
                                                      },
                                                      Object {
                                                        "dataIndex": "tags",
                                                        "ellipsis": true,
                                                        "fixed": undefined,
                                                        "key": "tags",
                                                        "render": [Function],
                                                        "title": "Tags",
                                                      },
                                                      Object {
                                                        "dataIndex": "status",
                                                        "fixed": undefined,
                                                        "key": "status",
                                                        "render": [Function],
                                                        "title": "Status",
                                                        "width": 200,
                                                      },
                                                      Object {
                                                        "align": "center",
                                                        "dataIndex": "actions",
                                                        "fixed": "right",
                                                        "render": [Function],
                                                        "title": "Actions",
                                                        "width": 240,
                                                      },
                                                    ]
                                                  }
                                                  stickyOffsets={
                                                    Object {
                                                      "left": Array [
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                      "right": Array [
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                      ],
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="ant-table-thead"
                                                  >
                                                    <HeaderRow
                                                      cellComponent="th"
                                                      cells={
                                                        Array [
                                                          Object {
                                                            "children": "Title",
                                                            "className": "",
                                                            "colEnd": 0,
                                                            "colSpan": 1,
                                                            "colStart": 0,
                                                            "column": Object {
                                                              "dataIndex": "title",
                                                              "key": "title",
                                                              "render": [Function],
                                                              "title": "Title",
                                                              "width": 400,
                                                            },
                                                            "key": "title",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Categories",
                                                            "className": "",
                                                            "colEnd": 1,
                                                            "colSpan": 1,
                                                            "colStart": 1,
                                                            "column": Object {
                                                              "dataIndex": "categories",
                                                              "ellipsis": true,
                                                              "key": "categories",
                                                              "render": [Function],
                                                              "title": "Categories",
                                                            },
                                                            "key": "categories",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Tags",
                                                            "className": "",
                                                            "colEnd": 2,
                                                            "colSpan": 1,
                                                            "colStart": 2,
                                                            "column": Object {
                                                              "dataIndex": "tags",
                                                              "ellipsis": true,
                                                              "key": "tags",
                                                              "render": [Function],
                                                              "title": "Tags",
                                                            },
                                                            "key": "tags",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Status",
                                                            "className": "",
                                                            "colEnd": 3,
                                                            "colSpan": 1,
                                                            "colStart": 3,
                                                            "column": Object {
                                                              "dataIndex": "status",
                                                              "key": "status",
                                                              "render": [Function],
                                                              "title": "Status",
                                                              "width": 200,
                                                            },
                                                            "key": "status",
                                                            "rowSpan": 1,
                                                          },
                                                          Object {
                                                            "children": "Actions",
                                                            "className": "",
                                                            "colEnd": 4,
                                                            "colSpan": 1,
                                                            "colStart": 4,
                                                            "column": Object {
                                                              "align": "center",
                                                              "dataIndex": "actions",
                                                              "fixed": "right",
                                                              "render": [Function],
                                                              "title": "Actions",
                                                              "width": 240,
                                                            },
                                                            "key": undefined,
                                                            "rowSpan": 1,
                                                          },
                                                        ]
                                                      }
                                                      flattenColumns={
                                                        Array [
                                                          Object {
                                                            "dataIndex": "title",
                                                            "fixed": undefined,
                                                            "key": "title",
                                                            "render": [Function],
                                                            "title": "Title",
                                                            "width": 400,
                                                          },
                                                          Object {
                                                            "dataIndex": "categories",
                                                            "ellipsis": true,
                                                            "fixed": undefined,
                                                            "key": "categories",
                                                            "render": [Function],
                                                            "title": "Categories",
                                                          },
                                                          Object {
                                                            "dataIndex": "tags",
                                                            "ellipsis": true,
                                                            "fixed": undefined,
                                                            "key": "tags",
                                                            "render": [Function],
                                                            "title": "Tags",
                                                          },
                                                          Object {
                                                            "dataIndex": "status",
                                                            "fixed": undefined,
                                                            "key": "status",
                                                            "render": [Function],
                                                            "title": "Status",
                                                            "width": 200,
                                                          },
                                                          Object {
                                                            "align": "center",
                                                            "dataIndex": "actions",
                                                            "fixed": "right",
                                                            "render": [Function],
                                                            "title": "Actions",
                                                            "width": 240,
                                                          },
                                                        ]
                                                      }
                                                      index={0}
                                                      key="0"
                                                      rowComponent="tr"
                                                      stickyOffsets={
                                                        Object {
                                                          "left": Array [
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                          "right": Array [
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                            0,
                                                          ],
                                                        }
                                                      }
                                                    >
                                                      <tr>
                                                        <Cell
                                                          className=""
                                                          colEnd={0}
                                                          colSpan={1}
                                                          colStart={0}
                                                          column={
                                                            Object {
                                                              "dataIndex": "title",
                                                              "key": "title",
                                                              "render": [Function],
                                                              "title": "Title",
                                                              "width": 400,
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="title"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Title
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={1}
                                                          colSpan={1}
                                                          colStart={1}
                                                          column={
                                                            Object {
                                                              "dataIndex": "categories",
                                                              "ellipsis": true,
                                                              "key": "categories",
                                                              "render": [Function],
                                                              "title": "Categories",
                                                            }
                                                          }
                                                          component="th"
                                                          ellipsis={true}
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="categories"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell ant-table-cell-ellipsis"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                            title="Categories"
                                                          >
                                                            Categories
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={2}
                                                          colSpan={1}
                                                          colStart={2}
                                                          column={
                                                            Object {
                                                              "dataIndex": "tags",
                                                              "ellipsis": true,
                                                              "key": "tags",
                                                              "render": [Function],
                                                              "title": "Tags",
                                                            }
                                                          }
                                                          component="th"
                                                          ellipsis={true}
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="tags"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell ant-table-cell-ellipsis"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                            title="Tags"
                                                          >
                                                            Tags
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          className=""
                                                          colEnd={3}
                                                          colSpan={1}
                                                          colStart={3}
                                                          column={
                                                            Object {
                                                              "dataIndex": "status",
                                                              "key": "status",
                                                              "render": [Function],
                                                              "title": "Status",
                                                              "width": 200,
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={false}
                                                          key="status"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            Status
                                                          </th>
                                                        </Cell>
                                                        <Cell
                                                          align="center"
                                                          className=""
                                                          colEnd={4}
                                                          colSpan={1}
                                                          colStart={4}
                                                          column={
                                                            Object {
                                                              "align": "center",
                                                              "dataIndex": "actions",
                                                              "fixed": "right",
                                                              "render": [Function],
                                                              "title": "Actions",
                                                              "width": 240,
                                                            }
                                                          }
                                                          component="th"
                                                          firstFixLeft={false}
                                                          firstFixRight={true}
                                                          fixRight={0}
                                                          key="actions"
                                                          lastFixLeft={false}
                                                          lastFixRight={false}
                                                          prefixCls="ant-table"
                                                          rowSpan={1}
                                                          rowType="header"
                                                        >
                                                          <th
                                                            className="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                                            colSpan={null}
                                                            rowSpan={null}
                                                            style={
                                                              Object {
                                                                "position": "sticky",
                                                                "right": 0,
                                                                "textAlign": "center",
                                                              }
                                                            }
                                                          >
                                                            Actions
                                                          </th>
                                                        </Cell>
                                                      </tr>
                                                    </HeaderRow>
                                                  </thead>
                                                </Header>
                                                <Body
                                                  childrenColumnName="children"
                                                  data={Array []}
                                                  emptyNode={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  expandedKeys={
                                                    Set {
                                                      0,
                                                    }
                                                  }
                                                  getRowKey={[Function]}
                                                  measureColumnWidth={false}
                                                >
                                                  <tbody
                                                    className="ant-table-tbody"
                                                  >
                                                    <ExpandedRow
                                                      cellComponent="td"
                                                      className="ant-table-placeholder"
                                                      colSpan={5}
                                                      component="tr"
                                                      componentWidth={0}
                                                      expanded={true}
                                                      fixColumn={false}
                                                      horizonScroll={false}
                                                      prefixCls="ant-table"
                                                    >
                                                      <tr
                                                        className="ant-table-placeholder"
                                                        style={
                                                          Object {
                                                            "display": null,
                                                          }
                                                        }
                                                      >
                                                        <Cell
                                                          colSpan={5}
                                                          component="td"
                                                          prefixCls="ant-table"
                                                        >
                                                          <td
                                                            className="ant-table-cell"
                                                            colSpan={5}
                                                            rowSpan={null}
                                                            style={Object {}}
                                                          >
                                                            <Empty
                                                              image={<Simple />}
                                                            >
                                                              <LocaleReceiver
                                                                componentName="Empty"
                                                              >
                                                                <div
                                                                  className="ant-empty ant-empty-normal"
                                                                >
                                                                  <div
                                                                    className="ant-empty-image"
                                                                  >
                                                                    <Simple>
                                                                      <svg
                                                                        className="ant-empty-img-simple"
                                                                        height="41"
                                                                        viewBox="0 0 64 41"
                                                                        width="64"
                                                                        xmlns="http://www.w3.org/2000/svg"
                                                                      >
                                                                        <g
                                                                          fill="none"
                                                                          fillRule="evenodd"
                                                                          transform="translate(0 1)"
                                                                        >
                                                                          <ellipse
                                                                            className="ant-empty-img-simple-ellipse"
                                                                            cx="32"
                                                                            cy="33"
                                                                            rx="32"
                                                                            ry="7"
                                                                          />
                                                                          <g
                                                                            className="ant-empty-img-simple-g"
                                                                            fillRule="nonzero"
                                                                          >
                                                                            <path
                                                                              d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                            />
                                                                            <path
                                                                              className="ant-empty-img-simple-path"
                                                                              d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                            />
                                                                          </g>
                                                                        </g>
                                                                      </svg>
                                                                    </Simple>
                                                                  </div>
                                                                  <div
                                                                    className="ant-empty-description"
                                                                  >
                                                                    No Data
                                                                  </div>
                                                                </div>
                                                              </LocaleReceiver>
                                                            </Empty>
                                                          </td>
                                                        </Cell>
                                                      </tr>
                                                    </ExpandedRow>
                                                  </tbody>
                                                </Body>
                                              </table>
                                            </div>
                                          </div>
                                        </Component>
                                      </div>
                                    </Table>
                                  </div>
                                </div>
                              </Spin>
                            </div>
                          </Table>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </PostList>
              </div>
            </Item>
          </div>
        </Space>
      </Posts>
    </Router>
  </BrowserRouter>
</Provider>
`;
