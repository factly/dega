// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Categories List component Snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Selector
    action="Categories"
    mode="multiple"
  >
    <ForwardRef(InternalSelect)
      allowClear={true}
      autoClearSearchValue={true}
      bordered={true}
      defaultValue={Array []}
      filterOption={[Function]}
      getPopupContainer={[Function]}
      listHeight={128}
      loading={false}
      mode="multiple"
      notFoundContent={null}
      onChange={[Function]}
      onPopupScroll={[Function]}
      onSearch={[Function]}
      placeholder="Select categories"
      searchValue=""
      value={Array []}
    >
      <Select
        allowClear={true}
        autoClearSearchValue={true}
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        defaultValue={Array []}
        dropdownClassName=""
        filterOption={[Function]}
        getPopupContainer={[Function]}
        inputIcon={[Function]}
        listHeight={128}
        listItemHeight={24}
        loading={false}
        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
        mode="multiple"
        notFoundContent={null}
        onChange={[Function]}
        onPopupScroll={[Function]}
        onSearch={[Function]}
        placeholder="Select categories"
        placement="bottomLeft"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        searchValue=""
        transitionName="ant-slide-up"
        value={Array []}
      >
        <BaseSelect
          OptionList={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "OptionList",
              "render": [Function],
            }
          }
          activeDescendantId="undefined_list_0"
          activeValue={null}
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          displayValues={Array []}
          dropdownClassName=""
          dropdownMatchSelectWidth={true}
          emptyOptions={true}
          getPopupContainer={[Function]}
          inputIcon={[Function]}
          loading={false}
          mode="multiple"
          notFoundContent={null}
          omitDomProps={
            Array [
              "inputValue",
            ]
          }
          onDisplayValuesChange={[Function]}
          onPopupScroll={[Function]}
          onSearch={[Function]}
          onSearchSplit={[Function]}
          placeholder="Select categories"
          placement="bottomLeft"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          searchValue=""
          transitionName="ant-slide-up"
        >
          <div
            className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={null}
              dropdownClassName=""
              dropdownMatchSelectWidth={true}
              empty={true}
              getPopupContainer={[Function]}
              getTriggerDOMNode={[Function]}
              onPopupMouseEnter={[Function]}
              placement="bottomLeft"
              popupElement={<ForwardRef(OptionList) />}
              prefixCls="ant-select"
              transitionName="ant-slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getPopupContainer={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    onMouseEnter={[Function]}
                  >
                    <ForwardRef(OptionList) />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName="ant-select-dropdown-empty"
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": null,
                    "width": null,
                  }
                }
                popupTransitionName="ant-slide-up"
                popupVisible={false}
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  OptionList={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "OptionList",
                      "render": [Function],
                    }
                  }
                  activeDescendantId="undefined_list_0"
                  activeValue={null}
                  allowClear={true}
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  displayValues={Array []}
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <div
                          class="ant-select-selection-overflow"
                        >
                          <div
                            class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                            style="opacity: 1;"
                          >
                            <div
                              class="ant-select-selection-search"
                              style="width: 0px;"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                type="search"
                                unselectable="on"
                                value=""
                              />
                              <span
                                aria-hidden="true"
                                class="ant-select-selection-search-mirror"
                              >
                                
                                Â 
                              </span>
                            </div>
                          </div>
                        </div>
                        <span
                          class="ant-select-selection-placeholder"
                        >
                          Select categories
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName=""
                  dropdownMatchSelectWidth={true}
                  emptyOptions={true}
                  getPopupContainer={[Function]}
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  loading={false}
                  mode="multiple"
                  notFoundContent={null}
                  omitDomProps={
                    Array [
                      "inputValue",
                    ]
                  }
                  onDisplayValuesChange={[Function]}
                  onPopupScroll={[Function]}
                  onRemove={[Function]}
                  onSearch={[Function]}
                  onSearchSplit={[Function]}
                  onSearchSubmit={[Function]}
                  onToggleOpen={[Function]}
                  placeholder="Select categories"
                  placement="bottomLeft"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue=""
                  showSearch={true}
                  tokenWithEnter={false}
                  transitionName="ant-slide-up"
                  values={Array []}
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SelectSelector
                      OptionList={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "OptionList",
                          "render": [Function],
                        }
                      }
                      activeDescendantId="undefined_list_0"
                      activeValue={null}
                      allowClear={true}
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      displayValues={Array []}
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <div
                              class="ant-select-selection-overflow"
                            >
                              <div
                                class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                style="opacity: 1;"
                              >
                                <div
                                  class="ant-select-selection-search"
                                  style="width: 0px;"
                                >
                                  <input
                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                    aria-autocomplete="list"
                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                    aria-haspopup="listbox"
                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                    autocomplete="off"
                                    class="ant-select-selection-search-input"
                                    id="rc_select_TEST_OR_SSR"
                                    readonly=""
                                    role="combobox"
                                    style="opacity: 0;"
                                    type="search"
                                    unselectable="on"
                                    value=""
                                  />
                                  <span
                                    aria-hidden="true"
                                    class="ant-select-selection-search-mirror"
                                  >
                                    
                                    Â 
                                  </span>
                                </div>
                              </div>
                            </div>
                            <span
                              class="ant-select-selection-placeholder"
                            >
                              Select categories
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName=""
                      dropdownMatchSelectWidth={true}
                      emptyOptions={true}
                      getPopupContainer={[Function]}
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      loading={false}
                      mode="multiple"
                      notFoundContent={null}
                      omitDomProps={
                        Array [
                          "inputValue",
                        ]
                      }
                      onDisplayValuesChange={[Function]}
                      onInputChange={[Function]}
                      onInputCompositionEnd={[Function]}
                      onInputCompositionStart={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onPopupScroll={[Function]}
                      onRemove={[Function]}
                      onSearch={[Function]}
                      onSearchSplit={[Function]}
                      onSearchSubmit={[Function]}
                      onToggleOpen={[Function]}
                      placeholder="Select categories"
                      placement="bottomLeft"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue=""
                      showSearch={true}
                      tokenWithEnter={false}
                      transitionName="ant-slide-up"
                      values={Array []}
                    >
                      <Overflow
                        data={Array []}
                        itemKey="key"
                        prefixCls="ant-select-selection-overflow"
                        renderItem={[Function]}
                        renderRest={[Function]}
                        suffix={
                          <div
                            className="ant-select-selection-search"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            style={
                              Object {
                                "width": 0,
                              }
                            }
                          >
                            <ForwardRef(Input)
                              activeDescendantId="undefined_list_0"
                              attrs={Object {}}
                              editable={false}
                              inputElement={null}
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              prefixCls="ant-select"
                              value=""
                            />
                            <span
                              aria-hidden={true}
                              className="ant-select-selection-search-mirror"
                            >
                              
                              Â 
                            </span>
                          </div>
                        }
                      >
                        <div
                          className="ant-select-selection-overflow"
                        >
                          <Item
                            className="ant-select-selection-overflow-item-suffix"
                            display={true}
                            invalidate={false}
                            order={0}
                            prefixCls="ant-select-selection-overflow-item"
                            registerSize={[Function]}
                            responsive={false}
                            responsiveDisabled={true}
                            style={Object {}}
                          >
                            <div
                              className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                              style={
                                Object {
                                  "height": undefined,
                                  "opacity": 1,
                                  "order": undefined,
                                  "overflowY": undefined,
                                  "pointerEvents": undefined,
                                  "position": undefined,
                                }
                              }
                            >
                              <div
                                className="ant-select-selection-search"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                style={
                                  Object {
                                    "width": 0,
                                  }
                                }
                              >
                                <Input
                                  activeDescendantId="undefined_list_0"
                                  attrs={Object {}}
                                  editable={false}
                                  inputElement={null}
                                  onChange={[Function]}
                                  onCompositionEnd={[Function]}
                                  onCompositionStart={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onPaste={[Function]}
                                  prefixCls="ant-select"
                                  value=""
                                >
                                  <input
                                    aria-activedescendant="undefined_list_0"
                                    aria-autocomplete="list"
                                    aria-controls="undefined_list"
                                    aria-haspopup="listbox"
                                    aria-owns="undefined_list"
                                    autoComplete="off"
                                    className="ant-select-selection-search-input"
                                    onChange={[Function]}
                                    onCompositionEnd={[Function]}
                                    onCompositionStart={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    onPaste={[Function]}
                                    readOnly={true}
                                    role="combobox"
                                    style={
                                      Object {
                                        "opacity": 0,
                                      }
                                    }
                                    type="search"
                                    unselectable="on"
                                    value=""
                                  />
                                </Input>
                                <span
                                  aria-hidden={true}
                                  className="ant-select-selection-search-mirror"
                                >
                                  Â 
                                </span>
                              </div>
                            </div>
                          </Item>
                        </div>
                      </Overflow>
                      <span
                        className="ant-select-selection-placeholder"
                      >
                        Select categories
                      </span>
                    </SelectSelector>
                  </div>
                </Selector>
              </Trigger>
            </SelectTrigger>
          </div>
        </BaseSelect>
      </Select>
    </ForwardRef(InternalSelect)>
  </Selector>
</Provider>
`;

exports[`Categories List component Snapshot testing should render the component with data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Selector
    action="Categories"
    mode="multiple"
  >
    <ForwardRef(InternalSelect)
      allowClear={true}
      autoClearSearchValue={true}
      bordered={true}
      defaultValue={Array []}
      filterOption={[Function]}
      getPopupContainer={[Function]}
      listHeight={128}
      loading={false}
      mode="multiple"
      notFoundContent={null}
      onChange={[Function]}
      onPopupScroll={[Function]}
      onSearch={[Function]}
      placeholder="Select categories"
      searchValue=""
      value={Array []}
    >
      <Select
        allowClear={true}
        autoClearSearchValue={true}
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        defaultValue={Array []}
        dropdownClassName=""
        filterOption={[Function]}
        getPopupContainer={[Function]}
        inputIcon={[Function]}
        listHeight={128}
        listItemHeight={24}
        loading={false}
        menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
        mode="multiple"
        notFoundContent={null}
        onChange={[Function]}
        onPopupScroll={[Function]}
        onSearch={[Function]}
        placeholder="Select categories"
        placement="bottomLeft"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        searchValue=""
        transitionName="ant-slide-up"
        value={Array []}
      >
        <BaseSelect
          OptionList={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "OptionList",
              "render": [Function],
            }
          }
          activeDescendantId="undefined_list_0"
          activeValue={null}
          allowClear={true}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          displayValues={Array []}
          dropdownClassName=""
          dropdownMatchSelectWidth={true}
          emptyOptions={true}
          getPopupContainer={[Function]}
          inputIcon={[Function]}
          loading={false}
          mode="multiple"
          notFoundContent={null}
          omitDomProps={
            Array [
              "inputValue",
            ]
          }
          onDisplayValuesChange={[Function]}
          onPopupScroll={[Function]}
          onSearch={[Function]}
          onSearchSplit={[Function]}
          placeholder="Select categories"
          placement="bottomLeft"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          searchValue=""
          transitionName="ant-slide-up"
        >
          <div
            className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={null}
              dropdownClassName=""
              dropdownMatchSelectWidth={true}
              empty={true}
              getPopupContainer={[Function]}
              getTriggerDOMNode={[Function]}
              onPopupMouseEnter={[Function]}
              placement="bottomLeft"
              popupElement={<ForwardRef(OptionList) />}
              prefixCls="ant-select"
              transitionName="ant-slide-up"
              visible={false}
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getPopupContainer={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    onMouseEnter={[Function]}
                  >
                    <ForwardRef(OptionList) />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName="ant-select-dropdown-empty"
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": null,
                    "width": null,
                  }
                }
                popupTransitionName="ant-slide-up"
                popupVisible={false}
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  OptionList={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "displayName": "OptionList",
                      "render": [Function],
                    }
                  }
                  activeDescendantId="undefined_list_0"
                  activeValue={null}
                  allowClear={true}
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  displayValues={Array []}
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <div
                          class="ant-select-selection-overflow"
                        >
                          <div
                            class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                            style="opacity: 1;"
                          >
                            <div
                              class="ant-select-selection-search"
                              style="width: 0px;"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                type="search"
                                unselectable="on"
                                value=""
                              />
                              <span
                                aria-hidden="true"
                                class="ant-select-selection-search-mirror"
                              >
                                
                                Â 
                              </span>
                            </div>
                          </div>
                        </div>
                        <span
                          class="ant-select-selection-placeholder"
                        >
                          Select categories
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName=""
                  dropdownMatchSelectWidth={true}
                  emptyOptions={true}
                  getPopupContainer={[Function]}
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  loading={false}
                  mode="multiple"
                  notFoundContent={null}
                  omitDomProps={
                    Array [
                      "inputValue",
                    ]
                  }
                  onDisplayValuesChange={[Function]}
                  onPopupScroll={[Function]}
                  onRemove={[Function]}
                  onSearch={[Function]}
                  onSearchSplit={[Function]}
                  onSearchSubmit={[Function]}
                  onToggleOpen={[Function]}
                  placeholder="Select categories"
                  placement="bottomLeft"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue=""
                  showSearch={true}
                  tokenWithEnter={false}
                  transitionName="ant-slide-up"
                  values={Array []}
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SelectSelector
                      OptionList={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "displayName": "OptionList",
                          "render": [Function],
                        }
                      }
                      activeDescendantId="undefined_list_0"
                      activeValue={null}
                      allowClear={true}
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      displayValues={Array []}
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <div
                              class="ant-select-selection-overflow"
                            >
                              <div
                                class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                style="opacity: 1;"
                              >
                                <div
                                  class="ant-select-selection-search"
                                  style="width: 0px;"
                                >
                                  <input
                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                    aria-autocomplete="list"
                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                    aria-haspopup="listbox"
                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                    autocomplete="off"
                                    class="ant-select-selection-search-input"
                                    id="rc_select_TEST_OR_SSR"
                                    readonly=""
                                    role="combobox"
                                    style="opacity: 0;"
                                    type="search"
                                    unselectable="on"
                                    value=""
                                  />
                                  <span
                                    aria-hidden="true"
                                    class="ant-select-selection-search-mirror"
                                  >
                                    
                                    Â 
                                  </span>
                                </div>
                              </div>
                            </div>
                            <span
                              class="ant-select-selection-placeholder"
                            >
                              Select categories
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName=""
                      dropdownMatchSelectWidth={true}
                      emptyOptions={true}
                      getPopupContainer={[Function]}
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      loading={false}
                      mode="multiple"
                      notFoundContent={null}
                      omitDomProps={
                        Array [
                          "inputValue",
                        ]
                      }
                      onDisplayValuesChange={[Function]}
                      onInputChange={[Function]}
                      onInputCompositionEnd={[Function]}
                      onInputCompositionStart={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onPopupScroll={[Function]}
                      onRemove={[Function]}
                      onSearch={[Function]}
                      onSearchSplit={[Function]}
                      onSearchSubmit={[Function]}
                      onToggleOpen={[Function]}
                      placeholder="Select categories"
                      placement="bottomLeft"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue=""
                      showSearch={true}
                      tokenWithEnter={false}
                      transitionName="ant-slide-up"
                      values={Array []}
                    >
                      <Overflow
                        data={Array []}
                        itemKey="key"
                        prefixCls="ant-select-selection-overflow"
                        renderItem={[Function]}
                        renderRest={[Function]}
                        suffix={
                          <div
                            className="ant-select-selection-search"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            style={
                              Object {
                                "width": 0,
                              }
                            }
                          >
                            <ForwardRef(Input)
                              activeDescendantId="undefined_list_0"
                              attrs={Object {}}
                              editable={false}
                              inputElement={null}
                              onChange={[Function]}
                              onCompositionEnd={[Function]}
                              onCompositionStart={[Function]}
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onPaste={[Function]}
                              prefixCls="ant-select"
                              value=""
                            />
                            <span
                              aria-hidden={true}
                              className="ant-select-selection-search-mirror"
                            >
                              
                              Â 
                            </span>
                          </div>
                        }
                      >
                        <div
                          className="ant-select-selection-overflow"
                        >
                          <Item
                            className="ant-select-selection-overflow-item-suffix"
                            display={true}
                            invalidate={false}
                            order={0}
                            prefixCls="ant-select-selection-overflow-item"
                            registerSize={[Function]}
                            responsive={false}
                            responsiveDisabled={true}
                            style={Object {}}
                          >
                            <div
                              className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                              style={
                                Object {
                                  "height": undefined,
                                  "opacity": 1,
                                  "order": undefined,
                                  "overflowY": undefined,
                                  "pointerEvents": undefined,
                                  "position": undefined,
                                }
                              }
                            >
                              <div
                                className="ant-select-selection-search"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                style={
                                  Object {
                                    "width": 0,
                                  }
                                }
                              >
                                <Input
                                  activeDescendantId="undefined_list_0"
                                  attrs={Object {}}
                                  editable={false}
                                  inputElement={null}
                                  onChange={[Function]}
                                  onCompositionEnd={[Function]}
                                  onCompositionStart={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onPaste={[Function]}
                                  prefixCls="ant-select"
                                  value=""
                                >
                                  <input
                                    aria-activedescendant="undefined_list_0"
                                    aria-autocomplete="list"
                                    aria-controls="undefined_list"
                                    aria-haspopup="listbox"
                                    aria-owns="undefined_list"
                                    autoComplete="off"
                                    className="ant-select-selection-search-input"
                                    onChange={[Function]}
                                    onCompositionEnd={[Function]}
                                    onCompositionStart={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    onPaste={[Function]}
                                    readOnly={true}
                                    role="combobox"
                                    style={
                                      Object {
                                        "opacity": 0,
                                      }
                                    }
                                    type="search"
                                    unselectable="on"
                                    value=""
                                  />
                                </Input>
                                <span
                                  aria-hidden={true}
                                  className="ant-select-selection-search-mirror"
                                >
                                  Â 
                                </span>
                              </div>
                            </div>
                          </Item>
                        </div>
                      </Overflow>
                      <span
                        className="ant-select-selection-placeholder"
                      >
                        Select categories
                      </span>
                    </SelectSelector>
                  </div>
                </Selector>
              </Trigger>
            </SelectTrigger>
          </div>
        </BaseSelect>
      </Select>
    </ForwardRef(InternalSelect)>
  </Selector>
</Provider>
`;
