// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Quick Edit component snapshot testing should render the component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <QuickEdit
        data={
          Object {
            "author_ids": Array [
              1,
            ],
            "authors": Array [
              1,
            ],
            "categories": Array [
              1,
            ],
            "category_ids": Array [
              1,
            ],
            "claim_ids": Array [],
            "description": Object {
              "blocks": Array [
                Object {
                  "data": Object {
                    "level": 2,
                    "text": "Editor.js",
                  },
                  "type": "header",
                },
                Object {
                  "data": Object {
                    "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                  },
                  "type": "paragraph",
                },
              ],
              "time": 1595747741807,
              "version": "2.18.0",
            },
            "excerpt": "excerpt of post",
            "featured_medium_id": 1,
            "format": 1,
            "id": 1,
            "published_date": null,
            "slug": "post-1",
            "status": "draft",
            "tag_ids": Array [
              1,
            ],
            "tags": Array [
              1,
            ],
            "title": "Post-1",
          }
        }
        page={false}
        setID={[MockFunction]}
        slug="article"
      >
        <ForwardRef(InternalForm)
          form={
            Object {
              "__INTERNAL__": Object {
                "itemRef": [Function],
                "name": undefined,
              },
              "getFieldError": [Function],
              "getFieldInstance": [Function],
              "getFieldValue": [Function],
              "getFieldsError": [Function],
              "getFieldsValue": [Function],
              "getInternalHooks": [Function],
              "isFieldTouched": [Function],
              "isFieldValidating": [Function],
              "isFieldsTouched": [Function],
              "isFieldsValidating": [Function],
              "resetFields": [Function],
              "scrollToField": [Function],
              "setFields": [Function],
              "setFieldsValue": [Function],
              "submit": [Function],
              "validateFields": [Function],
            }
          }
          initialValues={
            Object {
              "author_ids": Array [
                1,
              ],
              "authors": Array [
                1,
              ],
              "categories": Array [
                1,
              ],
              "category_ids": Array [
                1,
              ],
              "claim_ids": Array [],
              "description": Object {
                "blocks": Array [
                  Object {
                    "data": Object {
                      "level": 2,
                      "text": "Editor.js",
                    },
                    "type": "header",
                  },
                  Object {
                    "data": Object {
                      "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                    },
                    "type": "paragraph",
                  },
                ],
                "time": 1595747741807,
                "version": "2.18.0",
              },
              "excerpt": "excerpt of post",
              "featured_medium_id": 1,
              "format": 1,
              "id": 1,
              "published_date": null,
              "slug": "post-1",
              "status": "draft",
              "tag_ids": Array [
                1,
              ],
              "tags": Array [
                1,
              ],
              "title": "Post-1",
            }
          }
          labelCol={
            Object {
              "span": 3,
            }
          }
          onFinish={[Function]}
          onValuesChange={[Function]}
          style={
            Object {
              "marginTop": 10,
            }
          }
          wrapperCol={
            Object {
              "span": 12,
            }
          }
        >
          <SizeContextProvider>
            <ForwardRef(Form)
              className="ant-form ant-form-horizontal"
              form={
                Object {
                  "__INTERNAL__": Object {
                    "itemRef": [Function],
                    "name": undefined,
                  },
                  "getFieldError": [Function],
                  "getFieldInstance": [Function],
                  "getFieldValue": [Function],
                  "getFieldsError": [Function],
                  "getFieldsValue": [Function],
                  "getInternalHooks": [Function],
                  "isFieldTouched": [Function],
                  "isFieldValidating": [Function],
                  "isFieldsTouched": [Function],
                  "isFieldsValidating": [Function],
                  "resetFields": [Function],
                  "scrollToField": [Function],
                  "setFields": [Function],
                  "setFieldsValue": [Function],
                  "submit": [Function],
                  "validateFields": [Function],
                }
              }
              initialValues={
                Object {
                  "author_ids": Array [
                    1,
                  ],
                  "authors": Array [
                    1,
                  ],
                  "categories": Array [
                    1,
                  ],
                  "category_ids": Array [
                    1,
                  ],
                  "claim_ids": Array [],
                  "description": Object {
                    "blocks": Array [
                      Object {
                        "data": Object {
                          "level": 2,
                          "text": "Editor.js",
                        },
                        "type": "header",
                      },
                      Object {
                        "data": Object {
                          "text": "Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.",
                        },
                        "type": "paragraph",
                      },
                    ],
                    "time": 1595747741807,
                    "version": "2.18.0",
                  },
                  "excerpt": "excerpt of post",
                  "featured_medium_id": 1,
                  "format": 1,
                  "id": 1,
                  "published_date": null,
                  "slug": "post-1",
                  "status": "draft",
                  "tag_ids": Array [
                    1,
                  ],
                  "tags": Array [
                    1,
                  ],
                  "title": "Post-1",
                }
              }
              onFinish={[Function]}
              onFinishFailed={[Function]}
              onValuesChange={[Function]}
              style={
                Object {
                  "marginTop": 10,
                }
              }
            >
              <form
                className="ant-form ant-form-horizontal"
                onReset={[Function]}
                onSubmit={[Function]}
                style={
                  Object {
                    "marginTop": 10,
                  }
                }
              >
                <TitleInput
                  inputProps={
                    Object {
                      "placeholder": "Add title for the post",
                      "rows": 2,
                    }
                  }
                  onChange={[Function]}
                  type="textarea"
                >
                  <FormItem
                    label="Title"
                    name="title"
                    rules={
                      Array [
                        Object {
                          "message": "Please enter title!",
                          "required": true,
                        },
                        Object {
                          "max": 500,
                          "message": "Name must be maximum 500 characters.",
                        },
                      ]
                    }
                  >
                    <WrapperField
                      label="Title"
                      messageVariables={
                        Object {
                          "label": "Title",
                        }
                      }
                      name="title"
                      onReset={[Function]}
                      rules={
                        Array [
                          Object {
                            "message": "Please enter title!",
                            "required": true,
                          },
                          Object {
                            "max": 500,
                            "message": "Name must be maximum 500 characters.",
                          },
                        ]
                      }
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        fieldContext={
                          Object {
                            "__INTERNAL__": Object {
                              "itemRef": [Function],
                              "name": undefined,
                            },
                            "getFieldError": [Function],
                            "getFieldInstance": [Function],
                            "getFieldValue": [Function],
                            "getFieldsError": [Function],
                            "getFieldsValue": [Function],
                            "getInternalHooks": [Function],
                            "isFieldTouched": [Function],
                            "isFieldValidating": [Function],
                            "isFieldsTouched": [Function],
                            "isFieldsValidating": [Function],
                            "resetFields": [Function],
                            "scrollToField": [Function],
                            "setFields": [Function],
                            "setFieldsValue": [Function],
                            "submit": [Function],
                            "validateFields": [Function],
                            "validateTrigger": "onChange",
                          }
                        }
                        key="_title"
                        label="Title"
                        messageVariables={
                          Object {
                            "label": "Title",
                          }
                        }
                        name={
                          Array [
                            "title",
                          ]
                        }
                        onReset={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please enter title!",
                              "required": true,
                            },
                            Object {
                              "max": 500,
                              "message": "Name must be maximum 500 characters.",
                            },
                          ]
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={Object {}}
                          >
                            <FormItemLabel
                              htmlFor="title"
                              label="Title"
                              name="title"
                              prefixCls="ant-form"
                              required={true}
                              requiredMark={true}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please enter title!",
                                    "required": true,
                                  },
                                  Object {
                                    "max": 500,
                                    "message": "Name must be maximum 500 characters.",
                                  },
                                ]
                              }
                            >
                              <Col
                                className="ant-form-item-label"
                                span={3}
                              >
                                <div
                                  className="ant-col ant-col-3 ant-form-item-label"
                                  style={Object {}}
                                >
                                  <label
                                    className="ant-form-item-required"
                                    htmlFor="title"
                                    title="Title"
                                  >
                                    Title
                                  </label>
                                </div>
                              </Col>
                            </FormItemLabel>
                            <FormItemInput
                              errors={Array []}
                              label="Title"
                              name={
                                Array [
                                  "title",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              rules={
                                Array [
                                  Object {
                                    "message": "Please enter title!",
                                    "required": true,
                                  },
                                  Object {
                                    "max": 500,
                                    "message": "Name must be maximum 500 characters.",
                                  },
                                ]
                              }
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={12}
                              >
                                <div
                                  className="ant-col ant-col-12 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                        value="Post-1"
                                      >
                                        <Input
                                          id="title"
                                          onChange={[Function]}
                                          placeholder="Add title for the post"
                                          rows={2}
                                          type="text"
                                          value="Post-1"
                                        >
                                          <ClearableLabeledInput
                                            bordered={true}
                                            element={
                                              <input
                                                className="ant-input"
                                                id="title"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Add title for the post"
                                                rows={2}
                                                type="text"
                                                value="Post-1"
                                              />
                                            }
                                            focused={false}
                                            handleReset={[Function]}
                                            id="title"
                                            inputType="input"
                                            onChange={[Function]}
                                            placeholder="Add title for the post"
                                            prefixCls="ant-input"
                                            rows={2}
                                            triggerFocus={[Function]}
                                            type="text"
                                            value="Post-1"
                                          >
                                            <input
                                              className="ant-input"
                                              id="title"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder="Add title for the post"
                                              rows={2}
                                              type="text"
                                              value="Post-1"
                                            />
                                          </ClearableLabeledInput>
                                        </Input>
                                      </Component>
                                    </div>
                                  </div>
                                  <ErrorList
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                  >
                                    <CSSMotion
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionName="ant-show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                </TitleInput>
                <SlugInput>
                  <FormItem
                    label="Slug"
                    name="slug"
                    rules={
                      Array [
                        Object {
                          "message": "Please input the slug!",
                          "required": true,
                        },
                        Object {
                          "message": "Please enter valid slug!",
                          "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                        },
                      ]
                    }
                  >
                    <WrapperField
                      label="Slug"
                      messageVariables={
                        Object {
                          "label": "Slug",
                        }
                      }
                      name="slug"
                      onReset={[Function]}
                      rules={
                        Array [
                          Object {
                            "message": "Please input the slug!",
                            "required": true,
                          },
                          Object {
                            "message": "Please enter valid slug!",
                            "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                          },
                        ]
                      }
                      trigger="onChange"
                      validateTrigger="onChange"
                    >
                      <Field
                        fieldContext={
                          Object {
                            "__INTERNAL__": Object {
                              "itemRef": [Function],
                              "name": undefined,
                            },
                            "getFieldError": [Function],
                            "getFieldInstance": [Function],
                            "getFieldValue": [Function],
                            "getFieldsError": [Function],
                            "getFieldsValue": [Function],
                            "getInternalHooks": [Function],
                            "isFieldTouched": [Function],
                            "isFieldValidating": [Function],
                            "isFieldsTouched": [Function],
                            "isFieldsValidating": [Function],
                            "resetFields": [Function],
                            "scrollToField": [Function],
                            "setFields": [Function],
                            "setFieldsValue": [Function],
                            "submit": [Function],
                            "validateFields": [Function],
                            "validateTrigger": "onChange",
                          }
                        }
                        key="_slug"
                        label="Slug"
                        messageVariables={
                          Object {
                            "label": "Slug",
                          }
                        }
                        name={
                          Array [
                            "slug",
                          ]
                        }
                        onReset={[Function]}
                        rules={
                          Array [
                            Object {
                              "message": "Please input the slug!",
                              "required": true,
                            },
                            Object {
                              "message": "Please enter valid slug!",
                              "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                            },
                          ]
                        }
                        trigger="onChange"
                        validateTrigger="onChange"
                        valuePropName="value"
                      >
                        <Row
                          className="ant-form-item"
                          key="row"
                        >
                          <div
                            className="ant-row ant-form-item"
                            style={Object {}}
                          >
                            <FormItemLabel
                              htmlFor="slug"
                              label="Slug"
                              name="slug"
                              prefixCls="ant-form"
                              required={true}
                              requiredMark={true}
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the slug!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Please enter valid slug!",
                                    "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                  },
                                ]
                              }
                            >
                              <Col
                                className="ant-form-item-label"
                                span={3}
                              >
                                <div
                                  className="ant-col ant-col-3 ant-form-item-label"
                                  style={Object {}}
                                >
                                  <label
                                    className="ant-form-item-required"
                                    htmlFor="slug"
                                    title="Slug"
                                  >
                                    Slug
                                  </label>
                                </div>
                              </Col>
                            </FormItemLabel>
                            <FormItemInput
                              errors={Array []}
                              label="Slug"
                              name={
                                Array [
                                  "slug",
                                ]
                              }
                              onDomErrorVisibleChange={[Function]}
                              prefixCls="ant-form"
                              rules={
                                Array [
                                  Object {
                                    "message": "Please input the slug!",
                                    "required": true,
                                  },
                                  Object {
                                    "message": "Please enter valid slug!",
                                    "pattern": /\\^\\[a-z0-9\\]\\+\\(\\?:-\\[a-z0-9\\]\\+\\)\\*\\$/,
                                  },
                                ]
                              }
                              status=""
                              touched={false}
                              validateStatus=""
                              validating={false}
                            >
                              <Col
                                className="ant-form-item-control"
                                span={12}
                              >
                                <div
                                  className="ant-col ant-col-12 ant-form-item-control"
                                  style={Object {}}
                                >
                                  <div
                                    className="ant-form-item-control-input"
                                  >
                                    <div
                                      className="ant-form-item-control-input-content"
                                    >
                                      <Component
                                        update={1}
                                        value="post-1"
                                      >
                                        <Input
                                          id="slug"
                                          onChange={[Function]}
                                          type="text"
                                          value="post-1"
                                        >
                                          <ClearableLabeledInput
                                            bordered={true}
                                            element={
                                              <input
                                                className="ant-input"
                                                id="slug"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                type="text"
                                                value="post-1"
                                              />
                                            }
                                            focused={false}
                                            handleReset={[Function]}
                                            id="slug"
                                            inputType="input"
                                            onChange={[Function]}
                                            prefixCls="ant-input"
                                            triggerFocus={[Function]}
                                            type="text"
                                            value="post-1"
                                          >
                                            <input
                                              className="ant-input"
                                              id="slug"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              value="post-1"
                                            />
                                          </ClearableLabeledInput>
                                        </Input>
                                      </Component>
                                    </div>
                                  </div>
                                  <ErrorList
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                  >
                                    <CSSMotion
                                      motionAppear={true}
                                      motionDeadline={500}
                                      motionName="ant-show-help"
                                      onLeaveEnd={[Function]}
                                      removeOnLeave={true}
                                      visible={false}
                                    >
                                      <DomWrapper />
                                    </CSSMotion>
                                  </ErrorList>
                                </div>
                              </Col>
                            </FormItemInput>
                          </div>
                        </Row>
                      </Field>
                    </WrapperField>
                  </FormItem>
                </SlugInput>
                <FormItem
                  label="Status"
                  name="status"
                >
                  <WrapperField
                    label="Status"
                    messageVariables={
                      Object {
                        "label": "Status",
                      }
                    }
                    name="status"
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                  >
                    <Field
                      fieldContext={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": undefined,
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                          "validateTrigger": "onChange",
                        }
                      }
                      key="_status"
                      label="Status"
                      messageVariables={
                        Object {
                          "label": "Status",
                        }
                      }
                      name={
                        Array [
                          "status",
                        ]
                      }
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                      valuePropName="value"
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            htmlFor="status"
                            label="Status"
                            name="status"
                            prefixCls="ant-form"
                            required={false}
                            requiredMark={true}
                          >
                            <Col
                              className="ant-form-item-label"
                              span={3}
                            >
                              <div
                                className="ant-col ant-col-3 ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  htmlFor="status"
                                  title="Status"
                                >
                                  Status
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="Status"
                            name={
                              Array [
                                "status",
                              ]
                            }
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validateStatus=""
                            validating={false}
                          >
                            <Col
                              className="ant-form-item-control"
                              span={12}
                            >
                              <div
                                className="ant-col ant-col-12 ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Component
                                      update={1}
                                      value="draft"
                                    >
                                      <ForwardRef(InternalSelect)
                                        id="status"
                                        onChange={[Function]}
                                        style={
                                          Object {
                                            "maxWidth": "160px",
                                          }
                                        }
                                        value="draft"
                                      >
                                        <Select
                                          className=""
                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                          dropdownClassName=""
                                          id="status"
                                          inputIcon={[Function]}
                                          listHeight={256}
                                          listItemHeight={24}
                                          menuItemSelectedIcon={null}
                                          notFoundContent={
                                            <Context.Consumer>
                                              [Function]
                                            </Context.Consumer>
                                          }
                                          onChange={[Function]}
                                          prefixCls="ant-select"
                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                          style={
                                            Object {
                                              "maxWidth": "160px",
                                            }
                                          }
                                          transitionName="ant-slide-up"
                                          value="draft"
                                        >
                                          <ForwardRef(Select)
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            dropdownClassName=""
                                            id="status"
                                            inputIcon={[Function]}
                                            listHeight={256}
                                            listItemHeight={24}
                                            menuItemSelectedIcon={null}
                                            notFoundContent={
                                              <Context.Consumer>
                                                [Function]
                                              </Context.Consumer>
                                            }
                                            onChange={[Function]}
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            style={
                                              Object {
                                                "maxWidth": "160px",
                                              }
                                            }
                                            transitionName="ant-slide-up"
                                            value="draft"
                                          >
                                            <div
                                              className="ant-select ant-select-single ant-select-show-arrow"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              style={
                                                Object {
                                                  "maxWidth": "160px",
                                                }
                                              }
                                            >
                                              <SelectTrigger
                                                containerWidth={null}
                                                dropdownClassName=""
                                                empty={false}
                                                getTriggerDOMNode={[Function]}
                                                popupElement={
                                                  <ForwardRef(OptionList)
                                                    childrenAsData={true}
                                                    defaultActiveFirstOption={true}
                                                    flattenOptions={
                                                      Array [
                                                        Object {
                                                          "data": Object {
                                                            "children": "Published",
                                                            "key": null,
                                                            "value": "publish",
                                                          },
                                                          "groupOption": false,
                                                          "key": "publish",
                                                        },
                                                        Object {
                                                          "data": Object {
                                                            "children": "Draft",
                                                            "key": null,
                                                            "value": "draft",
                                                          },
                                                          "groupOption": false,
                                                          "key": "draft",
                                                        },
                                                        Object {
                                                          "data": Object {
                                                            "children": "Ready to Publish",
                                                            "key": null,
                                                            "value": "ready",
                                                          },
                                                          "groupOption": false,
                                                          "key": "ready",
                                                        },
                                                      ]
                                                    }
                                                    height={256}
                                                    id="status"
                                                    itemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onActiveValue={[Function]}
                                                    onMouseEnter={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "children": "Published",
                                                          "key": null,
                                                          "value": "publish",
                                                        },
                                                        Object {
                                                          "children": "Draft",
                                                          "key": null,
                                                          "value": "draft",
                                                        },
                                                        Object {
                                                          "children": "Ready to Publish",
                                                          "key": null,
                                                          "value": "ready",
                                                        },
                                                      ]
                                                    }
                                                    prefixCls="ant-select"
                                                    searchValue=""
                                                    values={
                                                      Set {
                                                        "draft",
                                                      }
                                                    }
                                                    virtual={true}
                                                  />
                                                }
                                                prefixCls="ant-select"
                                                transitionName="ant-slide-up"
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div>
                                                      <ForwardRef(OptionList)
                                                        childrenAsData={true}
                                                        defaultActiveFirstOption={true}
                                                        flattenOptions={
                                                          Array [
                                                            Object {
                                                              "data": Object {
                                                                "children": "Published",
                                                                "key": null,
                                                                "value": "publish",
                                                              },
                                                              "groupOption": false,
                                                              "key": "publish",
                                                            },
                                                            Object {
                                                              "data": Object {
                                                                "children": "Draft",
                                                                "key": null,
                                                                "value": "draft",
                                                              },
                                                              "groupOption": false,
                                                              "key": "draft",
                                                            },
                                                            Object {
                                                              "data": Object {
                                                                "children": "Ready to Publish",
                                                                "key": null,
                                                                "value": "ready",
                                                              },
                                                              "groupOption": false,
                                                              "key": "ready",
                                                            },
                                                          ]
                                                        }
                                                        height={256}
                                                        id="status"
                                                        itemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onActiveValue={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        options={
                                                          Array [
                                                            Object {
                                                              "children": "Published",
                                                              "key": null,
                                                              "value": "publish",
                                                            },
                                                            Object {
                                                              "children": "Draft",
                                                              "key": null,
                                                              "value": "draft",
                                                            },
                                                            Object {
                                                              "children": "Ready to Publish",
                                                              "key": null,
                                                              "value": "ready",
                                                            },
                                                          ]
                                                        }
                                                        prefixCls="ant-select"
                                                        searchValue=""
                                                        values={
                                                          Set {
                                                            "draft",
                                                          }
                                                        }
                                                        virtual={true}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName=""
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={
                                                    Object {
                                                      "minWidth": null,
                                                      "width": null,
                                                    }
                                                  }
                                                  popupTransitionName="ant-slide-up"
                                                  prefixCls="ant-select-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <Selector
                                                    accessibilityIndex={0}
                                                    activeValue={null}
                                                    className=""
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    domRef={
                                                      Object {
                                                        "current": <div
                                                          class="ant-select-selector"
                                                        >
                                                          <span
                                                            class="ant-select-selection-search"
                                                          >
                                                            <input
                                                              aria-activedescendant="status_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="status_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="status_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="status"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </span>
                                                          <span
                                                            class="ant-select-selection-item"
                                                            title="Draft"
                                                          >
                                                            Draft
                                                          </span>
                                                        </div>,
                                                      }
                                                    }
                                                    dropdownClassName=""
                                                    id="status"
                                                    inputElement={null}
                                                    inputIcon={[Function]}
                                                    key="trigger"
                                                    listHeight={256}
                                                    listItemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    multiple={false}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    onChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSubmit={[Function]}
                                                    onSelect={[Function]}
                                                    onToggleOpen={[Function]}
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    showSearch={false}
                                                    style={
                                                      Object {
                                                        "maxWidth": "160px",
                                                      }
                                                    }
                                                    tokenWithEnter={false}
                                                    transitionName="ant-slide-up"
                                                    value="draft"
                                                    values={
                                                      Array [
                                                        Object {
                                                          "disabled": undefined,
                                                          "key": "draft",
                                                          "label": "Draft",
                                                          "value": "draft",
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="ant-select-selector"
                                                      onClick={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SingleSelector
                                                        accessibilityIndex={0}
                                                        activeValue={null}
                                                        className=""
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        domRef={
                                                          Object {
                                                            "current": <div
                                                              class="ant-select-selector"
                                                            >
                                                              <span
                                                                class="ant-select-selection-search"
                                                              >
                                                                <input
                                                                  aria-activedescendant="status_list_0"
                                                                  aria-autocomplete="list"
                                                                  aria-controls="status_list"
                                                                  aria-haspopup="listbox"
                                                                  aria-owns="status_list"
                                                                  autocomplete="off"
                                                                  class="ant-select-selection-search-input"
                                                                  id="status"
                                                                  readonly=""
                                                                  role="combobox"
                                                                  style="opacity: 0;"
                                                                  type="search"
                                                                  unselectable="on"
                                                                  value=""
                                                                />
                                                              </span>
                                                              <span
                                                                class="ant-select-selection-item"
                                                                title="Draft"
                                                              >
                                                                Draft
                                                              </span>
                                                            </div>,
                                                          }
                                                        }
                                                        dropdownClassName=""
                                                        id="status"
                                                        inputElement={null}
                                                        inputIcon={[Function]}
                                                        inputRef={
                                                          Object {
                                                            "current": <input
                                                              aria-activedescendant="status_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="status_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="status_list"
                                                              autocomplete="off"
                                                              class="ant-select-selection-search-input"
                                                              id="status"
                                                              readonly=""
                                                              role="combobox"
                                                              style="opacity: 0;"
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />,
                                                          }
                                                        }
                                                        listHeight={256}
                                                        listItemHeight={24}
                                                        menuItemSelectedIcon={null}
                                                        multiple={false}
                                                        notFoundContent={
                                                          <Context.Consumer>
                                                            [Function]
                                                          </Context.Consumer>
                                                        }
                                                        onChange={[Function]}
                                                        onInputChange={[Function]}
                                                        onInputCompositionEnd={[Function]}
                                                        onInputCompositionStart={[Function]}
                                                        onInputKeyDown={[Function]}
                                                        onInputMouseDown={[Function]}
                                                        onInputPaste={[Function]}
                                                        onSearch={[Function]}
                                                        onSearchSubmit={[Function]}
                                                        onSelect={[Function]}
                                                        onToggleOpen={[Function]}
                                                        prefixCls="ant-select"
                                                        removeIcon={<ForwardRef(CloseOutlined) />}
                                                        searchValue=""
                                                        showSearch={false}
                                                        style={
                                                          Object {
                                                            "maxWidth": "160px",
                                                          }
                                                        }
                                                        tokenWithEnter={false}
                                                        transitionName="ant-slide-up"
                                                        value="draft"
                                                        values={
                                                          Array [
                                                            Object {
                                                              "disabled": undefined,
                                                              "key": "draft",
                                                              "label": "Draft",
                                                              "value": "draft",
                                                            },
                                                          ]
                                                        }
                                                      >
                                                        <span
                                                          className="ant-select-selection-search"
                                                        >
                                                          <Input
                                                            accessibilityIndex={0}
                                                            attrs={Object {}}
                                                            editable={false}
                                                            id="status"
                                                            inputElement={null}
                                                            onChange={[Function]}
                                                            onCompositionEnd={[Function]}
                                                            onCompositionStart={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onPaste={[Function]}
                                                            prefixCls="ant-select"
                                                            value=""
                                                          >
                                                            <input
                                                              aria-activedescendant="status_list_0"
                                                              aria-autocomplete="list"
                                                              aria-controls="status_list"
                                                              aria-haspopup="listbox"
                                                              aria-owns="status_list"
                                                              autoComplete="off"
                                                              className="ant-select-selection-search-input"
                                                              id="status"
                                                              onChange={[Function]}
                                                              onCompositionEnd={[Function]}
                                                              onCompositionStart={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onPaste={[Function]}
                                                              readOnly={true}
                                                              role="combobox"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                }
                                                              }
                                                              type="search"
                                                              unselectable="on"
                                                              value=""
                                                            />
                                                          </Input>
                                                        </span>
                                                        <span
                                                          className="ant-select-selection-item"
                                                          title="Draft"
                                                        >
                                                          Draft
                                                        </span>
                                                      </SingleSelector>
                                                    </div>
                                                  </Selector>
                                                </Trigger>
                                              </SelectTrigger>
                                              <TransBtn
                                                className="ant-select-arrow"
                                                customizeIcon={[Function]}
                                                customizeIconProps={
                                                  Object {
                                                    "focused": false,
                                                    "loading": undefined,
                                                    "open": undefined,
                                                    "searchValue": "",
                                                    "showSearch": false,
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-hidden={true}
                                                  className="ant-select-arrow"
                                                  onMouseDown={[Function]}
                                                  style={
                                                    Object {
                                                      "WebkitUserSelect": "none",
                                                      "userSelect": "none",
                                                    }
                                                  }
                                                  unselectable="on"
                                                >
                                                  <ForwardRef(DownOutlined)
                                                    className="ant-select-suffix"
                                                  >
                                                    <AntdIcon
                                                      className="ant-select-suffix"
                                                      icon={
                                                        Object {
                                                          "icon": Object {
                                                            "attrs": Object {
                                                              "focusable": "false",
                                                              "viewBox": "64 64 896 896",
                                                            },
                                                            "children": Array [
                                                              Object {
                                                                "attrs": Object {
                                                                  "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                },
                                                                "tag": "path",
                                                              },
                                                            ],
                                                            "tag": "svg",
                                                          },
                                                          "name": "down",
                                                          "theme": "outlined",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        aria-label="down"
                                                        className="anticon anticon-down ant-select-suffix"
                                                        role="img"
                                                      >
                                                        <IconReact
                                                          icon={
                                                            Object {
                                                              "icon": Object {
                                                                "attrs": Object {
                                                                  "focusable": "false",
                                                                  "viewBox": "64 64 896 896",
                                                                },
                                                                "children": Array [
                                                                  Object {
                                                                    "attrs": Object {
                                                                      "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                    },
                                                                    "tag": "path",
                                                                  },
                                                                ],
                                                                "tag": "svg",
                                                              },
                                                              "name": "down",
                                                              "theme": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            data-icon="down"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            key="svg-down"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                              key="svg-down-svg-0"
                                                            />
                                                          </svg>
                                                        </IconReact>
                                                      </span>
                                                    </AntdIcon>
                                                  </ForwardRef(DownOutlined)>
                                                </span>
                                              </TransBtn>
                                            </div>
                                          </ForwardRef(Select)>
                                        </Select>
                                      </ForwardRef(InternalSelect)>
                                    </Component>
                                  </div>
                                </div>
                                <ErrorList
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                >
                                  <CSSMotion
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="ant-show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </Field>
                  </WrapperField>
                </FormItem>
                <FormItem
                  label="Published Date"
                  name="published_date"
                >
                  <WrapperField
                    label="Published Date"
                    messageVariables={
                      Object {
                        "label": "Published Date",
                      }
                    }
                    name="published_date"
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                  >
                    <Field
                      fieldContext={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": undefined,
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                          "validateTrigger": "onChange",
                        }
                      }
                      key="_published_date"
                      label="Published Date"
                      messageVariables={
                        Object {
                          "label": "Published Date",
                        }
                      }
                      name={
                        Array [
                          "published_date",
                        ]
                      }
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                      valuePropName="value"
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            htmlFor="published_date"
                            label="Published Date"
                            name="published_date"
                            prefixCls="ant-form"
                            required={false}
                            requiredMark={true}
                          >
                            <Col
                              className="ant-form-item-label"
                              span={3}
                            >
                              <div
                                className="ant-col ant-col-3 ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  htmlFor="published_date"
                                  title="Published Date"
                                >
                                  Published Date
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="Published Date"
                            name={
                              Array [
                                "published_date",
                              ]
                            }
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validateStatus=""
                            validating={false}
                          >
                            <Col
                              className="ant-form-item-control"
                              span={12}
                            >
                              <div
                                className="ant-col ant-col-12 ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Component
                                      update={1}
                                      value={null}
                                    >
                                      <Picker
                                        id="published_date"
                                        onChange={[Function]}
                                        value={null}
                                      >
                                        <LocaleReceiver
                                          componentName="DatePicker"
                                          defaultLocale={
                                            Object {
                                              "lang": Object {
                                                "backToToday": "Back to today",
                                                "clear": "Clear",
                                                "dateFormat": "M/D/YYYY",
                                                "dateSelect": "select date",
                                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                "dayFormat": "D",
                                                "decadeSelect": "Choose a decade",
                                                "locale": "en_US",
                                                "month": "Month",
                                                "monthBeforeYear": true,
                                                "monthPlaceholder": "Select month",
                                                "monthSelect": "Choose a month",
                                                "nextCentury": "Next century",
                                                "nextDecade": "Next decade",
                                                "nextMonth": "Next month (PageDown)",
                                                "nextYear": "Next year (Control + right)",
                                                "now": "Now",
                                                "ok": "Ok",
                                                "placeholder": "Select date",
                                                "previousCentury": "Last century",
                                                "previousDecade": "Last decade",
                                                "previousMonth": "Previous month (PageUp)",
                                                "previousYear": "Last year (Control + left)",
                                                "quarterPlaceholder": "Select quarter",
                                                "rangeMonthPlaceholder": Array [
                                                  "Start month",
                                                  "End month",
                                                ],
                                                "rangePlaceholder": Array [
                                                  "Start date",
                                                  "End date",
                                                ],
                                                "rangeWeekPlaceholder": Array [
                                                  "Start week",
                                                  "End week",
                                                ],
                                                "rangeYearPlaceholder": Array [
                                                  "Start year",
                                                  "End year",
                                                ],
                                                "timeSelect": "select time",
                                                "today": "Today",
                                                "weekPlaceholder": "Select week",
                                                "weekSelect": "Choose a week",
                                                "year": "Year",
                                                "yearFormat": "YYYY",
                                                "yearPlaceholder": "Select year",
                                                "yearSelect": "Choose a year",
                                              },
                                              "timePickerLocale": Object {
                                                "placeholder": "Select time",
                                                "rangePlaceholder": Array [
                                                  "Start time",
                                                  "End time",
                                                ],
                                              },
                                            }
                                          }
                                        >
                                          <Picker
                                            allowClear={true}
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            components={
                                              Object {
                                                "button": [Function],
                                                "rangeItem": [Function],
                                              }
                                            }
                                            generateConfig={
                                              Object {
                                                "addDate": [Function],
                                                "addMonth": [Function],
                                                "addYear": [Function],
                                                "getDate": [Function],
                                                "getEndDate": [Function],
                                                "getFixedDate": [Function],
                                                "getHour": [Function],
                                                "getMinute": [Function],
                                                "getMonth": [Function],
                                                "getNow": [Function],
                                                "getSecond": [Function],
                                                "getWeekDay": [Function],
                                                "getYear": [Function],
                                                "isAfter": [Function],
                                                "isValidate": [Function],
                                                "locale": Object {
                                                  "format": [Function],
                                                  "getShortMonths": [Function],
                                                  "getShortWeekDays": [Function],
                                                  "getWeek": [Function],
                                                  "getWeekFirstDate": [Function],
                                                  "getWeekFirstDay": [Function],
                                                  "parse": [Function],
                                                },
                                                "setDate": [Function],
                                                "setHour": [Function],
                                                "setMinute": [Function],
                                                "setMonth": [Function],
                                                "setSecond": [Function],
                                                "setYear": [Function],
                                              }
                                            }
                                            id="published_date"
                                            locale={
                                              Object {
                                                "backToToday": "Back to today",
                                                "clear": "Clear",
                                                "dateFormat": "M/D/YYYY",
                                                "dateSelect": "select date",
                                                "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                "dayFormat": "D",
                                                "decadeSelect": "Choose a decade",
                                                "locale": "en_US",
                                                "month": "Month",
                                                "monthBeforeYear": true,
                                                "monthPlaceholder": "Select month",
                                                "monthSelect": "Choose a month",
                                                "nextCentury": "Next century",
                                                "nextDecade": "Next decade",
                                                "nextMonth": "Next month (PageDown)",
                                                "nextYear": "Next year (Control + right)",
                                                "now": "Now",
                                                "ok": "Ok",
                                                "placeholder": "Select date",
                                                "previousCentury": "Last century",
                                                "previousDecade": "Last decade",
                                                "previousMonth": "Previous month (PageUp)",
                                                "previousYear": "Last year (Control + left)",
                                                "quarterPlaceholder": "Select quarter",
                                                "rangeMonthPlaceholder": Array [
                                                  "Start month",
                                                  "End month",
                                                ],
                                                "rangePlaceholder": Array [
                                                  "Start date",
                                                  "End date",
                                                ],
                                                "rangeWeekPlaceholder": Array [
                                                  "Start week",
                                                  "End week",
                                                ],
                                                "rangeYearPlaceholder": Array [
                                                  "Start year",
                                                  "End year",
                                                ],
                                                "timeSelect": "select time",
                                                "today": "Today",
                                                "weekPlaceholder": "Select week",
                                                "weekSelect": "Choose a week",
                                                "year": "Year",
                                                "yearFormat": "YYYY",
                                                "yearPlaceholder": "Select year",
                                                "yearSelect": "Choose a year",
                                              }
                                            }
                                            nextIcon={
                                              <span
                                                className="ant-picker-next-icon"
                                              />
                                            }
                                            onChange={[Function]}
                                            placeholder="Select date"
                                            prefixCls="ant-picker"
                                            prevIcon={
                                              <span
                                                className="ant-picker-prev-icon"
                                              />
                                            }
                                            showToday={true}
                                            suffixIcon={<ForwardRef(CalendarOutlined) />}
                                            superNextIcon={
                                              <span
                                                className="ant-picker-super-next-icon"
                                              />
                                            }
                                            superPrevIcon={
                                              <span
                                                className="ant-picker-super-prev-icon"
                                              />
                                            }
                                            transitionName="ant-slide-up"
                                            value={null}
                                          >
                                            <InnerPicker
                                              allowClear={true}
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              components={
                                                Object {
                                                  "button": [Function],
                                                  "rangeItem": [Function],
                                                }
                                              }
                                              generateConfig={
                                                Object {
                                                  "addDate": [Function],
                                                  "addMonth": [Function],
                                                  "addYear": [Function],
                                                  "getDate": [Function],
                                                  "getEndDate": [Function],
                                                  "getFixedDate": [Function],
                                                  "getHour": [Function],
                                                  "getMinute": [Function],
                                                  "getMonth": [Function],
                                                  "getNow": [Function],
                                                  "getSecond": [Function],
                                                  "getWeekDay": [Function],
                                                  "getYear": [Function],
                                                  "isAfter": [Function],
                                                  "isValidate": [Function],
                                                  "locale": Object {
                                                    "format": [Function],
                                                    "getShortMonths": [Function],
                                                    "getShortWeekDays": [Function],
                                                    "getWeek": [Function],
                                                    "getWeekFirstDate": [Function],
                                                    "getWeekFirstDay": [Function],
                                                    "parse": [Function],
                                                  },
                                                  "setDate": [Function],
                                                  "setHour": [Function],
                                                  "setMinute": [Function],
                                                  "setMonth": [Function],
                                                  "setSecond": [Function],
                                                  "setYear": [Function],
                                                }
                                              }
                                              id="published_date"
                                              locale={
                                                Object {
                                                  "backToToday": "Back to today",
                                                  "clear": "Clear",
                                                  "dateFormat": "M/D/YYYY",
                                                  "dateSelect": "select date",
                                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                  "dayFormat": "D",
                                                  "decadeSelect": "Choose a decade",
                                                  "locale": "en_US",
                                                  "month": "Month",
                                                  "monthBeforeYear": true,
                                                  "monthPlaceholder": "Select month",
                                                  "monthSelect": "Choose a month",
                                                  "nextCentury": "Next century",
                                                  "nextDecade": "Next decade",
                                                  "nextMonth": "Next month (PageDown)",
                                                  "nextYear": "Next year (Control + right)",
                                                  "now": "Now",
                                                  "ok": "Ok",
                                                  "placeholder": "Select date",
                                                  "previousCentury": "Last century",
                                                  "previousDecade": "Last decade",
                                                  "previousMonth": "Previous month (PageUp)",
                                                  "previousYear": "Last year (Control + left)",
                                                  "quarterPlaceholder": "Select quarter",
                                                  "rangeMonthPlaceholder": Array [
                                                    "Start month",
                                                    "End month",
                                                  ],
                                                  "rangePlaceholder": Array [
                                                    "Start date",
                                                    "End date",
                                                  ],
                                                  "rangeWeekPlaceholder": Array [
                                                    "Start week",
                                                    "End week",
                                                  ],
                                                  "rangeYearPlaceholder": Array [
                                                    "Start year",
                                                    "End year",
                                                  ],
                                                  "timeSelect": "select time",
                                                  "today": "Today",
                                                  "weekPlaceholder": "Select week",
                                                  "weekSelect": "Choose a week",
                                                  "year": "Year",
                                                  "yearFormat": "YYYY",
                                                  "yearPlaceholder": "Select year",
                                                  "yearSelect": "Choose a year",
                                                }
                                              }
                                              nextIcon={
                                                <span
                                                  className="ant-picker-next-icon"
                                                />
                                              }
                                              onChange={[Function]}
                                              pickerRef={
                                                Object {
                                                  "current": Object {
                                                    "blur": [Function],
                                                    "focus": [Function],
                                                  },
                                                }
                                              }
                                              placeholder="Select date"
                                              prefixCls="ant-picker"
                                              prevIcon={
                                                <span
                                                  className="ant-picker-prev-icon"
                                                />
                                              }
                                              showToday={true}
                                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                                              superNextIcon={
                                                <span
                                                  className="ant-picker-super-next-icon"
                                                />
                                              }
                                              superPrevIcon={
                                                <span
                                                  className="ant-picker-super-prev-icon"
                                                />
                                              }
                                              transitionName="ant-slide-up"
                                              value={null}
                                            >
                                              <PickerTrigger
                                                popupElement={
                                                  <div
                                                    className="ant-picker-panel-container"
                                                    onMouseDown={[Function]}
                                                  >
                                                    <PickerPanel
                                                      allowClear={true}
                                                      className="ant-picker-panel-focused"
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      components={
                                                        Object {
                                                          "button": [Function],
                                                          "rangeItem": [Function],
                                                        }
                                                      }
                                                      generateConfig={
                                                        Object {
                                                          "addDate": [Function],
                                                          "addMonth": [Function],
                                                          "addYear": [Function],
                                                          "getDate": [Function],
                                                          "getEndDate": [Function],
                                                          "getFixedDate": [Function],
                                                          "getHour": [Function],
                                                          "getMinute": [Function],
                                                          "getMonth": [Function],
                                                          "getNow": [Function],
                                                          "getSecond": [Function],
                                                          "getWeekDay": [Function],
                                                          "getYear": [Function],
                                                          "isAfter": [Function],
                                                          "isValidate": [Function],
                                                          "locale": Object {
                                                            "format": [Function],
                                                            "getShortMonths": [Function],
                                                            "getShortWeekDays": [Function],
                                                            "getWeek": [Function],
                                                            "getWeekFirstDate": [Function],
                                                            "getWeekFirstDay": [Function],
                                                            "parse": [Function],
                                                          },
                                                          "setDate": [Function],
                                                          "setHour": [Function],
                                                          "setMinute": [Function],
                                                          "setMonth": [Function],
                                                          "setSecond": [Function],
                                                          "setYear": [Function],
                                                        }
                                                      }
                                                      id="published_date"
                                                      locale={
                                                        Object {
                                                          "backToToday": "Back to today",
                                                          "clear": "Clear",
                                                          "dateFormat": "M/D/YYYY",
                                                          "dateSelect": "select date",
                                                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                          "dayFormat": "D",
                                                          "decadeSelect": "Choose a decade",
                                                          "locale": "en_US",
                                                          "month": "Month",
                                                          "monthBeforeYear": true,
                                                          "monthPlaceholder": "Select month",
                                                          "monthSelect": "Choose a month",
                                                          "nextCentury": "Next century",
                                                          "nextDecade": "Next decade",
                                                          "nextMonth": "Next month (PageDown)",
                                                          "nextYear": "Next year (Control + right)",
                                                          "now": "Now",
                                                          "ok": "Ok",
                                                          "placeholder": "Select date",
                                                          "previousCentury": "Last century",
                                                          "previousDecade": "Last decade",
                                                          "previousMonth": "Previous month (PageUp)",
                                                          "previousYear": "Last year (Control + left)",
                                                          "quarterPlaceholder": "Select quarter",
                                                          "rangeMonthPlaceholder": Array [
                                                            "Start month",
                                                            "End month",
                                                          ],
                                                          "rangePlaceholder": Array [
                                                            "Start date",
                                                            "End date",
                                                          ],
                                                          "rangeWeekPlaceholder": Array [
                                                            "Start week",
                                                            "End week",
                                                          ],
                                                          "rangeYearPlaceholder": Array [
                                                            "Start year",
                                                            "End year",
                                                          ],
                                                          "timeSelect": "select time",
                                                          "today": "Today",
                                                          "weekPlaceholder": "Select week",
                                                          "weekSelect": "Choose a week",
                                                          "year": "Year",
                                                          "yearFormat": "YYYY",
                                                          "yearPlaceholder": "Select year",
                                                          "yearSelect": "Choose a year",
                                                        }
                                                      }
                                                      nextIcon={
                                                        <span
                                                          className="ant-picker-next-icon"
                                                        />
                                                      }
                                                      onChange={null}
                                                      onPanelChange={[Function]}
                                                      onSelect={[Function]}
                                                      pickerRef={
                                                        Object {
                                                          "current": Object {
                                                            "blur": [Function],
                                                            "focus": [Function],
                                                          },
                                                        }
                                                      }
                                                      placeholder="Select date"
                                                      prefixCls="ant-picker"
                                                      prevIcon={
                                                        <span
                                                          className="ant-picker-prev-icon"
                                                        />
                                                      }
                                                      showToday={true}
                                                      suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                      superNextIcon={
                                                        <span
                                                          className="ant-picker-super-next-icon"
                                                        />
                                                      }
                                                      superPrevIcon={
                                                        <span
                                                          className="ant-picker-super-prev-icon"
                                                        />
                                                      }
                                                      tabIndex={-1}
                                                      transitionName="ant-slide-up"
                                                      value={null}
                                                    />
                                                  </div>
                                                }
                                                popupPlacement="bottomLeft"
                                                prefixCls="ant-picker"
                                                transitionName="ant-slide-up"
                                                visible={false}
                                              >
                                                <Trigger
                                                  action={Array []}
                                                  afterPopupVisibleChange={[Function]}
                                                  autoDestroy={false}
                                                  blurDelay={0.15}
                                                  builtinPlacements={
                                                    Object {
                                                      "bottomLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 1,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tl",
                                                          "bl",
                                                        ],
                                                      },
                                                      "bottomRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 1,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "tr",
                                                          "br",
                                                        ],
                                                      },
                                                      "topLeft": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "bl",
                                                          "tl",
                                                        ],
                                                      },
                                                      "topRight": Object {
                                                        "offset": Array [
                                                          0,
                                                          -4,
                                                        ],
                                                        "overflow": Object {
                                                          "adjustX": 0,
                                                          "adjustY": 1,
                                                        },
                                                        "points": Array [
                                                          "br",
                                                          "tr",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  defaultPopupVisible={false}
                                                  destroyPopupOnHide={false}
                                                  focusDelay={0}
                                                  getDocument={[Function]}
                                                  getPopupClassNameFromAlign={[Function]}
                                                  hideAction={Array []}
                                                  mask={false}
                                                  maskClosable={true}
                                                  mouseEnterDelay={0}
                                                  mouseLeaveDelay={0.1}
                                                  onPopupAlign={[Function]}
                                                  onPopupVisibleChange={[Function]}
                                                  popup={
                                                    <div
                                                      className="ant-picker-panel-container"
                                                      onMouseDown={[Function]}
                                                    >
                                                      <PickerPanel
                                                        allowClear={true}
                                                        className="ant-picker-panel-focused"
                                                        clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                        components={
                                                          Object {
                                                            "button": [Function],
                                                            "rangeItem": [Function],
                                                          }
                                                        }
                                                        generateConfig={
                                                          Object {
                                                            "addDate": [Function],
                                                            "addMonth": [Function],
                                                            "addYear": [Function],
                                                            "getDate": [Function],
                                                            "getEndDate": [Function],
                                                            "getFixedDate": [Function],
                                                            "getHour": [Function],
                                                            "getMinute": [Function],
                                                            "getMonth": [Function],
                                                            "getNow": [Function],
                                                            "getSecond": [Function],
                                                            "getWeekDay": [Function],
                                                            "getYear": [Function],
                                                            "isAfter": [Function],
                                                            "isValidate": [Function],
                                                            "locale": Object {
                                                              "format": [Function],
                                                              "getShortMonths": [Function],
                                                              "getShortWeekDays": [Function],
                                                              "getWeek": [Function],
                                                              "getWeekFirstDate": [Function],
                                                              "getWeekFirstDay": [Function],
                                                              "parse": [Function],
                                                            },
                                                            "setDate": [Function],
                                                            "setHour": [Function],
                                                            "setMinute": [Function],
                                                            "setMonth": [Function],
                                                            "setSecond": [Function],
                                                            "setYear": [Function],
                                                          }
                                                        }
                                                        id="published_date"
                                                        locale={
                                                          Object {
                                                            "backToToday": "Back to today",
                                                            "clear": "Clear",
                                                            "dateFormat": "M/D/YYYY",
                                                            "dateSelect": "select date",
                                                            "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                            "dayFormat": "D",
                                                            "decadeSelect": "Choose a decade",
                                                            "locale": "en_US",
                                                            "month": "Month",
                                                            "monthBeforeYear": true,
                                                            "monthPlaceholder": "Select month",
                                                            "monthSelect": "Choose a month",
                                                            "nextCentury": "Next century",
                                                            "nextDecade": "Next decade",
                                                            "nextMonth": "Next month (PageDown)",
                                                            "nextYear": "Next year (Control + right)",
                                                            "now": "Now",
                                                            "ok": "Ok",
                                                            "placeholder": "Select date",
                                                            "previousCentury": "Last century",
                                                            "previousDecade": "Last decade",
                                                            "previousMonth": "Previous month (PageUp)",
                                                            "previousYear": "Last year (Control + left)",
                                                            "quarterPlaceholder": "Select quarter",
                                                            "rangeMonthPlaceholder": Array [
                                                              "Start month",
                                                              "End month",
                                                            ],
                                                            "rangePlaceholder": Array [
                                                              "Start date",
                                                              "End date",
                                                            ],
                                                            "rangeWeekPlaceholder": Array [
                                                              "Start week",
                                                              "End week",
                                                            ],
                                                            "rangeYearPlaceholder": Array [
                                                              "Start year",
                                                              "End year",
                                                            ],
                                                            "timeSelect": "select time",
                                                            "today": "Today",
                                                            "weekPlaceholder": "Select week",
                                                            "weekSelect": "Choose a week",
                                                            "year": "Year",
                                                            "yearFormat": "YYYY",
                                                            "yearPlaceholder": "Select year",
                                                            "yearSelect": "Choose a year",
                                                          }
                                                        }
                                                        nextIcon={
                                                          <span
                                                            className="ant-picker-next-icon"
                                                          />
                                                        }
                                                        onChange={null}
                                                        onPanelChange={[Function]}
                                                        onSelect={[Function]}
                                                        pickerRef={
                                                          Object {
                                                            "current": Object {
                                                              "blur": [Function],
                                                              "focus": [Function],
                                                            },
                                                          }
                                                        }
                                                        placeholder="Select date"
                                                        prefixCls="ant-picker"
                                                        prevIcon={
                                                          <span
                                                            className="ant-picker-prev-icon"
                                                          />
                                                        }
                                                        showToday={true}
                                                        suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                        superNextIcon={
                                                          <span
                                                            className="ant-picker-super-next-icon"
                                                          />
                                                        }
                                                        superPrevIcon={
                                                          <span
                                                            className="ant-picker-super-prev-icon"
                                                          />
                                                        }
                                                        tabIndex={-1}
                                                        transitionName="ant-slide-up"
                                                        value={null}
                                                      />
                                                    </div>
                                                  }
                                                  popupAlign={Object {}}
                                                  popupClassName=""
                                                  popupPlacement="bottomLeft"
                                                  popupStyle={Object {}}
                                                  popupTransitionName="ant-slide-up"
                                                  popupVisible={false}
                                                  prefixCls="ant-picker-dropdown"
                                                  showAction={Array []}
                                                >
                                                  <div
                                                    className="ant-picker"
                                                    key="trigger"
                                                    onMouseUp={[Function]}
                                                  >
                                                    <div
                                                      className="ant-picker-input"
                                                    >
                                                      <input
                                                        autoComplete="off"
                                                        id="published_date"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        placeholder="Select date"
                                                        readOnly={true}
                                                        size={12}
                                                        title=""
                                                        value=""
                                                      />
                                                      <span
                                                        className="ant-picker-suffix"
                                                      >
                                                        <ForwardRef(CalendarOutlined)>
                                                          <AntdIcon
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "calendar",
                                                                "theme": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              aria-label="calendar"
                                                              className="anticon anticon-calendar"
                                                              role="img"
                                                            >
                                                              <IconReact
                                                                icon={
                                                                  Object {
                                                                    "icon": Object {
                                                                      "attrs": Object {
                                                                        "focusable": "false",
                                                                        "viewBox": "64 64 896 896",
                                                                      },
                                                                      "children": Array [
                                                                        Object {
                                                                          "attrs": Object {
                                                                            "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                          },
                                                                          "tag": "path",
                                                                        },
                                                                      ],
                                                                      "tag": "svg",
                                                                    },
                                                                    "name": "calendar",
                                                                    "theme": "outlined",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  data-icon="calendar"
                                                                  fill="currentColor"
                                                                  focusable="false"
                                                                  height="1em"
                                                                  key="svg-calendar"
                                                                  viewBox="64 64 896 896"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                                    key="svg-calendar-svg-0"
                                                                  />
                                                                </svg>
                                                              </IconReact>
                                                            </span>
                                                          </AntdIcon>
                                                        </ForwardRef(CalendarOutlined)>
                                                      </span>
                                                    </div>
                                                  </div>
                                                </Trigger>
                                              </PickerTrigger>
                                            </InnerPicker>
                                          </Picker>
                                        </LocaleReceiver>
                                      </Picker>
                                    </Component>
                                  </div>
                                </div>
                                <ErrorList
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                >
                                  <CSSMotion
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="ant-show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </Field>
                  </WrapperField>
                </FormItem>
                <FormItem
                  label="Categories"
                  name="categories"
                >
                  <WrapperField
                    label="Categories"
                    messageVariables={
                      Object {
                        "label": "Categories",
                      }
                    }
                    name="categories"
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                  >
                    <Field
                      fieldContext={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": undefined,
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                          "validateTrigger": "onChange",
                        }
                      }
                      key="_categories"
                      label="Categories"
                      messageVariables={
                        Object {
                          "label": "Categories",
                        }
                      }
                      name={
                        Array [
                          "categories",
                        ]
                      }
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                      valuePropName="value"
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            htmlFor="categories"
                            label="Categories"
                            name="categories"
                            prefixCls="ant-form"
                            required={false}
                            requiredMark={true}
                          >
                            <Col
                              className="ant-form-item-label"
                              span={3}
                            >
                              <div
                                className="ant-col ant-col-3 ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  htmlFor="categories"
                                  title="Categories"
                                >
                                  Categories
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="Categories"
                            name={
                              Array [
                                "categories",
                              ]
                            }
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validateStatus=""
                            validating={false}
                          >
                            <Col
                              className="ant-form-item-control"
                              span={12}
                            >
                              <div
                                className="ant-col ant-col-12 ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Component
                                      update={1}
                                      value={
                                        Array [
                                          1,
                                        ]
                                      }
                                    >
                                      <Selector
                                        action="Categories"
                                        createEntity="Category"
                                        id="categories"
                                        mode="multiple"
                                        onChange={[Function]}
                                        value={
                                          Array [
                                            1,
                                          ]
                                        }
                                      >
                                        <ForwardRef(InternalSelect)
                                          allowClear={true}
                                          autoClearSearchValue={true}
                                          bordered={true}
                                          defaultValue={
                                            Array [
                                              1,
                                            ]
                                          }
                                          filterOption={[Function]}
                                          getPopupContainer={[Function]}
                                          listHeight={128}
                                          loading={false}
                                          mode="multiple"
                                          notFoundContent={
                                            <Empty
                                              description="No categories available. Type something to create new Category"
                                              image={<Simple />}
                                            />
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          onSearch={[Function]}
                                          placeholder="Select categories"
                                          searchValue=""
                                          value={
                                            Array [
                                              1,
                                            ]
                                          }
                                        >
                                          <Select
                                            allowClear={true}
                                            autoClearSearchValue={true}
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                1,
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            getPopupContainer={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={
                                              <Empty
                                                description="No categories available. Type something to create new Category"
                                                image={<Simple />}
                                              />
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            onSearch={[Function]}
                                            placeholder="Select categories"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            searchValue=""
                                            transitionName="ant-slide-up"
                                            value={
                                              Array [
                                                1,
                                              ]
                                            }
                                          >
                                            <ForwardRef(Select)
                                              allowClear={true}
                                              autoClearSearchValue={true}
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue={
                                                Array [
                                                  1,
                                                ]
                                              }
                                              dropdownClassName=""
                                              filterOption={[Function]}
                                              getPopupContainer={[Function]}
                                              inputIcon={[Function]}
                                              listHeight={128}
                                              listItemHeight={24}
                                              loading={false}
                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                              mode="multiple"
                                              notFoundContent={
                                                <Empty
                                                  description="No categories available. Type something to create new Category"
                                                  image={<Simple />}
                                                />
                                              }
                                              onChange={[Function]}
                                              onPopupScroll={[Function]}
                                              onSearch={[Function]}
                                              placeholder="Select categories"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              searchValue=""
                                              transitionName="ant-slide-up"
                                              value={
                                                Array [
                                                  1,
                                                ]
                                              }
                                            >
                                              <div
                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SelectTrigger
                                                  containerWidth={null}
                                                  dropdownClassName=""
                                                  empty={false}
                                                  getPopupContainer={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  popupElement={
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "children": "Andhra Pradesh",
                                                              "key": "categories1",
                                                              "value": 1,
                                                            },
                                                            "groupOption": false,
                                                            "key": "categories1",
                                                          },
                                                        ]
                                                      }
                                                      height={128}
                                                      id="rc_select_TEST_OR_SSR"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Empty
                                                          description="No categories available. Type something to create new Category"
                                                          image={<Simple />}
                                                        />
                                                      }
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "children": "Andhra Pradesh",
                                                            "key": "categories1",
                                                            "value": 1,
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          1,
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  }
                                                  prefixCls="ant-select"
                                                  transitionName="ant-slide-up"
                                                >
                                                  <Trigger
                                                    action={Array []}
                                                    afterPopupVisibleChange={[Function]}
                                                    autoDestroy={false}
                                                    blurDelay={0.15}
                                                    builtinPlacements={
                                                      Object {
                                                        "bottomLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tl",
                                                            "bl",
                                                          ],
                                                        },
                                                        "bottomRight": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tr",
                                                            "br",
                                                          ],
                                                        },
                                                        "topLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "bl",
                                                            "tl",
                                                          ],
                                                        },
                                                        "topRight": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "br",
                                                            "tr",
                                                          ],
                                                        },
                                                      }
                                                    }
                                                    defaultPopupVisible={false}
                                                    destroyPopupOnHide={false}
                                                    focusDelay={0}
                                                    getDocument={[Function]}
                                                    getPopupClassNameFromAlign={[Function]}
                                                    getPopupContainer={[Function]}
                                                    getTriggerDOMNode={[Function]}
                                                    hideAction={Array []}
                                                    mask={false}
                                                    maskClosable={true}
                                                    mouseEnterDelay={0}
                                                    mouseLeaveDelay={0.1}
                                                    onPopupAlign={[Function]}
                                                    onPopupVisibleChange={[Function]}
                                                    popup={
                                                      <div>
                                                        <ForwardRef(OptionList)
                                                          childrenAsData={true}
                                                          defaultActiveFirstOption={true}
                                                          flattenOptions={
                                                            Array [
                                                              Object {
                                                                "data": Object {
                                                                  "children": "Andhra Pradesh",
                                                                  "key": "categories1",
                                                                  "value": 1,
                                                                },
                                                                "groupOption": false,
                                                                "key": "categories1",
                                                              },
                                                            ]
                                                          }
                                                          height={128}
                                                          id="rc_select_TEST_OR_SSR"
                                                          itemHeight={24}
                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                          multiple={true}
                                                          notFoundContent={
                                                            <Empty
                                                              description="No categories available. Type something to create new Category"
                                                              image={<Simple />}
                                                            />
                                                          }
                                                          onActiveValue={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onScroll={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "children": "Andhra Pradesh",
                                                                "key": "categories1",
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                          prefixCls="ant-select"
                                                          searchValue=""
                                                          values={
                                                            Set {
                                                              1,
                                                            }
                                                          }
                                                          virtual={true}
                                                        />
                                                      </div>
                                                    }
                                                    popupAlign={Object {}}
                                                    popupClassName=""
                                                    popupPlacement="bottomLeft"
                                                    popupStyle={
                                                      Object {
                                                        "minWidth": null,
                                                        "width": null,
                                                      }
                                                    }
                                                    popupTransitionName="ant-slide-up"
                                                    prefixCls="ant-select-dropdown"
                                                    showAction={Array []}
                                                  >
                                                    <Selector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      autoClearSearchValue={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <div
                                                              class="ant-select-selection-overflow"
                                                            >
                                                              <div
                                                                class="ant-select-selection-overflow-item"
                                                                style="opacity: 1;"
                                                              >
                                                                <span
                                                                  class="ant-select-selection-item"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-item-content"
                                                                  >
                                                                    Andhra Pradesh
                                                                  </span>
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="ant-select-selection-item-remove"
                                                                    style="user-select: none;"
                                                                    unselectable="on"
                                                                  >
                                                                    <span
                                                                      aria-label="close"
                                                                      class="anticon anticon-close"
                                                                      role="img"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        data-icon="close"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height="1em"
                                                                        viewBox="64 64 896 896"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </span>
                                                                </span>
                                                              </div>
                                                              <div
                                                                class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                style="opacity: 1;"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-search"
                                                                  style="width: 0px;"
                                                                >
                                                                  <input
                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="rc_select_TEST_OR_SSR"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    type="search"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="ant-select-selection-search-mirror"
                                                                  >
                                                                    
                                                                     
                                                                  </span>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      getPopupContainer={[Function]}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      key="trigger"
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Empty
                                                          description="No categories available. Type something to create new Category"
                                                          image={<Simple />}
                                                        />
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select categories"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      value={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "key": 1,
                                                            "label": "Andhra Pradesh",
                                                            "value": 1,
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="ant-select-selector"
                                                        onClick={[Function]}
                                                        onMouseDown={[Function]}
                                                      >
                                                        <SelectSelector
                                                          accessibilityIndex={0}
                                                          activeValue={null}
                                                          allowClear={true}
                                                          autoClearSearchValue={true}
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue={
                                                            Array [
                                                              1,
                                                            ]
                                                          }
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-overflow"
                                                                >
                                                                  <div
                                                                    class="ant-select-selection-overflow-item"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-item"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item-content"
                                                                      >
                                                                        Andhra Pradesh
                                                                      </span>
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-item-remove"
                                                                        style="user-select: none;"
                                                                        unselectable="on"
                                                                      >
                                                                        <span
                                                                          aria-label="close"
                                                                          class="anticon anticon-close"
                                                                          role="img"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="close"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                            />
                                                                          </svg>
                                                                        </span>
                                                                      </span>
                                                                    </span>
                                                                  </div>
                                                                  <div
                                                                    class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          filterOption={[Function]}
                                                          getPopupContainer={[Function]}
                                                          id="rc_select_TEST_OR_SSR"
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />,
                                                            }
                                                          }
                                                          listHeight={128}
                                                          listItemHeight={24}
                                                          loading={false}
                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                          mode="multiple"
                                                          multiple={true}
                                                          notFoundContent={
                                                            <Empty
                                                              description="No categories available. Type something to create new Category"
                                                              image={<Simple />}
                                                            />
                                                          }
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onInputCompositionEnd={[Function]}
                                                          onInputCompositionStart={[Function]}
                                                          onInputKeyDown={[Function]}
                                                          onInputMouseDown={[Function]}
                                                          onInputPaste={[Function]}
                                                          onPopupScroll={[Function]}
                                                          onSearch={[Function]}
                                                          onSearchSubmit={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          placeholder="Select categories"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          tokenWithEnter={false}
                                                          transitionName="ant-slide-up"
                                                          value={
                                                            Array [
                                                              1,
                                                            ]
                                                          }
                                                          values={
                                                            Array [
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": 1,
                                                                "label": "Andhra Pradesh",
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Overflow
                                                            data={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": 1,
                                                                  "label": "Andhra Pradesh",
                                                                  "value": 1,
                                                                },
                                                              ]
                                                            }
                                                            itemKey="key"
                                                            prefixCls="ant-select-selection-overflow"
                                                            renderItem={[Function]}
                                                            renderRest={[Function]}
                                                            suffix={
                                                              <div
                                                                className="ant-select-selection-search"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                style={
                                                                  Object {
                                                                    "width": 0,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(Input)
                                                                  accessibilityIndex={0}
                                                                  attrs={Object {}}
                                                                  editable={false}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  prefixCls="ant-select"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </div>
                                                            }
                                                          >
                                                            <div
                                                              className="ant-select-selection-overflow"
                                                            >
                                                              <Item
                                                                display={true}
                                                                invalidate={false}
                                                                item={
                                                                  Object {
                                                                    "disabled": undefined,
                                                                    "key": 1,
                                                                    "label": "Andhra Pradesh",
                                                                    "value": 1,
                                                                  }
                                                                }
                                                                itemKey={1}
                                                                key="1"
                                                                order={0}
                                                                prefixCls="ant-select-selection-overflow-item"
                                                                registerSize={[Function]}
                                                                renderItem={[Function]}
                                                                responsive={false}
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow-item"
                                                                  style={
                                                                    Object {
                                                                      "height": undefined,
                                                                      "opacity": 1,
                                                                      "order": undefined,
                                                                      "overflowY": undefined,
                                                                      "pointerEvents": undefined,
                                                                      "position": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-select-selection-item"
                                                                  >
                                                                    <span
                                                                      className="ant-select-selection-item-content"
                                                                    >
                                                                      Andhra Pradesh
                                                                    </span>
                                                                    <TransBtn
                                                                      className="ant-select-selection-item-remove"
                                                                      customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-item-remove"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(CloseOutlined)>
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="close"
                                                                              className="anticon anticon-close"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-close"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                    key="svg-close-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(CloseOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </span>
                                                                </div>
                                                              </Item>
                                                              <Item
                                                                className="ant-select-selection-overflow-item-suffix"
                                                                display={true}
                                                                invalidate={false}
                                                                order={0}
                                                                prefixCls="ant-select-selection-overflow-item"
                                                                registerSize={[Function]}
                                                                responsive={false}
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                  style={
                                                                    Object {
                                                                      "height": undefined,
                                                                      "opacity": 1,
                                                                      "order": undefined,
                                                                      "overflowY": undefined,
                                                                      "pointerEvents": undefined,
                                                                      "position": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selection-search"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      editable={false}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </div>
                                                                </div>
                                                              </Item>
                                                            </div>
                                                          </Overflow>
                                                        </SelectSelector>
                                                      </div>
                                                    </Selector>
                                                  </Trigger>
                                                </SelectTrigger>
                                                <TransBtn
                                                  className="ant-select-clear"
                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                  onMouseDown={[Function]}
                                                >
                                                  <span
                                                    aria-hidden={true}
                                                    className="ant-select-clear"
                                                    onMouseDown={[Function]}
                                                    style={
                                                      Object {
                                                        "WebkitUserSelect": "none",
                                                        "userSelect": "none",
                                                      }
                                                    }
                                                    unselectable="on"
                                                  >
                                                    <ForwardRef(CloseCircleFilled)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="close-circle"
                                                          className="anticon anticon-close-circle"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "close-circle",
                                                                "theme": "filled",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              data-icon="close-circle"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-close-circle"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                key="svg-close-circle-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CloseCircleFilled)>
                                                  </span>
                                                </TransBtn>
                                              </div>
                                            </ForwardRef(Select)>
                                          </Select>
                                        </ForwardRef(InternalSelect)>
                                      </Selector>
                                    </Component>
                                  </div>
                                </div>
                                <ErrorList
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                >
                                  <CSSMotion
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="ant-show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </Field>
                  </WrapperField>
                </FormItem>
                <FormItem
                  label="Tags"
                  name="tags"
                >
                  <WrapperField
                    label="Tags"
                    messageVariables={
                      Object {
                        "label": "Tags",
                      }
                    }
                    name="tags"
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                  >
                    <Field
                      fieldContext={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": undefined,
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                          "validateTrigger": "onChange",
                        }
                      }
                      key="_tags"
                      label="Tags"
                      messageVariables={
                        Object {
                          "label": "Tags",
                        }
                      }
                      name={
                        Array [
                          "tags",
                        ]
                      }
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                      valuePropName="value"
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            htmlFor="tags"
                            label="Tags"
                            name="tags"
                            prefixCls="ant-form"
                            required={false}
                            requiredMark={true}
                          >
                            <Col
                              className="ant-form-item-label"
                              span={3}
                            >
                              <div
                                className="ant-col ant-col-3 ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  htmlFor="tags"
                                  title="Tags"
                                >
                                  Tags
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="Tags"
                            name={
                              Array [
                                "tags",
                              ]
                            }
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validateStatus=""
                            validating={false}
                          >
                            <Col
                              className="ant-form-item-control"
                              span={12}
                            >
                              <div
                                className="ant-col ant-col-12 ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Component
                                      update={1}
                                      value={
                                        Array [
                                          1,
                                        ]
                                      }
                                    >
                                      <Selector
                                        action="Tags"
                                        createEntity="Tag"
                                        id="tags"
                                        mode="multiple"
                                        onChange={[Function]}
                                        value={
                                          Array [
                                            1,
                                          ]
                                        }
                                      >
                                        <ForwardRef(InternalSelect)
                                          allowClear={true}
                                          autoClearSearchValue={true}
                                          bordered={true}
                                          defaultValue={
                                            Array [
                                              1,
                                            ]
                                          }
                                          filterOption={[Function]}
                                          getPopupContainer={[Function]}
                                          listHeight={128}
                                          loading={false}
                                          mode="multiple"
                                          notFoundContent={
                                            <Empty
                                              description="No tags available. Type something to create new Tag"
                                              image={<Simple />}
                                            />
                                          }
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          onSearch={[Function]}
                                          placeholder="Select tags"
                                          searchValue=""
                                          value={
                                            Array [
                                              1,
                                            ]
                                          }
                                        >
                                          <Select
                                            allowClear={true}
                                            autoClearSearchValue={true}
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                1,
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            getPopupContainer={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={
                                              <Empty
                                                description="No tags available. Type something to create new Tag"
                                                image={<Simple />}
                                              />
                                            }
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            onSearch={[Function]}
                                            placeholder="Select tags"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            searchValue=""
                                            transitionName="ant-slide-up"
                                            value={
                                              Array [
                                                1,
                                              ]
                                            }
                                          >
                                            <ForwardRef(Select)
                                              allowClear={true}
                                              autoClearSearchValue={true}
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue={
                                                Array [
                                                  1,
                                                ]
                                              }
                                              dropdownClassName=""
                                              filterOption={[Function]}
                                              getPopupContainer={[Function]}
                                              inputIcon={[Function]}
                                              listHeight={128}
                                              listItemHeight={24}
                                              loading={false}
                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                              mode="multiple"
                                              notFoundContent={
                                                <Empty
                                                  description="No tags available. Type something to create new Tag"
                                                  image={<Simple />}
                                                />
                                              }
                                              onChange={[Function]}
                                              onPopupScroll={[Function]}
                                              onSearch={[Function]}
                                              placeholder="Select tags"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              searchValue=""
                                              transitionName="ant-slide-up"
                                              value={
                                                Array [
                                                  1,
                                                ]
                                              }
                                            >
                                              <div
                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SelectTrigger
                                                  containerWidth={null}
                                                  dropdownClassName=""
                                                  empty={false}
                                                  getPopupContainer={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  popupElement={
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "children": "cricket",
                                                              "key": "tags1",
                                                              "value": 1,
                                                            },
                                                            "groupOption": false,
                                                            "key": "tags1",
                                                          },
                                                        ]
                                                      }
                                                      height={128}
                                                      id="rc_select_TEST_OR_SSR"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Empty
                                                          description="No tags available. Type something to create new Tag"
                                                          image={<Simple />}
                                                        />
                                                      }
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "children": "cricket",
                                                            "key": "tags1",
                                                            "value": 1,
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          1,
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  }
                                                  prefixCls="ant-select"
                                                  transitionName="ant-slide-up"
                                                >
                                                  <Trigger
                                                    action={Array []}
                                                    afterPopupVisibleChange={[Function]}
                                                    autoDestroy={false}
                                                    blurDelay={0.15}
                                                    builtinPlacements={
                                                      Object {
                                                        "bottomLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tl",
                                                            "bl",
                                                          ],
                                                        },
                                                        "bottomRight": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tr",
                                                            "br",
                                                          ],
                                                        },
                                                        "topLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "bl",
                                                            "tl",
                                                          ],
                                                        },
                                                        "topRight": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "br",
                                                            "tr",
                                                          ],
                                                        },
                                                      }
                                                    }
                                                    defaultPopupVisible={false}
                                                    destroyPopupOnHide={false}
                                                    focusDelay={0}
                                                    getDocument={[Function]}
                                                    getPopupClassNameFromAlign={[Function]}
                                                    getPopupContainer={[Function]}
                                                    getTriggerDOMNode={[Function]}
                                                    hideAction={Array []}
                                                    mask={false}
                                                    maskClosable={true}
                                                    mouseEnterDelay={0}
                                                    mouseLeaveDelay={0.1}
                                                    onPopupAlign={[Function]}
                                                    onPopupVisibleChange={[Function]}
                                                    popup={
                                                      <div>
                                                        <ForwardRef(OptionList)
                                                          childrenAsData={true}
                                                          defaultActiveFirstOption={true}
                                                          flattenOptions={
                                                            Array [
                                                              Object {
                                                                "data": Object {
                                                                  "children": "cricket",
                                                                  "key": "tags1",
                                                                  "value": 1,
                                                                },
                                                                "groupOption": false,
                                                                "key": "tags1",
                                                              },
                                                            ]
                                                          }
                                                          height={128}
                                                          id="rc_select_TEST_OR_SSR"
                                                          itemHeight={24}
                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                          multiple={true}
                                                          notFoundContent={
                                                            <Empty
                                                              description="No tags available. Type something to create new Tag"
                                                              image={<Simple />}
                                                            />
                                                          }
                                                          onActiveValue={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onScroll={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "children": "cricket",
                                                                "key": "tags1",
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                          prefixCls="ant-select"
                                                          searchValue=""
                                                          values={
                                                            Set {
                                                              1,
                                                            }
                                                          }
                                                          virtual={true}
                                                        />
                                                      </div>
                                                    }
                                                    popupAlign={Object {}}
                                                    popupClassName=""
                                                    popupPlacement="bottomLeft"
                                                    popupStyle={
                                                      Object {
                                                        "minWidth": null,
                                                        "width": null,
                                                      }
                                                    }
                                                    popupTransitionName="ant-slide-up"
                                                    prefixCls="ant-select-dropdown"
                                                    showAction={Array []}
                                                  >
                                                    <Selector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      autoClearSearchValue={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <div
                                                              class="ant-select-selection-overflow"
                                                            >
                                                              <div
                                                                class="ant-select-selection-overflow-item"
                                                                style="opacity: 1;"
                                                              >
                                                                <span
                                                                  class="ant-select-selection-item"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-item-content"
                                                                  >
                                                                    cricket
                                                                  </span>
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="ant-select-selection-item-remove"
                                                                    style="user-select: none;"
                                                                    unselectable="on"
                                                                  >
                                                                    <span
                                                                      aria-label="close"
                                                                      class="anticon anticon-close"
                                                                      role="img"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        data-icon="close"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height="1em"
                                                                        viewBox="64 64 896 896"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </span>
                                                                </span>
                                                              </div>
                                                              <div
                                                                class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                style="opacity: 1;"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-search"
                                                                  style="width: 0px;"
                                                                >
                                                                  <input
                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="rc_select_TEST_OR_SSR"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    type="search"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="ant-select-selection-search-mirror"
                                                                  >
                                                                    
                                                                     
                                                                  </span>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      getPopupContainer={[Function]}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      key="trigger"
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      multiple={true}
                                                      notFoundContent={
                                                        <Empty
                                                          description="No tags available. Type something to create new Tag"
                                                          image={<Simple />}
                                                        />
                                                      }
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select tags"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      value={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "key": 1,
                                                            "label": "cricket",
                                                            "value": 1,
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="ant-select-selector"
                                                        onClick={[Function]}
                                                        onMouseDown={[Function]}
                                                      >
                                                        <SelectSelector
                                                          accessibilityIndex={0}
                                                          activeValue={null}
                                                          allowClear={true}
                                                          autoClearSearchValue={true}
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue={
                                                            Array [
                                                              1,
                                                            ]
                                                          }
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-overflow"
                                                                >
                                                                  <div
                                                                    class="ant-select-selection-overflow-item"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-item"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item-content"
                                                                      >
                                                                        cricket
                                                                      </span>
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-item-remove"
                                                                        style="user-select: none;"
                                                                        unselectable="on"
                                                                      >
                                                                        <span
                                                                          aria-label="close"
                                                                          class="anticon anticon-close"
                                                                          role="img"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="close"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                            />
                                                                          </svg>
                                                                        </span>
                                                                      </span>
                                                                    </span>
                                                                  </div>
                                                                  <div
                                                                    class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          filterOption={[Function]}
                                                          getPopupContainer={[Function]}
                                                          id="rc_select_TEST_OR_SSR"
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />,
                                                            }
                                                          }
                                                          listHeight={128}
                                                          listItemHeight={24}
                                                          loading={false}
                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                          mode="multiple"
                                                          multiple={true}
                                                          notFoundContent={
                                                            <Empty
                                                              description="No tags available. Type something to create new Tag"
                                                              image={<Simple />}
                                                            />
                                                          }
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onInputCompositionEnd={[Function]}
                                                          onInputCompositionStart={[Function]}
                                                          onInputKeyDown={[Function]}
                                                          onInputMouseDown={[Function]}
                                                          onInputPaste={[Function]}
                                                          onPopupScroll={[Function]}
                                                          onSearch={[Function]}
                                                          onSearchSubmit={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          placeholder="Select tags"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          tokenWithEnter={false}
                                                          transitionName="ant-slide-up"
                                                          value={
                                                            Array [
                                                              1,
                                                            ]
                                                          }
                                                          values={
                                                            Array [
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": 1,
                                                                "label": "cricket",
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Overflow
                                                            data={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": 1,
                                                                  "label": "cricket",
                                                                  "value": 1,
                                                                },
                                                              ]
                                                            }
                                                            itemKey="key"
                                                            prefixCls="ant-select-selection-overflow"
                                                            renderItem={[Function]}
                                                            renderRest={[Function]}
                                                            suffix={
                                                              <div
                                                                className="ant-select-selection-search"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                style={
                                                                  Object {
                                                                    "width": 0,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(Input)
                                                                  accessibilityIndex={0}
                                                                  attrs={Object {}}
                                                                  editable={false}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  prefixCls="ant-select"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </div>
                                                            }
                                                          >
                                                            <div
                                                              className="ant-select-selection-overflow"
                                                            >
                                                              <Item
                                                                display={true}
                                                                invalidate={false}
                                                                item={
                                                                  Object {
                                                                    "disabled": undefined,
                                                                    "key": 1,
                                                                    "label": "cricket",
                                                                    "value": 1,
                                                                  }
                                                                }
                                                                itemKey={1}
                                                                key="1"
                                                                order={0}
                                                                prefixCls="ant-select-selection-overflow-item"
                                                                registerSize={[Function]}
                                                                renderItem={[Function]}
                                                                responsive={false}
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow-item"
                                                                  style={
                                                                    Object {
                                                                      "height": undefined,
                                                                      "opacity": 1,
                                                                      "order": undefined,
                                                                      "overflowY": undefined,
                                                                      "pointerEvents": undefined,
                                                                      "position": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-select-selection-item"
                                                                  >
                                                                    <span
                                                                      className="ant-select-selection-item-content"
                                                                    >
                                                                      cricket
                                                                    </span>
                                                                    <TransBtn
                                                                      className="ant-select-selection-item-remove"
                                                                      customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-item-remove"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(CloseOutlined)>
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="close"
                                                                              className="anticon anticon-close"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-close"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                    key="svg-close-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(CloseOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </span>
                                                                </div>
                                                              </Item>
                                                              <Item
                                                                className="ant-select-selection-overflow-item-suffix"
                                                                display={true}
                                                                invalidate={false}
                                                                order={0}
                                                                prefixCls="ant-select-selection-overflow-item"
                                                                registerSize={[Function]}
                                                                responsive={false}
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                  style={
                                                                    Object {
                                                                      "height": undefined,
                                                                      "opacity": 1,
                                                                      "order": undefined,
                                                                      "overflowY": undefined,
                                                                      "pointerEvents": undefined,
                                                                      "position": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selection-search"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      editable={false}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </div>
                                                                </div>
                                                              </Item>
                                                            </div>
                                                          </Overflow>
                                                        </SelectSelector>
                                                      </div>
                                                    </Selector>
                                                  </Trigger>
                                                </SelectTrigger>
                                                <TransBtn
                                                  className="ant-select-clear"
                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                  onMouseDown={[Function]}
                                                >
                                                  <span
                                                    aria-hidden={true}
                                                    className="ant-select-clear"
                                                    onMouseDown={[Function]}
                                                    style={
                                                      Object {
                                                        "WebkitUserSelect": "none",
                                                        "userSelect": "none",
                                                      }
                                                    }
                                                    unselectable="on"
                                                  >
                                                    <ForwardRef(CloseCircleFilled)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="close-circle"
                                                          className="anticon anticon-close-circle"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "close-circle",
                                                                "theme": "filled",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              data-icon="close-circle"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-close-circle"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                key="svg-close-circle-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CloseCircleFilled)>
                                                  </span>
                                                </TransBtn>
                                              </div>
                                            </ForwardRef(Select)>
                                          </Select>
                                        </ForwardRef(InternalSelect)>
                                      </Selector>
                                    </Component>
                                  </div>
                                </div>
                                <ErrorList
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                >
                                  <CSSMotion
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="ant-show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </Field>
                  </WrapperField>
                </FormItem>
                <FormItem
                  label="Authors"
                  name="authors"
                >
                  <WrapperField
                    label="Authors"
                    messageVariables={
                      Object {
                        "label": "Authors",
                      }
                    }
                    name="authors"
                    onReset={[Function]}
                    trigger="onChange"
                    validateTrigger="onChange"
                  >
                    <Field
                      fieldContext={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": undefined,
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                          "validateTrigger": "onChange",
                        }
                      }
                      key="_authors"
                      label="Authors"
                      messageVariables={
                        Object {
                          "label": "Authors",
                        }
                      }
                      name={
                        Array [
                          "authors",
                        ]
                      }
                      onReset={[Function]}
                      trigger="onChange"
                      validateTrigger="onChange"
                      valuePropName="value"
                    >
                      <Row
                        className="ant-form-item"
                        key="row"
                      >
                        <div
                          className="ant-row ant-form-item"
                          style={Object {}}
                        >
                          <FormItemLabel
                            htmlFor="authors"
                            label="Authors"
                            name="authors"
                            prefixCls="ant-form"
                            required={false}
                            requiredMark={true}
                          >
                            <Col
                              className="ant-form-item-label"
                              span={3}
                            >
                              <div
                                className="ant-col ant-col-3 ant-form-item-label"
                                style={Object {}}
                              >
                                <label
                                  className=""
                                  htmlFor="authors"
                                  title="Authors"
                                >
                                  Authors
                                </label>
                              </div>
                            </Col>
                          </FormItemLabel>
                          <FormItemInput
                            errors={Array []}
                            label="Authors"
                            name={
                              Array [
                                "authors",
                              ]
                            }
                            onDomErrorVisibleChange={[Function]}
                            prefixCls="ant-form"
                            status=""
                            touched={false}
                            validateStatus=""
                            validating={false}
                          >
                            <Col
                              className="ant-form-item-control"
                              span={12}
                            >
                              <div
                                className="ant-col ant-col-12 ant-form-item-control"
                                style={Object {}}
                              >
                                <div
                                  className="ant-form-item-control-input"
                                >
                                  <div
                                    className="ant-form-item-control-input-content"
                                  >
                                    <Component
                                      update={1}
                                      value={
                                        Array [
                                          1,
                                        ]
                                      }
                                    >
                                      <Selector
                                        action="Authors"
                                        display="display_name"
                                        id="authors"
                                        mode="multiple"
                                        onChange={[Function]}
                                        value={
                                          Array [
                                            1,
                                          ]
                                        }
                                      >
                                        <ForwardRef(InternalSelect)
                                          allowClear={true}
                                          autoClearSearchValue={true}
                                          bordered={true}
                                          defaultValue={
                                            Array [
                                              1,
                                            ]
                                          }
                                          filterOption={[Function]}
                                          getPopupContainer={[Function]}
                                          listHeight={128}
                                          loading={false}
                                          mode="multiple"
                                          notFoundContent={null}
                                          onChange={[Function]}
                                          onPopupScroll={[Function]}
                                          onSearch={[Function]}
                                          placeholder="Select authors"
                                          searchValue=""
                                          value={
                                            Array [
                                              1,
                                            ]
                                          }
                                        >
                                          <Select
                                            allowClear={true}
                                            autoClearSearchValue={true}
                                            className=""
                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                            defaultValue={
                                              Array [
                                                1,
                                              ]
                                            }
                                            dropdownClassName=""
                                            filterOption={[Function]}
                                            getPopupContainer={[Function]}
                                            inputIcon={[Function]}
                                            listHeight={128}
                                            listItemHeight={24}
                                            loading={false}
                                            menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                            mode="multiple"
                                            notFoundContent={null}
                                            onChange={[Function]}
                                            onPopupScroll={[Function]}
                                            onSearch={[Function]}
                                            placeholder="Select authors"
                                            prefixCls="ant-select"
                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                            searchValue=""
                                            transitionName="ant-slide-up"
                                            value={
                                              Array [
                                                1,
                                              ]
                                            }
                                          >
                                            <ForwardRef(Select)
                                              allowClear={true}
                                              autoClearSearchValue={true}
                                              className=""
                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                              defaultValue={
                                                Array [
                                                  1,
                                                ]
                                              }
                                              dropdownClassName=""
                                              filterOption={[Function]}
                                              getPopupContainer={[Function]}
                                              inputIcon={[Function]}
                                              listHeight={128}
                                              listItemHeight={24}
                                              loading={false}
                                              menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                              mode="multiple"
                                              notFoundContent={null}
                                              onChange={[Function]}
                                              onPopupScroll={[Function]}
                                              onSearch={[Function]}
                                              placeholder="Select authors"
                                              prefixCls="ant-select"
                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                              searchValue=""
                                              transitionName="ant-slide-up"
                                              value={
                                                Array [
                                                  1,
                                                ]
                                              }
                                            >
                                              <div
                                                className="ant-select ant-select-multiple ant-select-allow-clear ant-select-show-search"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                              >
                                                <SelectTrigger
                                                  containerWidth={null}
                                                  dropdownClassName=""
                                                  empty={false}
                                                  getPopupContainer={[Function]}
                                                  getTriggerDOMNode={[Function]}
                                                  popupElement={
                                                    <ForwardRef(OptionList)
                                                      childrenAsData={true}
                                                      defaultActiveFirstOption={true}
                                                      flattenOptions={
                                                        Array [
                                                          Object {
                                                            "data": Object {
                                                              "children": null,
                                                              "key": "authors1",
                                                              "value": 1,
                                                            },
                                                            "groupOption": false,
                                                            "key": "authors1",
                                                          },
                                                        ]
                                                      }
                                                      height={128}
                                                      id="rc_select_TEST_OR_SSR"
                                                      itemHeight={24}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      multiple={true}
                                                      notFoundContent={null}
                                                      onActiveValue={[Function]}
                                                      onMouseEnter={[Function]}
                                                      onScroll={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "children": null,
                                                            "key": "authors1",
                                                            "value": 1,
                                                          },
                                                        ]
                                                      }
                                                      prefixCls="ant-select"
                                                      searchValue=""
                                                      values={
                                                        Set {
                                                          1,
                                                        }
                                                      }
                                                      virtual={true}
                                                    />
                                                  }
                                                  prefixCls="ant-select"
                                                  transitionName="ant-slide-up"
                                                >
                                                  <Trigger
                                                    action={Array []}
                                                    afterPopupVisibleChange={[Function]}
                                                    autoDestroy={false}
                                                    blurDelay={0.15}
                                                    builtinPlacements={
                                                      Object {
                                                        "bottomLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tl",
                                                            "bl",
                                                          ],
                                                        },
                                                        "bottomRight": Object {
                                                          "offset": Array [
                                                            0,
                                                            4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "tr",
                                                            "br",
                                                          ],
                                                        },
                                                        "topLeft": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "bl",
                                                            "tl",
                                                          ],
                                                        },
                                                        "topRight": Object {
                                                          "offset": Array [
                                                            0,
                                                            -4,
                                                          ],
                                                          "overflow": Object {
                                                            "adjustX": 0,
                                                            "adjustY": 1,
                                                          },
                                                          "points": Array [
                                                            "br",
                                                            "tr",
                                                          ],
                                                        },
                                                      }
                                                    }
                                                    defaultPopupVisible={false}
                                                    destroyPopupOnHide={false}
                                                    focusDelay={0}
                                                    getDocument={[Function]}
                                                    getPopupClassNameFromAlign={[Function]}
                                                    getPopupContainer={[Function]}
                                                    getTriggerDOMNode={[Function]}
                                                    hideAction={Array []}
                                                    mask={false}
                                                    maskClosable={true}
                                                    mouseEnterDelay={0}
                                                    mouseLeaveDelay={0.1}
                                                    onPopupAlign={[Function]}
                                                    onPopupVisibleChange={[Function]}
                                                    popup={
                                                      <div>
                                                        <ForwardRef(OptionList)
                                                          childrenAsData={true}
                                                          defaultActiveFirstOption={true}
                                                          flattenOptions={
                                                            Array [
                                                              Object {
                                                                "data": Object {
                                                                  "children": null,
                                                                  "key": "authors1",
                                                                  "value": 1,
                                                                },
                                                                "groupOption": false,
                                                                "key": "authors1",
                                                              },
                                                            ]
                                                          }
                                                          height={128}
                                                          id="rc_select_TEST_OR_SSR"
                                                          itemHeight={24}
                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                          multiple={true}
                                                          notFoundContent={null}
                                                          onActiveValue={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onScroll={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "children": null,
                                                                "key": "authors1",
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                          prefixCls="ant-select"
                                                          searchValue=""
                                                          values={
                                                            Set {
                                                              1,
                                                            }
                                                          }
                                                          virtual={true}
                                                        />
                                                      </div>
                                                    }
                                                    popupAlign={Object {}}
                                                    popupClassName=""
                                                    popupPlacement="bottomLeft"
                                                    popupStyle={
                                                      Object {
                                                        "minWidth": null,
                                                        "width": null,
                                                      }
                                                    }
                                                    popupTransitionName="ant-slide-up"
                                                    prefixCls="ant-select-dropdown"
                                                    showAction={Array []}
                                                  >
                                                    <Selector
                                                      accessibilityIndex={0}
                                                      activeValue={null}
                                                      allowClear={true}
                                                      autoClearSearchValue={true}
                                                      className=""
                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                      defaultValue={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      domRef={
                                                        Object {
                                                          "current": <div
                                                            class="ant-select-selector"
                                                          >
                                                            <div
                                                              class="ant-select-selection-overflow"
                                                            >
                                                              <div
                                                                class="ant-select-selection-overflow-item"
                                                                style="opacity: 1;"
                                                              >
                                                                <span
                                                                  class="ant-select-selection-item"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-item-content"
                                                                  />
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="ant-select-selection-item-remove"
                                                                    style="user-select: none;"
                                                                    unselectable="on"
                                                                  >
                                                                    <span
                                                                      aria-label="close"
                                                                      class="anticon anticon-close"
                                                                      role="img"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        data-icon="close"
                                                                        fill="currentColor"
                                                                        focusable="false"
                                                                        height="1em"
                                                                        viewBox="64 64 896 896"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </span>
                                                                </span>
                                                              </div>
                                                              <div
                                                                class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                style="opacity: 1;"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-search"
                                                                  style="width: 0px;"
                                                                >
                                                                  <input
                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                    aria-autocomplete="list"
                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                    aria-haspopup="listbox"
                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                    autocomplete="off"
                                                                    class="ant-select-selection-search-input"
                                                                    id="rc_select_TEST_OR_SSR"
                                                                    readonly=""
                                                                    role="combobox"
                                                                    style="opacity: 0;"
                                                                    type="search"
                                                                    unselectable="on"
                                                                    value=""
                                                                  />
                                                                  <span
                                                                    aria-hidden="true"
                                                                    class="ant-select-selection-search-mirror"
                                                                  >
                                                                    
                                                                     
                                                                  </span>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </div>,
                                                        }
                                                      }
                                                      dropdownClassName=""
                                                      filterOption={[Function]}
                                                      getPopupContainer={[Function]}
                                                      id="rc_select_TEST_OR_SSR"
                                                      inputElement={null}
                                                      inputIcon={[Function]}
                                                      key="trigger"
                                                      listHeight={128}
                                                      listItemHeight={24}
                                                      loading={false}
                                                      menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                      mode="multiple"
                                                      multiple={true}
                                                      notFoundContent={null}
                                                      onChange={[Function]}
                                                      onPopupScroll={[Function]}
                                                      onSearch={[Function]}
                                                      onSearchSubmit={[Function]}
                                                      onSelect={[Function]}
                                                      onToggleOpen={[Function]}
                                                      placeholder="Select authors"
                                                      prefixCls="ant-select"
                                                      removeIcon={<ForwardRef(CloseOutlined) />}
                                                      searchValue=""
                                                      showSearch={true}
                                                      tokenWithEnter={false}
                                                      transitionName="ant-slide-up"
                                                      value={
                                                        Array [
                                                          1,
                                                        ]
                                                      }
                                                      values={
                                                        Array [
                                                          Object {
                                                            "disabled": undefined,
                                                            "key": 1,
                                                            "label": null,
                                                            "value": 1,
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="ant-select-selector"
                                                        onClick={[Function]}
                                                        onMouseDown={[Function]}
                                                      >
                                                        <SelectSelector
                                                          accessibilityIndex={0}
                                                          activeValue={null}
                                                          allowClear={true}
                                                          autoClearSearchValue={true}
                                                          className=""
                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                          defaultValue={
                                                            Array [
                                                              1,
                                                            ]
                                                          }
                                                          domRef={
                                                            Object {
                                                              "current": <div
                                                                class="ant-select-selector"
                                                              >
                                                                <div
                                                                  class="ant-select-selection-overflow"
                                                                >
                                                                  <div
                                                                    class="ant-select-selection-overflow-item"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <span
                                                                      class="ant-select-selection-item"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-item-content"
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-item-remove"
                                                                        style="user-select: none;"
                                                                        unselectable="on"
                                                                      >
                                                                        <span
                                                                          aria-label="close"
                                                                          class="anticon anticon-close"
                                                                          role="img"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            data-icon="close"
                                                                            fill="currentColor"
                                                                            focusable="false"
                                                                            height="1em"
                                                                            viewBox="64 64 896 896"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                            />
                                                                          </svg>
                                                                        </span>
                                                                      </span>
                                                                    </span>
                                                                  </div>
                                                                  <div
                                                                    class="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                    style="opacity: 1;"
                                                                  >
                                                                    <div
                                                                      class="ant-select-selection-search"
                                                                      style="width: 0px;"
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autocomplete="off"
                                                                        class="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        readonly=""
                                                                        role="combobox"
                                                                        style="opacity: 0;"
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                      <span
                                                                        aria-hidden="true"
                                                                        class="ant-select-selection-search-mirror"
                                                                      >
                                                                        
                                                                         
                                                                      </span>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                          dropdownClassName=""
                                                          filterOption={[Function]}
                                                          getPopupContainer={[Function]}
                                                          id="rc_select_TEST_OR_SSR"
                                                          inputElement={null}
                                                          inputIcon={[Function]}
                                                          inputRef={
                                                            Object {
                                                              "current": <input
                                                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                aria-autocomplete="list"
                                                                aria-controls="rc_select_TEST_OR_SSR_list"
                                                                aria-haspopup="listbox"
                                                                aria-owns="rc_select_TEST_OR_SSR_list"
                                                                autocomplete="off"
                                                                class="ant-select-selection-search-input"
                                                                id="rc_select_TEST_OR_SSR"
                                                                readonly=""
                                                                role="combobox"
                                                                style="opacity: 0;"
                                                                type="search"
                                                                unselectable="on"
                                                                value=""
                                                              />,
                                                            }
                                                          }
                                                          listHeight={128}
                                                          listItemHeight={24}
                                                          loading={false}
                                                          menuItemSelectedIcon={<ForwardRef(CheckOutlined) />}
                                                          mode="multiple"
                                                          multiple={true}
                                                          notFoundContent={null}
                                                          onChange={[Function]}
                                                          onInputChange={[Function]}
                                                          onInputCompositionEnd={[Function]}
                                                          onInputCompositionStart={[Function]}
                                                          onInputKeyDown={[Function]}
                                                          onInputMouseDown={[Function]}
                                                          onInputPaste={[Function]}
                                                          onPopupScroll={[Function]}
                                                          onSearch={[Function]}
                                                          onSearchSubmit={[Function]}
                                                          onSelect={[Function]}
                                                          onToggleOpen={[Function]}
                                                          placeholder="Select authors"
                                                          prefixCls="ant-select"
                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                          searchValue=""
                                                          showSearch={true}
                                                          tokenWithEnter={false}
                                                          transitionName="ant-slide-up"
                                                          value={
                                                            Array [
                                                              1,
                                                            ]
                                                          }
                                                          values={
                                                            Array [
                                                              Object {
                                                                "disabled": undefined,
                                                                "key": 1,
                                                                "label": null,
                                                                "value": 1,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <Overflow
                                                            data={
                                                              Array [
                                                                Object {
                                                                  "disabled": undefined,
                                                                  "key": 1,
                                                                  "label": null,
                                                                  "value": 1,
                                                                },
                                                              ]
                                                            }
                                                            itemKey="key"
                                                            prefixCls="ant-select-selection-overflow"
                                                            renderItem={[Function]}
                                                            renderRest={[Function]}
                                                            suffix={
                                                              <div
                                                                className="ant-select-selection-search"
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                style={
                                                                  Object {
                                                                    "width": 0,
                                                                  }
                                                                }
                                                              >
                                                                <ForwardRef(Input)
                                                                  accessibilityIndex={0}
                                                                  attrs={Object {}}
                                                                  editable={false}
                                                                  id="rc_select_TEST_OR_SSR"
                                                                  inputElement={null}
                                                                  onChange={[Function]}
                                                                  onCompositionEnd={[Function]}
                                                                  onCompositionStart={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onPaste={[Function]}
                                                                  prefixCls="ant-select"
                                                                  value=""
                                                                />
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="ant-select-selection-search-mirror"
                                                                >
                                                                  
                                                                   
                                                                </span>
                                                              </div>
                                                            }
                                                          >
                                                            <div
                                                              className="ant-select-selection-overflow"
                                                            >
                                                              <Item
                                                                display={true}
                                                                invalidate={false}
                                                                item={
                                                                  Object {
                                                                    "disabled": undefined,
                                                                    "key": 1,
                                                                    "label": null,
                                                                    "value": 1,
                                                                  }
                                                                }
                                                                itemKey={1}
                                                                key="1"
                                                                order={0}
                                                                prefixCls="ant-select-selection-overflow-item"
                                                                registerSize={[Function]}
                                                                renderItem={[Function]}
                                                                responsive={false}
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow-item"
                                                                  style={
                                                                    Object {
                                                                      "height": undefined,
                                                                      "opacity": 1,
                                                                      "order": undefined,
                                                                      "overflowY": undefined,
                                                                      "pointerEvents": undefined,
                                                                      "position": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="ant-select-selection-item"
                                                                  >
                                                                    <span
                                                                      className="ant-select-selection-item-content"
                                                                    />
                                                                    <TransBtn
                                                                      className="ant-select-selection-item-remove"
                                                                      customizeIcon={<ForwardRef(CloseOutlined) />}
                                                                      onClick={[Function]}
                                                                      onMouseDown={[Function]}
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-selection-item-remove"
                                                                        onClick={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(CloseOutlined)>
                                                                          <AntdIcon
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "close",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="close"
                                                                              className="anticon anticon-close"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "close",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="close"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-close"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                                                    key="svg-close-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(CloseOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </span>
                                                                </div>
                                                              </Item>
                                                              <Item
                                                                className="ant-select-selection-overflow-item-suffix"
                                                                display={true}
                                                                invalidate={false}
                                                                order={0}
                                                                prefixCls="ant-select-selection-overflow-item"
                                                                registerSize={[Function]}
                                                                responsive={false}
                                                                style={Object {}}
                                                              >
                                                                <div
                                                                  className="ant-select-selection-overflow-item ant-select-selection-overflow-item-suffix"
                                                                  style={
                                                                    Object {
                                                                      "height": undefined,
                                                                      "opacity": 1,
                                                                      "order": undefined,
                                                                      "overflowY": undefined,
                                                                      "pointerEvents": undefined,
                                                                      "position": undefined,
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    className="ant-select-selection-search"
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "width": 0,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Input
                                                                      accessibilityIndex={0}
                                                                      attrs={Object {}}
                                                                      editable={false}
                                                                      id="rc_select_TEST_OR_SSR"
                                                                      inputElement={null}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      prefixCls="ant-select"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                        aria-autocomplete="list"
                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                        aria-haspopup="listbox"
                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                        autoComplete="off"
                                                                        className="ant-select-selection-search-input"
                                                                        id="rc_select_TEST_OR_SSR"
                                                                        onChange={[Function]}
                                                                        onCompositionEnd={[Function]}
                                                                        onCompositionStart={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onPaste={[Function]}
                                                                        readOnly={true}
                                                                        role="combobox"
                                                                        style={
                                                                          Object {
                                                                            "opacity": 0,
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        unselectable="on"
                                                                        value=""
                                                                      />
                                                                    </Input>
                                                                    <span
                                                                      aria-hidden={true}
                                                                      className="ant-select-selection-search-mirror"
                                                                    >
                                                                       
                                                                    </span>
                                                                  </div>
                                                                </div>
                                                              </Item>
                                                            </div>
                                                          </Overflow>
                                                        </SelectSelector>
                                                      </div>
                                                    </Selector>
                                                  </Trigger>
                                                </SelectTrigger>
                                                <TransBtn
                                                  className="ant-select-clear"
                                                  customizeIcon={<ForwardRef(CloseCircleFilled) />}
                                                  onMouseDown={[Function]}
                                                >
                                                  <span
                                                    aria-hidden={true}
                                                    className="ant-select-clear"
                                                    onMouseDown={[Function]}
                                                    style={
                                                      Object {
                                                        "WebkitUserSelect": "none",
                                                        "userSelect": "none",
                                                      }
                                                    }
                                                    unselectable="on"
                                                  >
                                                    <ForwardRef(CloseCircleFilled)>
                                                      <AntdIcon
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "close-circle",
                                                            "theme": "filled",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-label="close-circle"
                                                          className="anticon anticon-close-circle"
                                                          role="img"
                                                        >
                                                          <IconReact
                                                            icon={
                                                              Object {
                                                                "icon": Object {
                                                                  "attrs": Object {
                                                                    "focusable": "false",
                                                                    "viewBox": "64 64 896 896",
                                                                  },
                                                                  "children": Array [
                                                                    Object {
                                                                      "attrs": Object {
                                                                        "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                      },
                                                                      "tag": "path",
                                                                    },
                                                                  ],
                                                                  "tag": "svg",
                                                                },
                                                                "name": "close-circle",
                                                                "theme": "filled",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              data-icon="close-circle"
                                                              fill="currentColor"
                                                              focusable="false"
                                                              height="1em"
                                                              key="svg-close-circle"
                                                              viewBox="64 64 896 896"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                key="svg-close-circle-svg-0"
                                                              />
                                                            </svg>
                                                          </IconReact>
                                                        </span>
                                                      </AntdIcon>
                                                    </ForwardRef(CloseCircleFilled)>
                                                  </span>
                                                </TransBtn>
                                              </div>
                                            </ForwardRef(Select)>
                                          </Select>
                                        </ForwardRef(InternalSelect)>
                                      </Selector>
                                    </Component>
                                  </div>
                                </div>
                                <ErrorList
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                >
                                  <CSSMotion
                                    motionAppear={true}
                                    motionDeadline={500}
                                    motionName="ant-show-help"
                                    onLeaveEnd={[Function]}
                                    removeOnLeave={true}
                                    visible={false}
                                  >
                                    <DomWrapper />
                                  </CSSMotion>
                                </ErrorList>
                              </div>
                            </Col>
                          </FormItemInput>
                        </div>
                      </Row>
                    </Field>
                  </WrapperField>
                </FormItem>
                <FormItem
                  wrapperCol={
                    Object {
                      "offset": 6,
                      "span": 14,
                    }
                  }
                >
                  <Row
                    className="ant-form-item"
                    key="row"
                  >
                    <div
                      className="ant-row ant-form-item"
                      style={Object {}}
                    >
                      <FormItemLabel
                        prefixCls="ant-form"
                        requiredMark={true}
                        wrapperCol={
                          Object {
                            "offset": 6,
                            "span": 14,
                          }
                        }
                      />
                      <FormItemInput
                        errors={Array []}
                        onDomErrorVisibleChange={[Function]}
                        prefixCls="ant-form"
                        status=""
                        validateStatus=""
                        wrapperCol={
                          Object {
                            "offset": 6,
                            "span": 14,
                          }
                        }
                      >
                        <Col
                          className="ant-form-item-control"
                          offset={6}
                          span={14}
                        >
                          <div
                            className="ant-col ant-col-14 ant-col-offset-6 ant-form-item-control"
                            style={Object {}}
                          >
                            <div
                              className="ant-form-item-control-input"
                            >
                              <div
                                className="ant-form-item-control-input-content"
                              >
                                <Space>
                                  <div
                                    className="ant-space ant-space-horizontal ant-space-align-center"
                                    style={Object {}}
                                  >
                                    <Item
                                      className="ant-space-item"
                                      direction="horizontal"
                                      index={0}
                                      key="ant-space-item-0"
                                      marginDirection="marginRight"
                                      wrap={false}
                                    >
                                      <div
                                        className="ant-space-item"
                                        style={
                                          Object {
                                            "marginRight": 8,
                                          }
                                        }
                                      >
                                        <Button
                                          onClick={[Function]}
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Cancel
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </Item>
                                    <Item
                                      className="ant-space-item"
                                      direction="horizontal"
                                      index={1}
                                      key="ant-space-item-1"
                                      marginDirection="marginRight"
                                      wrap={false}
                                    >
                                      <div
                                        className="ant-space-item"
                                        style={Object {}}
                                      >
                                        <Button
                                          disabled={true}
                                          htmlType="submit"
                                          type="primary"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              disabled={true}
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Update
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </Item>
                                  </div>
                                </Space>
                              </div>
                            </div>
                            <ErrorList
                              errors={Array []}
                              onDomErrorVisibleChange={[Function]}
                            >
                              <CSSMotion
                                motionAppear={true}
                                motionDeadline={500}
                                motionName="ant-show-help"
                                onLeaveEnd={[Function]}
                                removeOnLeave={true}
                                visible={false}
                              >
                                <DomWrapper />
                              </CSSMotion>
                            </ErrorList>
                          </div>
                        </Col>
                      </FormItemInput>
                    </div>
                  </Row>
                </FormItem>
              </form>
            </ForwardRef(Form)>
          </SizeContextProvider>
        </ForwardRef(InternalForm)>
      </QuickEdit>
    </Router>
  </BrowserRouter>
</Provider>
`;
